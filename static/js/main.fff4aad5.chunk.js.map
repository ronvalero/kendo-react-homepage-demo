{"version":3,"sources":["components/ColumnMenu.jsx","components/DetailComponent.jsx","components/StateCell.jsx","components/АssignedTo.jsx","components/LoadingPanel.jsx","queries/github.js","components/KendoGridContainer.jsx","App.jsx","index.js"],"names":["ColumnMenu","props","react_default","a","createElement","main","DetailComponent","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","dataItem","data","makeChartData","node","labels","edges","style","padding","className","height","author","login","dist_es_main","width","text","color","position","font","render","item","point","concat","category","type","categoryField","field","colorField","background","visible","overflowY","react_markdown_default","source","body","React","Component","StateCell","state","fill","paddingLeft","viewBox","version","aria-hidden","fillRule","d","АssignedTo","assignees","nodes","map","index","alt","src","avatarUrl","name","LoadingPanel","loadingPanel","gridContent","document","querySelector","ReactDOM","createPortal","GITHUB_REPO_QUERY","gql","_templateObject","GITHUB_REPO_QUERY_REACT","_templateObject2","KendoGridContainer","_getPrototypeOf2","_this","_len","length","args","Array","_key","call","skip","take","allLabels","uniqueLabels","initialLoad","expandChange","event","expanded","forceUpdate","getOccurrence","array","count","forEach","v","currentLabels","currentLabelsParse","occurrence","e","indexOf","push","labelName","explode","repo","_this2","react_apollo_esm","query","_ref","loading","gridData","error","reactIssues","repository","issues","kendoReactIssues","createdAt","Date","filter","i","ar","Fragment","assign","process","sortable","pageable","onDataStateChange","setState","expandField","onExpandChange","detail","DetailComponent_DetailComponent","title","cell","columnMenu","format","LoadingPanel_LoadingPanel","client","ApolloClient","uri","request","operation","setContext","headers","Authorization","App","selected","handleSelect","kendo_react_layout_dist_es_main","onSelect","KendoGridContainer_KendoGridContainer","src_App","getElementById"],"mappings":"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","file":"static/js/main.fff4aad5.chunk.js","sourcesContent":["import React from 'react';\r\nimport {\r\n    GridColumnMenuSort,\r\n    GridColumnMenuFilter\r\n} from '@progress/kendo-react-grid';\r\n\r\nexport const ColumnMenu = (props) => {\r\n    return (\r\n        <div>\r\n            <GridColumnMenuSort {...props} />\r\n            <GridColumnMenuFilter {...props} />\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport ReactMarkDown from 'react-markdown';\r\nimport {\r\n    Chart,\r\n    ChartLegend,\r\n    ChartSeries,\r\n    ChartSeriesItem,\r\n    ChartSeriesLabels,\r\n    ChartTooltip,\r\n    ChartTitle\r\n} from '@progress/kendo-react-charts';\r\n\r\nexport class DetailComponent extends React.Component {\r\n    render() {\r\n        const dataItem = this.props.dataItem;\r\n        const data = this.props.makeChartData(dataItem.node.labels.edges);\r\n\r\n        const defaultTooltipRender = (item) => {\r\n            if (item.point) {\r\n                return (`${item.point.category} : ${item.point.value}`)\r\n            }\r\n            return \"\"\r\n        };\r\n\r\n        return (\r\n            <div style={{ padding: 0 }}>\r\n                <div className=\"row\" style={{ height: 300 }}>\r\n                    <div className=\"col-2\" >\r\n                        <h4><strong>Author:</strong> {dataItem.node.author.login}</h4>\r\n                        <Chart style={{ width: '100%', height: 250 }}>\r\n                            <ChartTitle text=\"Issue labels\" color=\"black\" position='bottom' font=\"19pt sans-serif\" />\r\n                            <ChartTooltip render={defaultTooltipRender} />\r\n                            <ChartSeries>\r\n                                <ChartSeriesItem type=\"pie\" data={data} categoryField=\"labelName\" field=\"occurrence\" colorField=\"color\">\r\n                                    <ChartSeriesLabels color=\"black\" background=\"none\" visible={false} />\r\n                                </ChartSeriesItem>\r\n                            </ChartSeries>\r\n                            <ChartLegend visible={false} />\r\n                        </Chart>\r\n                    </div>\r\n                    <div className=\"col-10 issue-description\" style={{ overflowY: 'scroll', height: '100%' }}>\r\n                        <h4>Description</h4>\r\n                        <ReactMarkDown source={dataItem.node.body} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nexport function StateCell(props) {\r\n    return (\r\n        <td>\r\n            <span>\r\n                {props.dataItem.node.state === \"OPEN\"\r\n                    ? <svg style={{ fill: 'green', paddingLeft: 2 }} viewBox=\"0 0 14 16\" version=\"1.1\" width=\"14\" height=\"16\" aria-hidden=\"true\"><path fillRule=\"evenodd\" d=\"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z\"></path></svg>\r\n                    : <svg style={{ fill: 'red' }} viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fillRule=\"evenodd\" d=\"M7 10h2v2H7v-2zm2-6H7v5h2V4zm1.5 1.5l-1 1L12 9l4-4.5-1-1L12 7l-1.5-1.5zM8 13.7A5.71 5.71 0 0 1 2.3 8c0-3.14 2.56-5.7 5.7-5.7 1.83 0 3.45.88 4.5 2.2l.92-.92A6.947 6.947 0 0 0 8 1C4.14 1 1 4.14 1 8s3.14 7 7 7 7-3.14 7-7l-1.52 1.52c-.66 2.41-2.86 4.19-5.48 4.19v-.01z\"></path></svg>\r\n                }\r\n            </span>\r\n        </td>\r\n    );\r\n}","import React from 'react';\r\n\r\nexport const АssignedTo = (props) => {\r\n    return (\r\n        <td>\r\n            {props.dataItem.node.assignees.nodes.map((item, index) => (\r\n                (\r\n                    <p key={index} className=\"assign-to-container\">\r\n                        <span>\r\n                            <img\r\n                                className=\"img-circle\"\r\n                                alt=\"User Avatar\"\r\n                                src={item.avatarUrl} style={{ width: 30, height: 30 }}\r\n                            />\r\n                        </span>\r\n                        {item.name}\r\n                    </p>)\r\n            ))}\r\n        </td>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nexport class LoadingPanel extends React.Component {\n    render() {\n        const loadingPanel = (\n            <div className=\"k-loading-mask\">\n                <span className=\"k-loading-text\">Loading</span>\n                <div className=\"k-loading-image\"></div>\n                <div className=\"k-loading-color\"></div>\n            </div>\n        );\n\n        const gridContent = document && document.querySelector('.k-grid-content');\n        return gridContent ? ReactDOM.createPortal(loadingPanel, gridContent) : loadingPanel;\n    }\n}","import gql from \"graphql-tag\";\r\nexport const GITHUB_REPO_QUERY = gql`\r\nquery {\r\n    repository(owner:\"telerik\", name:\"kendo-react\") {\r\n      issues(last:100) {\r\n        edges {\r\n          node {\r\n            title\r\n            state\r\n            number\r\n            body\r\n            createdAt\r\n            author{\r\n              login\r\n              avatarUrl\r\n            }\r\n            assignees (last: 10) {\r\n                nodes {\r\n                  name\r\n                  avatarUrl\r\n                }\r\n            }\r\n            url\r\n            labels(first:5) {\r\n              edges {\r\n                node {\r\n                  name,\r\n                  color\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }`;\r\nexport const GITHUB_REPO_QUERY_REACT = gql`\r\nquery {\r\n    repository(owner:\"facebook\", name:\"react\") {\r\n      issues(last:100) {\r\n        edges {\r\n          node {\r\n            title\r\n            state\r\n            number\r\n            body\r\n            createdAt\r\n            author{\r\n              login\r\n              avatarUrl\r\n            }\r\n            assignees (last: 10) {\r\n                nodes {\r\n                  name\r\n                  avatarUrl\r\n                }\r\n            }\r\n            url\r\n            labels(first:5) {\r\n              edges {\r\n                node {\r\n                  name\r\n                  color\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }`;\r\n\r\n  export function getQuery(repo){\r\n    if(repo === \"kendo\"){\r\n        return GITHUB_REPO_QUERY\r\n    } else if(repo === \"react\"){\r\n        return GITHUB_REPO_QUERY_REACT\r\n    }\r\n  }","import React from \"react\";\r\nimport { Query } from \"react-apollo\";\r\nimport { Grid, GridColumn } from '@progress/kendo-react-grid';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport { ColumnMenu } from './ColumnMenu';\r\nimport { DetailComponent } from './DetailComponent';\r\nimport { StateCell } from './StateCell';\r\nimport { АssignedTo } from './АssignedTo';\r\nimport { LoadingPanel } from './LoadingPanel';\r\n\r\nimport { getQuery } from '../queries/github';\r\nimport kendoReactIssues from '../data/fallBackData.json';\r\nimport reactIssues from '../data/fallBackDataReact.json';\r\n\r\n\r\n\r\nexport class KendoGridContainer extends React.Component {\r\n    state = {\r\n        skip: 0,\r\n        take: 10\r\n    }\r\n    allLabels = [];\r\n    uniqueLabels = [];\r\n    initialLoad = true;\r\n    expandChange = (event) => {\r\n        event.dataItem.expanded = !event.dataItem.expanded;\r\n        this.forceUpdate();\r\n    }\r\n\r\n    getOccurrence = (array, value) => {\r\n        var count = 0;\r\n        array.forEach((v) => (v.name === value.name && count++));\r\n        return count;\r\n    }\r\n\r\n    makeChartData = (currentLabels) => {\r\n        let data = []\r\n        let currentLabelsParse = currentLabels.map(item => {\r\n            item.name = item.node.name\r\n            item.color = item.node.color\r\n            return item\r\n        })\r\n\r\n        this.uniqueLabels.forEach((item) => {\r\n            let occurrence = this.getOccurrence(this.allLabels, item)\r\n            let index = currentLabelsParse.map((e) => { return e.name }).indexOf(item.name);\r\n            if (index >= 0) {\r\n                data.push({\r\n                    occurrence: occurrence,\r\n                    color: item.color,\r\n                    labelName: item.name,\r\n                    explode: true\r\n                })\r\n            } else {\r\n                data.push({\r\n                    occurrence: occurrence,\r\n                    color: item.color,\r\n                    labelName: item.name\r\n                })\r\n            }\r\n        })\r\n\r\n        return data\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Query\r\n                    query={getQuery(this.props.repo)}\r\n                >\r\n                    {({ data, loading, error }) => {\r\n                        let gridData = []\r\n                        if (error) {\r\n                            if (this.props.repo === 'react') {\r\n                                gridData = reactIssues.data.repository.issues.edges;\r\n                            } else {\r\n                                gridData = kendoReactIssues.data.repository.issues.edges;\r\n                            }\r\n\r\n                        } else if (!loading) {\r\n                            gridData = data.repository.issues.edges;\r\n                        }\r\n                        this.allLabels = [];\r\n\r\n                        gridData.map((item,index) => {\r\n                            if(this.initialLoad){\r\n                                index === 0 ? item.expanded = true : item.expanded = false\r\n                                this.initialLoad = false\r\n                            }\r\n                            item.node.createdAt = new Date(item.node.createdAt)\r\n                            item.node.labels.edges.forEach(item => {\r\n                                this.allLabels.push({\r\n                                    name: item.node.name,\r\n                                    color: \"#\"+item.node.color\r\n                                })\r\n                            })\r\n                            return item;\r\n                        });\r\n                        this.uniqueLabels = this.allLabels.filter((item, i, ar) => {\r\n                            let index = ar.map((e) => { return e.name }).indexOf(item.name);\r\n                            if(index === i) {\r\n                                return item\r\n                            }\r\n                         });\r\n\r\n                        return (\r\n                            <React.Fragment>\r\n                                <Grid\r\n                                    data={process(gridData, this.state)}\r\n                                    sortable\r\n                                    pageable\r\n                                    {...this.state}\r\n                                    onDataStateChange={(e) => { this.setState(e.data); }}\r\n                                    expandField=\"expanded\"\r\n                                    onExpandChange={this.expandChange}\r\n                                    style={{ height: 600 }}\r\n                                    detail={(props) => <DetailComponent {...props} makeChartData={this.makeChartData} />}\r\n                                >\r\n                                    <GridColumn field=\"node.number\" title=\"ID\" width={100} />\r\n                                    <GridColumn field=\"node.state\" title=\"State\" cell={StateCell} width={100} columnMenu={ColumnMenu} />\r\n                                    <GridColumn field=\"node.title\" title=\"Issue\" columnMenu={ColumnMenu} />\r\n                                    <GridColumn field=\"node.assignees.node\" title=\"Assigned to\" width={200} cell={АssignedTo} sortable={false} />\r\n                                    <GridColumn field=\"node.createdAt\" title=\"Create at\" width={200} format='{0:yyyy/MM/dd hh:mm}' filter=\"date\" columnMenu={ColumnMenu} />\r\n                                </Grid>\r\n                                {loading && <LoadingPanel />}\r\n                            </React.Fragment>)\r\n                    }}\r\n                </Query>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from \"react\";\nimport { ApolloProvider } from \"react-apollo\";\nimport ApolloClient from \"apollo-boost\";\nimport { KendoGridContainer } from \"./components/KendoGridContainer\";\nimport { TabStrip, TabStripTab } from '@progress/kendo-react-layout';\n\nconst client = new ApolloClient({\n  uri: \"https://api.github.com/graphql\",\n  request: operation => {\n    operation.setContext({\n      headers: {\n        Authorization: `bearer 45d4fb1c20`+`d4899858acd89f0`+`8b673fdefda51d2`\n      }\n    });\n  }\n});\n\nclass App extends Component {\n  state = {\n    selected: 0\n  }\n\n  handleSelect = (e) => {\n    this.setState({ selected: e.selected })\n  }\n  render() {\n    return (\n      <ApolloProvider client={client}>\n        <h1 className=\"demo-heading\">Github Issues</h1>\n        <TabStrip selected={this.state.selected} onSelect={this.handleSelect}>\n          <TabStripTab title=\"KendoReact\">\n            <KendoGridContainer repo=\"kendo\" />\n          </TabStripTab>\n          <TabStripTab title=\"React\">\n            <KendoGridContainer repo=\"react\" />\n          </TabStripTab>\n        </TabStrip>\n      </ApolloProvider>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/main.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}