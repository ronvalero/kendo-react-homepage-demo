(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{172:function(e,t,n){},175:function(e,t,n){"use strict";n.r(t);var r=n(0),o=n.n(r),a=n(11),s=n.n(a),i=n(14),c=n(15),l=n(18),d=n(16),u=n(19),h=n(34),p=n(67),m=n(12),b=n(26),g=function(e){return o.a.createElement("div",null,o.a.createElement(m.d,e),o.a.createElement(m.c,e))},y=n(58),f=n.n(y),_=n(21),v=function(e){function t(){return Object(i.a)(this,t),Object(l.a)(this,Object(d.a)(t).apply(this,arguments))}return Object(u.a)(t,e),Object(c.a)(t,[{key:"render",value:function(){var e=this.props.dataItem,t=this.props.makeChartData(e.node.labels.edges);return o.a.createElement("div",{style:{padding:0}},o.a.createElement("div",{className:"row",style:{height:300}},o.a.createElement("div",{className:"col-2"},o.a.createElement("h4",null,o.a.createElement("strong",null,"Author:")," ",e.node.author.login),o.a.createElement(_.a,{style:{width:"100%",height:250}},o.a.createElement(_.f,{text:"Issue labels",color:"black",position:"bottom",font:"19pt sans-serif"}),o.a.createElement(_.g,{render:function(e){return e.point?"".concat(e.point.category," : ").concat(e.point.value):""}}),o.a.createElement(_.c,null,o.a.createElement(_.d,{type:"pie",data:t,categoryField:"labelName",field:"occurrence",colorField:"color"},o.a.createElement(_.e,{color:"black",background:"none",visible:!1}))),o.a.createElement(_.b,{visible:!1}))),o.a.createElement("div",{className:"col-10 issue-description",style:{overflowY:"scroll",height:"100%"}},o.a.createElement("h4",null,"Description"),o.a.createElement(f.a,{source:e.node.body}))))}}]),t}(o.a.Component);function w(e){return o.a.createElement("td",null,o.a.createElement("span",null,"OPEN"===e.dataItem.node.state?o.a.createElement("svg",{style:{fill:"green",paddingLeft:2},viewBox:"0 0 14 16",version:"1.1",width:"14",height:"16","aria-hidden":"true"},o.a.createElement("path",{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})):o.a.createElement("svg",{style:{fill:"red"},viewBox:"0 0 16 16",version:"1.1",width:"16",height:"16","aria-hidden":"true"},o.a.createElement("path",{fillRule:"evenodd",d:"M7 10h2v2H7v-2zm2-6H7v5h2V4zm1.5 1.5l-1 1L12 9l4-4.5-1-1L12 7l-1.5-1.5zM8 13.7A5.71 5.71 0 0 1 2.3 8c0-3.14 2.56-5.7 5.7-5.7 1.83 0 3.45.88 4.5 2.2l.92-.92A6.947 6.947 0 0 0 8 1C4.14 1 1 4.14 1 8s3.14 7 7 7 7-3.14 7-7l-1.52 1.52c-.66 2.41-2.86 4.19-5.48 4.19v-.01z"}))))}var k=function(e){return o.a.createElement("td",null,e.dataItem.node.assignees.nodes.map(function(e,t){return o.a.createElement("p",{key:t,className:"assign-to-container"},o.a.createElement("span",null,o.a.createElement("img",{className:"img-circle",alt:"User Avatar",src:e.avatarUrl,style:{width:30,height:30}})),e.name)}))},x=function(e){function t(){return Object(i.a)(this,t),Object(l.a)(this,Object(d.a)(t).apply(this,arguments))}return Object(u.a)(t,e),Object(c.a)(t,[{key:"render",value:function(){var e=o.a.createElement("div",{className:"k-loading-mask"},o.a.createElement("span",{className:"k-loading-text"},"Loading"),o.a.createElement("div",{className:"k-loading-image"}),o.a.createElement("div",{className:"k-loading-color"})),t=document&&document.querySelector(".k-grid-content");return t?s.a.createPortal(e,t):e}}]),t}(o.a.Component),C=n(43),I=n(24),E=n.n(I);function L(){var e=Object(C.a)(['\nquery {\n    repository(owner:"facebook", name:"react") {\n      issues(last:100) {\n        edges {\n          node {\n            title\n            state\n            number\n            body\n            createdAt\n            author{\n              login\n              avatarUrl\n            }\n            assignees (last: 10) {\n                nodes {\n                  name\n                  avatarUrl\n                }\n            }\n            url\n            labels(first:5) {\n              edges {\n                node {\n                  name\n                  color\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }']);return L=function(){return e},e}function S(){var e=Object(C.a)(['\nquery {\n    repository(owner:"telerik", name:"kendo-react") {\n      issues(last:100) {\n        edges {\n          node {\n            title\n            state\n            number\n            body\n            createdAt\n            author{\n              login\n              avatarUrl\n            }\n            assignees (last: 10) {\n                nodes {\n                  name\n                  avatarUrl\n                }\n            }\n            url\n            labels(first:5) {\n              edges {\n                node {\n                  name,\n                  color\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }']);return S=function(){return e},e}var U=E()(S()),T=E()(L());var D=n(60),R=n(61),P=function(e){function t(){var e,n;Object(i.a)(this,t);for(var r=arguments.length,o=new Array(r),a=0;a<r;a++)o[a]=arguments[a];return(n=Object(l.a)(this,(e=Object(d.a)(t)).call.apply(e,[this].concat(o)))).state={skip:0,take:10},n.allLabels=[],n.uniqueLabels=[],n.initialLoad=!0,n.expandChange=function(e){e.dataItem.expanded=!e.dataItem.expanded,n.forceUpdate()},n.getOccurrence=function(e,t){var n=0;return e.forEach(function(e){return e.name===t.name&&n++}),n},n.makeChartData=function(e){var t=[],r=e.map(function(e){return e.name=e.node.name,e.color=e.node.color,e});return n.uniqueLabels.forEach(function(e){var o=n.getOccurrence(n.allLabels,e);r.map(function(e){return e.name}).indexOf(e.name)>=0?t.push({occurrence:o,color:e.color,labelName:e.name,explode:!0}):t.push({occurrence:o,color:e.color,labelName:e.name})}),t},n}return Object(u.a)(t,e),Object(c.a)(t,[{key:"render",value:function(){var e,t=this;return o.a.createElement("div",null,o.a.createElement(h.b,{query:(e=this.props.repo,"kendo"===e?U:"react"===e?T:void 0)},function(e){var n=e.data,r=e.loading,a=[];return e.error?a="react"===t.props.repo?R.data.repository.issues.edges:D.data.repository.issues.edges:r||(a=n.repository.issues.edges),t.allLabels=[],a.map(function(e,n){return t.initialLoad&&(e.expanded=0===n,t.initialLoad=!1),e.node.createdAt=new Date(e.node.createdAt),e.node.labels.edges.forEach(function(e){t.allLabels.push({name:e.node.name,color:"#"+e.node.color})}),e}),t.uniqueLabels=t.allLabels.filter(function(e,t,n){if(n.map(function(e){return e.name}).indexOf(e.name)===t)return e}),o.a.createElement(o.a.Fragment,null,o.a.createElement(m.a,Object.assign({data:Object(b.b)(a,t.state),sortable:!0,pageable:!0},t.state,{onDataStateChange:function(e){t.setState(e.data)},expandField:"expanded",onExpandChange:t.expandChange,style:{height:600},detail:function(e){return o.a.createElement(v,Object.assign({},e,{makeChartData:t.makeChartData}))}}),o.a.createElement(m.b,{field:"node.number",title:"ID",width:100}),o.a.createElement(m.b,{field:"node.state",title:"State",cell:w,width:100,columnMenu:g}),o.a.createElement(m.b,{field:"node.title",title:"Issue",columnMenu:g}),o.a.createElement(m.b,{field:"node.assignees.node",title:"Assigned to",width:200,cell:k,sortable:!1}),o.a.createElement(m.b,{field:"node.createdAt",title:"Create at",width:200,format:"{0:yyyy/MM/dd hh:mm}",filter:"date",columnMenu:g})),r&&o.a.createElement(x,null))}))}}]),t}(o.a.Component),j=n(35),O=new p.a({uri:"https://api.github.com/graphql",request:function(e){e.setContext({headers:{Authorization:"bearer 45d4fb1c20d4899858acd89f08b673fdefda51d2"}})}}),A=function(e){function t(){var e,n;Object(i.a)(this,t);for(var r=arguments.length,o=new Array(r),a=0;a<r;a++)o[a]=arguments[a];return(n=Object(l.a)(this,(e=Object(d.a)(t)).call.apply(e,[this].concat(o)))).state={selected:0},n.handleSelect=function(e){n.setState({selected:e.selected})},n}return Object(u.a)(t,e),Object(c.a)(t,[{key:"render",value:function(){return o.a.createElement(h.a,{client:O},o.a.createElement("h1",{className:"demo-heading"},"Github Issues"),o.a.createElement(j.a,{selected:this.state.selected,onSelect:this.handleSelect},o.a.createElement(j.b,{title:"KendoReact"},o.a.createElement(P,{repo:"kendo"})),o.a.createElement(j.b,{title:"React"},o.a.createElement(P,{repo:"react"}))))}}]),t}(r.Component);n(172);s.a.render(o.a.createElement(A,null),document.getElementById("root"))},60:function(e){e.exports={data:{repository:{issues:{edges:[{node:{title:"Documentation improvement.",state:"CLOSED",number:80,body:"\x3c!--\r\n  Please help us process GitHub issues faster by providing the necessary information in the template format that follows.\r\n  We might not be able to assist with issues which lack important information.\r\n--\x3e\r\n\r\n## I'm submitting a...\r\n\x3c!--\r\n  Please submit:\r\n  * Feature requests to our UserVoice Portal at https://goo.gl/HsVr7R.\r\n  * Support requests to https://www.telerik.com/account/support-tickets.\r\n--\x3e\r\n\r\n\x3c!--  Leave one of the following options. --\x3e\r\n* Documentation improvement\r\n\r\n## Suggested improvement\r\n\x3c!--\r\n  * Describe the current (faulty) behavior which is caused by the issue.\r\n  * In the latest package versions, check whether this behavior still represents an issue.\r\n--\x3e\r\nList the Gauges components under the [*dataviz components* section](https://www.telerik.com/kendo-react-ui/components/) similar to the [Angular website](https://www.telerik.com/kendo-angular-ui/components/).\r\n\r\n### P.S. \r\n\r\nGreat work guys, the product is shaping up very well!",createdAt:"2018-09-08T14:18:54Z",author:{login:"mitagg",avatarUrl:"https://avatars0.githubusercontent.com/u/3042889?v=4",__typename:"User"},assignees:{nodes:[{name:"Kiril Peyanski",avatarUrl:"https://avatars1.githubusercontent.com/u/30626787?v=4",__typename:"User"}],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/80",labels:{edges:[{node:{name:"documenation",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Switches behave incorrectly being initially rendered hidden",state:"CLOSED",number:81,body:"## I'm submitting a...\r\n* Bug report\r\n\r\n## Current behavior\r\nSwitches that are within a hidden div display incorrectly when clicked, and cause a JavaScript error when click-dragged.\r\n\r\n## Expected behavior\r\nSwitch appears and behaves correctly after going from hidden to visible.\r\n\r\n## Minimal reproduction of the problem with instructions\r\nhttps://stackblitz.com/edit/react-qwyfmb\r\n1. Create a Switch within a hidden div.\r\n2. Change the hidden div to visible.\r\n3. Try to use the Switch.\r\n\r\n## What is the motivation or use case for changing the behavior?\r\nWe have forms that are tabbed. Sometimes Switches are initially rendered within a hidden tab, and then displayed to the user.\r\n\r\n## Environment\r\nBrowser:\r\n- Chrome (desktop) Version 68.0.3440.106 (Official Build) (64-bit)\r\n- Firefox version 61.0.2 (64-bit)\r\n\r\nSystem:\r\n- Node version: v8.9.3\r\n- Platform: Windows",createdAt:"2018-09-11T00:44:13Z",author:{login:"GeoMarkou",avatarUrl:"https://avatars0.githubusercontent.com/u/12272970?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/81",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:'Invisible value axis labels are still "rendered" on the chart',state:"OPEN",number:82,body:'## I\'m submitting a...\r\nBug Report\r\n\r\n## Current behavior\r\nIn a kendo chart, if you have a value axis that is invisible, but has a label, the chart renders a gap where that axis would be placed.\r\n\r\n## Expected behavior\r\nAn invisible axis shouldn\'t take up any room on the chart surface\r\n\r\n## Minimal reproduction of the problem with instructions\r\nSee: https://stackblitz.com/edit/react-kadcbq-3ezv4y?file=app/main.js\r\n\r\nNotice how the "Degrees" axis on the top chart is not lined up with the "Degrees" axis on the bottom chart. If you remove the label from the (invisible) "Percent" axis in the first chart, the charts then render properly aligned.\r\n\r\n## What is the motivation or use case for changing the behavior?\r\nWe build charts dynamically and allow the user to turn an axis on/off at runtime - currently we now have to remove the labels for each invisible axis, instead of simply toggling their visiblitiy.\r\n\r\nBrowser:\r\n- Chrome (desktop) version 68\r\n',createdAt:"2018-09-13T04:53:37Z",author:{login:"gerrod",avatarUrl:"https://avatars0.githubusercontent.com/u/865932?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/82",labels:{edges:[{node:{name:"pkg:charts",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"DataItemKey example missing",state:"CLOSED",number:83,body:"## I'm submitting a...\r\n* Documentation issue or request\r\n\r\n## Current behavior\r\nThe documentation for [`ComboBox.dataItemKey`](https://www.telerik.com/kendo-react-ui/components/dropdowns/api/ComboBoxProps/#toc-dataitemkey) references an [example](https://www.telerik.com/kendo-react-ui/components/dropdowns/combobox/binding/#toc-datasets-of-objects), but the linked example does not show how to use `dataItemKey`.\r\n\r\n## Expected behavior\r\nLink to an example that shows the intended usage/values for `dataItemKey`.",createdAt:"2018-09-17T23:04:48Z",author:{login:"thejroberts",avatarUrl:"https://avatars1.githubusercontent.com/u/1132018?v=4",__typename:"User"},assignees:{nodes:[{name:"Nikolay Stoychev",avatarUrl:"https://avatars0.githubusercontent.com/u/13251479?v=4",__typename:"User"}],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/83",labels:{edges:[{node:{name:"documenation",__typename:"Label"},__typename:"LabelEdge"},{node:{name:"pkg:dropdowns",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"ComboBox suggestions do not work when also filtering",state:"CLOSED",number:84,body:'\x3c!--\r\n  Please help us process GitHub issues faster by providing the necessary information in the template format that follows.\r\n  We might not be able to assist with issues which lack important information.\r\n--\x3e\r\n\r\n## I\'m submitting a...\r\n\x3c!--\r\n  Please submit:\r\n  * Feature requests to our UserVoice Portal at https://goo.gl/HsVr7R.\r\n  * Support requests to https://www.telerik.com/account/support-tickets.\r\n--\x3e\r\n\r\n\x3c!--  Leave one of the following options. --\x3e\r\n* Regression report \x3c!-- A behavior that used to work and stopped working in a new release. --\x3e\r\n\r\n## Current behavior\r\n**ComboBox**: When using both [suggestions](https://www.telerik.com/kendo-react-ui/components/dropdowns/combobox/suggestions/) and [filtering](https://www.telerik.com/kendo-react-ui/components/dropdowns/combobox/filtering/), part of the suggested text is left in the filter text box leading to the selection being cleared when focus is lost due to keyboard navigation.\r\n\x3c!--\r\n  * Describe the current (faulty) behavior which is caused by the issue.\r\n  * In the latest package versions, check whether this behavior still represents an issue.\r\n--\x3e\r\n\r\n## Expected behavior\r\nThe ComboBox should maintain the selection when focus is lost. Suggested text should be removed/ignored when an item is selected by keyboard.\r\n\r\n## Minimal reproduction of the problem with instructions\r\nhttps://stackblitz.com/edit/react-s5aths\r\nhttps://react-s5aths.stackblitz.io\r\n\r\n1. Type "x" in the filter text box.\r\n2. Press the "down" arrow key to select "X-Large"\r\n3. Notice the suggested text ("-Large") does not clear -- it is appended to the text.\r\n4. Press "tab" to remove focus.\r\n5. Notice the selection is cleared.\r\n\r\n\x3c!--\r\nFor bug reports, please provide the **STEPS TO REPRODUCE** and, if possible, a **MINIMAL DEMO** of the issue. You can use https://plnkr.co or share your project in a public repository.\r\n\r\n  1. Find an example in [the documentation](http://www.telerik.com/kendo-angular-ui/components/) that looks similar to your case.\r\n  2. Open it in Plunker by using the **OPEN AS PLUNKER** button.\r\n  3. Modify the plunk, so that the issue is reproducible in it. Try to include the minimum possible amount of code.\r\n  4. Save the plunk by using the blue **Save** button at the top.\r\n  5. Copy the link from the address bar of the browser.\r\n--\x3e\r\n\r\nBrowser:\r\n\x3c!-- Leave only the browsers that you tested the issue with. --\x3e\r\n- Chrome (desktop) version 68.0.3440.106\r\n\r\nSystem:\r\n- Platform:  Windows\r\n\r\n## Notes\r\n\x3c!-- Add any additional information that might be relevant. --\x3e\r\n This worked prior to the 2.0 release.',createdAt:"2018-09-18T06:17:28Z",author:{login:"thejroberts",avatarUrl:"https://avatars1.githubusercontent.com/u/1132018?v=4",__typename:"User"},assignees:{nodes:[{name:"Nikolay Stoychev",avatarUrl:"https://avatars0.githubusercontent.com/u/13251479?v=4",__typename:"User"}],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/84",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Add support for time in the DateRangePicker component.",state:"CLOSED",number:85,body:'Add support for "time" change in the DateRangePicker component.\r\n\r\nCurrently, the component value does not update if the time portion of the value is changed.\r\n\r\nPlease share your thoughts on this one.\r\n',createdAt:"2018-09-18T08:35:25Z",author:{login:"simonssspirit",avatarUrl:"https://avatars2.githubusercontent.com/u/11087921?v=4",__typename:"User"},assignees:{nodes:[{name:"Kiril Peyanski",avatarUrl:"https://avatars1.githubusercontent.com/u/30626787?v=4",__typename:"User"}],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/85",labels:{edges:[{node:{name:"discussion",__typename:"Label"},__typename:"LabelEdge"},{node:{name:"enhancement",__typename:"Label"},__typename:"LabelEdge"},{node:{name:"pkg:dateinputs",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"The disabled property of the Date Picker is not changed dynamically based on the state value.",state:"CLOSED",number:86,body:"The disabled property of the Date Picker is not changed dynamically based on the state value.\r\n\r\nThe issue can be observed here: https://stackblitz.com/edit/react-3hsjfn?file=app/main.js\r\n\r\nThis was working in the 1.2 version of the component.",createdAt:"2018-09-18T12:07:19Z",author:{login:"simonssspirit",avatarUrl:"https://avatars2.githubusercontent.com/u/11087921?v=4",__typename:"User"},assignees:{nodes:[{name:"Kiril Peyanski",avatarUrl:"https://avatars1.githubusercontent.com/u/30626787?v=4",__typename:"User"}],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/86",labels:{edges:[{node:{name:"bug",__typename:"Label"},__typename:"LabelEdge"},{node:{name:"pkg:dateinputs",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"The DatePicker Popup is not positioned correctly when opened at the end of the page.",state:"CLOSED",number:87,body:"The DatePicker Popup is not positioned correctly when opened at the end of the page.\r\n\r\nThe could be observed here: https://stackblitz.com/edit/react-kvyewp?file=app/main.js\r\n\r\nIt is working correctly in version 1.2.",createdAt:"2018-09-18T12:26:41Z",author:{login:"simonssspirit",avatarUrl:"https://avatars2.githubusercontent.com/u/11087921?v=4",__typename:"User"},assignees:{nodes:[{name:"Nikolay Stoychev",avatarUrl:"https://avatars0.githubusercontent.com/u/13251479?v=4",__typename:"User"},{name:"Asen Arizanov",avatarUrl:"https://avatars3.githubusercontent.com/u/24224244?v=4",__typename:"User"},{name:"Kiril Peyanski",avatarUrl:"https://avatars1.githubusercontent.com/u/30626787?v=4",__typename:"User"}],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/87",labels:{edges:[{node:{name:"bug",__typename:"Label"},__typename:"LabelEdge"},{node:{name:"pkg:dateinputs",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"ComboBox does not capture click event",state:"CLOSED",number:88,body:"\x3c!--\r\n  Please help us process GitHub issues faster by providing the necessary information in the template format that follows.\r\n  We might not be able to assist with issues which lack important information.\r\n--\x3e\r\n\r\n## I'm submitting a...\r\n\x3c!--\r\n  Please submit:\r\n  * Feature requests to our UserVoice Portal at https://goo.gl/HsVr7R.\r\n  * Support requests to https://www.telerik.com/account/support-tickets.\r\n--\x3e\r\n\r\n\x3c!--  Leave one of the following options. --\x3e\r\nBug report \x3c!-- Please search for a similar issue before you submit a bug report. --\x3e\r\n\r\n## Current behavior\r\nClicking on the ComboBox button to open the dropdown propagates a click event to the ancestors.\r\n\x3c!--\r\n  * Describe the current (faulty) behavior which is caused by the issue.\r\n  * In the latest package versions, check whether this behavior still represents an issue.\r\n--\x3e\r\n\r\n## Expected behavior\r\nThe click event should be captured and not allowed to propagate.\r\n\x3c!-- Describe what the desired behavior would be. --\x3e\r\n\r\n## Minimal reproduction of the problem with instructions\r\nhttps://stackblitz.com/edit/react-xsw138\r\nhttps://react-xsw138.stackblitz.io\r\n\r\n1. Click on the dropdown button.\r\n2. Notice that the parent DIV's click event handler is fired (logs a message in the event log).\r\n",createdAt:"2018-09-20T00:54:52Z",author:{login:"thejroberts",avatarUrl:"https://avatars1.githubusercontent.com/u/1132018?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/88",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"DropDownList valueField property was removed",state:"CLOSED",number:89,body:"## I'm submitting a...\r\n* Regression report\r\n* Suggestion for improvement\r\n\r\n## Current behavior\r\nDropdownlist no longer displays text based on ID on load, and changing the value causes errors in our application. This is due to the valueField property being removed which we were using heavily.\r\n\r\n## Expected behavior\r\nvalueField or some equivalent being re-implemented.\r\n\r\n## Minimal reproduction of the problem with instructions\r\nhttps://stackblitz.com/edit/react-s5mclz\r\n\r\n## What is the motivation or use case for changing the behavior?\r\nWe have a form which loads data from the database to be edited. We often have 'reference' fields e.g Foreign Keys. We allow our users to change these using a drop down list with the valid options. This has become more difficult since the removal of the valueField option.\r\n\r\nIt's definitely possible to work around this issue but it seems like a strange choice to remove the property.\r\n\r\n## Environment\r\nBrowser:\r\n- Chrome (desktop) Version 69.0.3497.100 (Official Build) (64-bit)\r\n\r\nSystem:\r\n- Node version: v8.9.3\r\n- NPM version: 6.4.1\r\n- Platform:  Windows",createdAt:"2018-09-25T03:14:29Z",author:{login:"GeoMarkou",avatarUrl:"https://avatars0.githubusercontent.com/u/12272970?v=4",__typename:"User"},assignees:{nodes:[{name:"Nikolay Stoychev",avatarUrl:"https://avatars0.githubusercontent.com/u/13251479?v=4",__typename:"User"}],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/89",labels:{edges:[{node:{name:"discussion",__typename:"Label"},__typename:"LabelEdge"},{node:{name:"enhancement",__typename:"Label"},__typename:"LabelEdge"},{node:{name:"pkg:dropdowns",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"DropDowns ComboBox : Keyboard Navigation ",state:"OPEN",number:90,body:'According to the documentation here : [link](https://www.telerik.com/kendo-react-ui/components/dropdowns/combobox/keyboard-navigation/)\r\n\r\nI\'m expecting from the example of the link above to : \r\n1- Open the _Popup_\r\n2- Select an item, "_Baseball_" for example.\r\n3- Open the _Popup_ again\r\n4- Navigate using **Up and Down Arrows**\r\n5- Hit **ESC**\r\n6- The item "_Baseball_" should be selected, unless I hit **Enter** in step 5.\r\n\r\nThe documentation stresses that the Up arrow : "_Selects the previous available item._" which is right. The second part is incorrect "_Highlights it only if the popup is open._" I believe it\'s a bug here and should be fixed.',createdAt:"2018-09-27T14:13:57Z",author:{login:"ZiedHf",avatarUrl:"https://avatars3.githubusercontent.com/u/7974028?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/90",labels:{edges:[{node:{name:"enhancement",__typename:"Label"},__typename:"LabelEdge"},{node:{name:"pkg:dropdowns",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Add ability to disable dates in the DatePicker.",state:"CLOSED",number:91,body:"We can expose a Date render that will allow disabling dates based on specific criteria. This will also allow customizing the appearance of the date.",createdAt:"2018-10-01T07:09:20Z",author:{login:"simonssspirit",avatarUrl:"https://avatars2.githubusercontent.com/u/11087921?v=4",__typename:"User"},assignees:{nodes:[{name:"Kiril Peyanski",avatarUrl:"https://avatars1.githubusercontent.com/u/30626787?v=4",__typename:"User"}],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/91",labels:{edges:[{node:{name:"enhancement",__typename:"Label"},__typename:"LabelEdge"},{node:{name:"pkg:dateinputs",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Bootstrap Input Addon Style Issue with MaskedTextBox",state:"OPEN",number:92,body:'## I\'m submitting a...\r\n* Bug report\r\n\r\n## Current behavior\r\n<img width="361" alt="screen shot 2018-10-03 at 10 56 54 am" src="https://user-images.githubusercontent.com/4108718/46419146-47e3c300-c6fb-11e8-83a3-0d2ce47fbac9.png">\r\n\r\n## Expected behavior\r\nShouldn\'t have a border radius on the left side, and it should have a rounded border radius on the right side.\r\n\r\n## Minimal reproduction of the problem with instructions\r\nhttps://stackblitz.com/edit/react-jhagez?file=app%2Fmain.js\r\n\r\n## What is the motivation or use case for changing the behavior?\r\nBorder radius used doesn\'t look great\r\n\r\n## Environment\r\n\r\nBrowser:\r\n- Chrome (desktop) version 69.0.3497.100 \r\n\r\nSystem:\r\n- TypeScript version: 3.1.1\r\n- Node version: 10.9.0 NPM Version: 6.4.1\r\n- Platform:  macOS\r\n\r\n\x3c!-- Add any additional information that might be relevant. --\x3e\r\n',createdAt:"2018-10-03T15:00:05Z",author:{login:"PaitoAnderson",avatarUrl:"https://avatars0.githubusercontent.com/u/4108718?v=4",__typename:"User"},assignees:{nodes:[{name:"Stefan Stefanov",avatarUrl:"https://avatars2.githubusercontent.com/u/11087921?v=4",__typename:"User"}],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/92",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Popup does not always reposition on scroll",state:"CLOSED",number:93,body:"Affects DropDown or DatePicker inside the filter row of scrollable Grid.\r\nhttps://stackblitz.com/edit/react-ughtbz-zt6zer",createdAt:"2018-10-05T07:15:00Z",author:{login:"Xizario",avatarUrl:"https://avatars0.githubusercontent.com/u/9458606?v=4",__typename:"User"},assignees:{nodes:[{name:"Nikolay Stoychev",avatarUrl:"https://avatars0.githubusercontent.com/u/13251479?v=4",__typename:"User"}],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/93",labels:{edges:[{node:{name:"pkg:popup",__typename:"Label"},__typename:"LabelEdge"},{node:{name:"wontfix",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Checking state inside DropDownList handleChange returns old state",state:"CLOSED",number:94,body:"Hi,\r\nI followed the example at : \r\nhttps://www.telerik.com/kendo-react-ui/components/dropdowns/dropdownlist/binding/#toc-datasets-of-objects\r\nIf I try to do console.log(this.state) inside the handleChange method, I would get the old selected value.Adding setTimeout with 0 ms delay would work.Any idea why this is not working?\r\n`handleChange = (event) => {\r\n        this.setState({\r\n            value: event.target.value\r\n        });\r\n        //this would give old state \r\n      console.log(JSON.stringify(this.state));\r\n      // this works\r\n that = this;\r\nsetTimeout(function () {\r\n          console.log(JSON.stringify(that.state));\r\n      }, 0);\r\n    }`",createdAt:"2018-10-08T07:49:27Z",author:{login:"madani2010",avatarUrl:"https://avatars2.githubusercontent.com/u/16631814?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/94",labels:{edges:[{node:{name:"question",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Sort icon not shown when sortable option is disabled",state:"CLOSED",number:95,body:"Currently the sort icon of the Grid columns is not shown when sortable option is disabled and sorting is applied to the Grid. This is incorrect behavior as the Grid actually marks the column as selected and the data is sorted.",createdAt:"2018-10-09T11:57:21Z",author:{login:"vladimirivanoviliev",avatarUrl:"https://avatars3.githubusercontent.com/u/2195951?v=4",__typename:"User"},assignees:{nodes:[{name:"Vasil Raev",avatarUrl:"https://avatars0.githubusercontent.com/u/9458606?v=4",__typename:"User"}],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/95",labels:{edges:[{node:{name:"bug",__typename:"Label"},__typename:"LabelEdge"},{node:{name:"pkg:grid",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Grid text filters throw error when changing comparison operator with no string",state:"CLOSED",number:96,body:"\x3c!--\r\n  Please help us process GitHub issues faster by providing the necessary information in the template format that follows.\r\n  We might not be able to assist with issues which lack important information.\r\n--\x3e\r\n\r\n## I'm submitting a...\r\n* Bug report\r\n\r\n## Current behavior\r\nIf you change the operator on a string filter without a string value populated you get the error Cannot read property 'replace' of null.\r\n\r\n## Expected behavior\r\nIt should not throw an error and recognize it as an null string.\r\n\r\n## Minimal reproduction of the problem with instructions\r\nhttps://stackblitz.com/edit/react-byxuyp?file=app/main.js\r\nthis is a direct copy of the demo on your site. Change the operator on the product name column without any text in the textbox and an error is thrown.\r\n\r\n\r\n## What is the motivation or use case for changing the behavior?\r\nErrors should not be thrown for no reason.\r\n\r\n## Environment\r\n\r\nPackage versions:\r\nreproducible on demo site.\r\n\r\nBrowser:\r\n\x3c!-- Leave only the browsers that you tested the issue with. --\x3e\r\n- Chrome (desktop) version 69\r\n\r\nSystem:\r\nreproducible on demo site.\r\n\r\n\r\n",createdAt:"2018-10-12T19:45:54Z",author:{login:"jmeyer11",avatarUrl:"https://avatars3.githubusercontent.com/u/9612633?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/96",labels:{edges:[{node:{name:"bug",__typename:"Label"},__typename:"LabelEdge"},{node:{name:"pkg:grid",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:'The request for "data:font/ttf;base64" font when multiple Editor React wrappers are slow',state:"OPEN",number:97,body:'The request for "data:font/ttf;base64" font when multiple Editor React wrappers are slow. It takes 5-7 seconds compare less than a second for the standard jQuery version:\r\n\r\nWrapper: https://stackblitz.com/edit/react-bjv5s9?file=app%2Fmain.js\r\njQuery: https://dojo.telerik.com/oQaYoLiT/2',createdAt:"2018-10-15T11:06:34Z",author:{login:"simonssspirit",avatarUrl:"https://avatars2.githubusercontent.com/u/11087921?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/97",labels:{edges:[{node:{name:"bug",__typename:"Label"},__typename:"LabelEdge"},{node:{name:"wrappers",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Unable to enter fractions starting with .0 in NumericTextBox",state:"OPEN",number:98,body:'\x3c!--\r\n  Please help us process GitHub issues faster by providing the necessary information in the template format that follows.\r\n  We might not be able to assist with issues which lack important information.\r\n--\x3e\r\n\r\n## I\'m submitting a...\r\n\x3c!--\r\n  Please submit:\r\n  * Feature requests to our UserVoice Portal at https://goo.gl/HsVr7R.\r\n  * Support requests to https://www.telerik.com/account/support-tickets.\r\n--\x3e\r\n\r\n\x3c!--  Leave one of the following options. --\x3e\r\n* Bug report \x3c!-- Please search for a similar issue before you submit a bug report. --\x3e\r\n\r\n## Current behavior\r\n\x3c!--\r\n  * Describe the current (faulty) behavior which is caused by the issue.\r\n  * In the latest package versions, check whether this behavior still represents an issue.\r\n--\x3e\r\nEntering fractions such as \'.05\' in NumericTextBox results in the value getting set to whole number -> .05 becomes \'5\'\r\n\r\n## Expected behavior\r\n\x3c!-- Describe what the desired behavior would be. --\x3e\r\nThe NumericTextBox should allow fractional inputs such as .05 .01 etc. It should not be required to input theses as 0.05, 0.01 etc as users tend to skip the \'0.\' part in most cases.\r\n\r\n## Minimal reproduction of the problem with instructions\r\n\x3c!--\r\nFor bug reports, please provide the **STEPS TO REPRODUCE** and, if possible, a **MINIMAL DEMO** of the issue. You can use https://plnkr.co or share your project in a public repository.\r\n\r\n  1. Find an example in [the documentation](http://www.telerik.com/kendo-angular-ui/components/) that looks similar to your case.\r\n  2. Open it in Plunker by using the **OPEN AS PLUNKER** button.\r\n  3. Modify the plunk, so that the issue is reproducible in it. Try to include the minimum possible amount of code.\r\n  4. Save the plunk by using the blue **Save** button at the top.\r\n  5. Copy the link from the address bar of the browser.\r\n--\x3e\r\nGo To:\r\nhttps://www.telerik.com/kendo-react-ui/components/inputs/numerictextbox/#toc-basic-usage\r\nIn the basic usage example, input value .05 in the NumericTextBox input. It shows value as \'5\' instead of 0.05 or .05.\r\n\r\n## What is the motivation or use case for changing the behavior?\r\n\x3c!-- Describe the motivation or the concrete use case. --\x3e\r\nUser input is unexpectedly changed to incorrect value that many order of magnitude larger.\r\n\r\n## Environment\r\n\r\nPackage versions:\r\n\x3c!--\r\n  Paste the output from "npm ls --depth 0" in the code block below.\r\n  Omit this step if the problem is reproducible on our demo site.\r\n--\x3e\r\n```\r\n    "@progress/kendo-react-inputs": "2.2.0"\r\n```\r\n\r\nBrowser:\r\n\x3c!-- Leave only the browsers that you tested the issue with. --\x3e\r\n- Chrome (desktop) version 69.0.3497.100\r\n- Firefox version 61.0.1\r\n- IE version 11.0.9600.19035\r\n\r\nSystem:\r\n- Node version:  v6.11.5, v8.9.1 \x3c!-- run "node --version" and "npm --version"--\x3e\r\n- Platform:  Linux, Windows\r\n\r\n\x3c!-- Add any additional information that might be relevant. --\x3e\r\n',createdAt:"2018-10-15T17:05:58Z",author:{login:"georgeri",avatarUrl:"https://avatars0.githubusercontent.com/u/23392401?v=4",__typename:"User"},assignees:{nodes:[{name:"Stefan Stefanov",avatarUrl:"https://avatars2.githubusercontent.com/u/11087921?v=4",__typename:"User"}],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/98",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Error in flatData",state:"CLOSED",number:99,body:"The grid was not showing, with the error **Cannot read property 'length' of undefined** at flatData.\r\n",createdAt:"2018-10-15T19:57:21Z",author:{login:"menisck",avatarUrl:"https://avatars3.githubusercontent.com/u/961248?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/99",labels:{edges:[{node:{name:"bug",__typename:"Label"},__typename:"LabelEdge"},{node:{name:"pkg:grid",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Grid component GridNoRecords not working after version 2.2.0",state:"CLOSED",number:100,body:"## Current behavior\r\nAdding the `GridNoRecords` component to `Grid` component is not working after version 2.2.0\r\n\r\nDemo: https://www.telerik.com/kendo-react-ui/components/grid/api/GridNoRecords/\r\n\r\nBrowser:\r\n\r\n- Chrome (desktop)",createdAt:"2018-10-17T04:40:37Z",author:{login:"tienlx93",avatarUrl:"https://avatars0.githubusercontent.com/u/9817634?v=4",__typename:"User"},assignees:{nodes:[{name:"Vasil Raev",avatarUrl:"https://avatars0.githubusercontent.com/u/9458606?v=4",__typename:"User"}],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/100",labels:{edges:[{node:{name:"bug",__typename:"Label"},__typename:"LabelEdge"},{node:{name:"pkg:grid",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Text not placing at the center of donut when using kendo-charts in react",state:"CLOSED",number:101,body:'\x3c!--\r\n  Please help us process GitHub issues faster by providing the necessary information in the template format that follows.\r\n  We might not be able to assist with issues which lack important information.\r\n--\x3e\r\n\r\n## I\'m submitting a...\r\n\x3c!--\r\n  Please submit:\r\n  * Feature requests to our UserVoice Portal at https://goo.gl/HsVr7R.\r\n  * Support requests to https://www.telerik.com/account/support-tickets.\r\n--\x3e\r\n\r\n\x3c!--  Leave one of the following options. --\x3e\r\n* Documentation issue or request\r\n\r\n## Current behavior\r\n  Text is being rendered at the bottom of the donut chart with increased size of donut and hiding some parts of the donut at the bottom\r\n\r\n## Expected behavior\r\nText is to be rendered at the center hole of the donut\r\n\r\n## Minimal reproduction of the problem with instructions\r\nIn the documenttion, one it is working with donutCenterRender but locally it isn\'t working. https://www.telerik.com/kendo-react-ui/components/charts/series-types/donut/\r\n\r\n## My code\r\n```\r\nimport React, { Component } from \'react\';\r\nimport \'hammerjs\';\r\nimport { Chart, ChartLegend, ChartSeries, ChartSeriesItem, ChartSeriesLabels } from \'@progress/kendo-react-charts\';\r\n\r\nconst donutCenterRenderer = () => (<span>22.5%</span>);\r\nconst labelContent = (e) => (e.category);\r\n\r\nclass Donut extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        return(\r\n            <div className = "container">\r\n                <Chart donutCenterRender = {donutCenterRenderer} seriesColors={[\'#050594\', \'#0E0EC3\', \'#4343DD\', \'#8181D9\', \'#B4B4E1\', \'white\']}>\r\n                    <ChartSeries SeriesLabelsPosition = "center">\r\n                        <ChartSeriesItem type = "donut" data = {this.props.data} categoryField = "kind" field = "share" holeSize={50}>\r\n                        </ChartSeriesItem>\r\n                    </ChartSeries>\r\n                    <ChartLegend visible = {true} labels = "black" position = "bottom"/>\r\n                </Chart>\r\n                <h5>Donut chart</h5>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Donut;\r\n``` \r\n\r\n## data values:\r\n```\r\ndata: [ {\r\n                "kind": "Hydroelectric", "share": 0.175,\r\n            }, {\r\n                "kind": "Nuclear", "share": 0.238\r\n            }, {\r\n                "kind": "Coal", "share": 0.118\r\n            }, {\r\n                "kind": "Solar", "share": 0.052\r\n            }, {\r\n                "kind": "Wind", "share": 0.225\r\n            }, {\r\n                "kind": "Other", "share": 0.192\r\n            } ],\r\n```\r\n',createdAt:"2018-10-17T07:42:56Z",author:{login:"cnavneet",avatarUrl:"https://avatars0.githubusercontent.com/u/27512465?v=4",__typename:"User"},assignees:{nodes:[{name:"Stefan Stefanov",avatarUrl:"https://avatars2.githubusercontent.com/u/11087921?v=4",__typename:"User"}],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/101",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Fix NumericTextBox behaviour when min and max are set.",state:"OPEN",number:102,body:"Fix NumericTextBox behavior when min and max are set.\r\n\r\nIn the following example, a valid value can only be set using copy-paste and cannot be written into the NumericTextBox:\r\n\r\nhttps://stackblitz.com/edit/react-byth3m-x2xp9q?file=app/main.js",createdAt:"2018-10-17T07:53:16Z",author:{login:"simonssspirit",avatarUrl:"https://avatars2.githubusercontent.com/u/11087921?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/102",labels:{edges:[{node:{name:"enhancement",__typename:"Label"},__typename:"LabelEdge"},{node:{name:"pkg:inputs",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Add the dragged column into the GridColumnReorderEvent",state:"OPEN",number:103,body:"The dragged column to be available in [GridColumnReorderEvent](https://www.telerik.com/kendo-react-ui/components/grid/api/GridColumnReorderEvent/).\r\nRequested in [our forums](https://www.telerik.com/forums/how-to-determine-column-that-was-moved-by-column-reordering-feature).\r\n",createdAt:"2018-10-18T06:06:08Z",author:{login:"Xizario",avatarUrl:"https://avatars0.githubusercontent.com/u/9458606?v=4",__typename:"User"},assignees:{nodes:[{name:"Vasil Raev",avatarUrl:"https://avatars0.githubusercontent.com/u/9458606?v=4",__typename:"User"}],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/103",labels:{edges:[{node:{name:"enhancement",__typename:"Label"},__typename:"LabelEdge"},{node:{name:"pkg:grid",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Docs Typo: Dialog - Keyboard Navigation (Tap vs Tab)",state:"CLOSED",number:104,body:"## I'm submitting a...\r\n\r\n* Documentation issue or request\r\n\r\n## Current behavior\r\n\r\nThe word, `Tab` is misspelled on the page, [Keyboard Navigation](https://www.telerik.com/kendo-react-ui/components/dialog/keyboard-navigation/):\r\n\r\n>When the Dialog is opened, the initial focus is set on the `Dialog` element. This approach enables the user to immediately select or navigate between the action buttons by using the `Tap` and `Shift`+`Tap` keys, and to close the Dialog with the `Esc` button.\r\n>\r\n>You can set the initial focus to one of the action buttons by using the [`autoFocus`](http://www.jackcallister.com/2014/11/25/autofocus-in-react-js.html) attribute.\r\n>\r\n>| SHORTCUT                            | DESCRIPTION                                        |\r\n>|:---                                 |:---                                                |\r\n>| `Esc`                               | Calls the `onClose` event handler.                 |\r\n>| `Shift`+`Tap`                       | Moves the focus to the previous focusable element. |\r\n>| `Tap`                               | Moves the focus to the next focusable element.     |\r\n\r\n## Expected behavior\r\n\r\n>When the Dialog is opened, the initial focus is set on the `Dialog` element. This approach enables the user to immediately select or navigate between the action buttons by using the `Tab` and `Shift`+`Tab` keys, and to close the Dialog with the `Esc` button.\r\n>\r\n>You can set the initial focus to one of the action buttons by using the [`autoFocus`](http://www.jackcallister.com/2014/11/25/autofocus-in-react-js.html) attribute.\r\n>\r\n>| SHORTCUT                            | DESCRIPTION                                        |\r\n>|:---                                 |:---                                                |\r\n>| `Esc`                               | Calls the `onClose` event handler.                 |\r\n>| `Shift`+`Tab`                       | Moves the focus to the previous focusable element. |\r\n>| `Tab`                               | Moves the focus to the next focusable element.     |\r\n\r\n## Minimal reproduction of the problem with instructions\r\n\r\nNot applicable\r\n\r\n## What is the motivation or use case for changing the behavior?\r\n\r\nFix spelling for documentation\r\n\r\n## Environment\r\n\r\nPackage versions: N/A\r\nBrowser: N/A\r\nSystem: N/A",createdAt:"2018-10-19T07:25:07Z",author:{login:"jbristowe",avatarUrl:"https://avatars2.githubusercontent.com/u/71493?v=4",__typename:"User"},assignees:{nodes:[{name:"Stefan Stefanov",avatarUrl:"https://avatars2.githubusercontent.com/u/11087921?v=4",__typename:"User"}],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/104",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Ie 9, Object doesn't support property or method 'setCustomValidity'",state:"CLOSED",number:105,body:"In ie9 do not work components Input, DropDownList, DatePicker and others.\r\n\r\nError: Object doesn't support property or method 'setCustomValidity'\r\n\r\n```\r\nimport 'core-js/es6/map';\r\nimport 'core-js/es6/set';\r\nimport 'core-js/shim';\r\nimport 'raf/polyfill';\r\n\r\nimport React from 'react';\r\nimport { Input } from '@progress/kendo-react-inputs';\r\n\r\nconst Search = () => (\r\n    <div className=\"row\">\r\n        <div className=\"col-xs-6\">\r\n            <Input />\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default Search;\r\n```\r\n\r\n--------------------------------------\r\n\r\n\"react\": \"^16.5.2\",\r\n\"@progress/kendo-react-inputs\": \"^2.1.0\",\r\n\r\n![2018-10-22_17 23 05_ko7im](https://user-images.githubusercontent.com/8655528/47297960-41bc7480-d61f-11e8-8785-c4501a4f6d98.png)\r\n\r\n",createdAt:"2018-10-22T14:24:13Z",author:{login:"andalt",avatarUrl:"https://avatars3.githubusercontent.com/u/8655528?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/105",labels:{edges:[{node:{name:"bug",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Issue with sorting grid columns on iOS devices",state:"CLOSED",number:106,body:"## I'm submitting a...\r\n* Bug report\r\n\r\n## Current behavior\r\nOn an iOS device, running either mobile Safari or Chrome, when tapping on a column header to dispatch the sort event, the grid fails to sort by that column.\r\n\r\n## Expected behavior\r\nThe grid should sort on column where its header was tapped.\r\n\r\n## Minimal reproduction of the problem with instructions\r\n  1. Access the following StackBlitz editor on an iOS device:\r\nhttps://stackblitz.com/edit/react-nraojq?file=app/main.js\r\n  2. Click on any column in the rendered UI preview.\r\n![img_0001](https://user-images.githubusercontent.com/44374916/47311031-bafb9d80-d606-11e8-8943-19b18aa3fe61.PNG)\r\n\r\n  3. You should observe an error as presented in screenshot below:\r\n![img_0002](https://user-images.githubusercontent.com/44374916/47311015-b20acc00-d606-11e8-8269-1713c7b17fb0.PNG)\r\n\r\n\r\n## What is the motivation or use case for changing the behavior?\r\nAddress broken functionality with regards to sorting a grid column on an iOS enabled device.\r\n```\r\n\r\n```\r\n\r\nBrowser:\r\n- Safari (iOS) version 12.0.1\r\n- Chrome (iOS) version 70\r\n",createdAt:"2018-10-22T18:30:02Z",author:{login:"AFSJuanBello",avatarUrl:"https://avatars3.githubusercontent.com/u/44374916?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/106",labels:{edges:[{node:{name:"bug",__typename:"Label"},__typename:"LabelEdge"},{node:{name:"pkg:grid",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"The DropDown in controlled mode is not firing the onClose event on blur.",state:"CLOSED",number:107,body:"The DropDown in controlled mode(opened is used) is not firing the onClose event on blur.",createdAt:"2018-10-23T14:09:52Z",author:{login:"simonssspirit",avatarUrl:"https://avatars2.githubusercontent.com/u/11087921?v=4",__typename:"User"},assignees:{nodes:[{name:"Nikolay Stoychev",avatarUrl:"https://avatars0.githubusercontent.com/u/13251479?v=4",__typename:"User"}],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/107",labels:{edges:[{node:{name:"bug",__typename:"Label"},__typename:"LabelEdge"},{node:{name:"pkg:dropdowns",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:'Using the "and" operator to render multi-column headers produce false columns.',state:"OPEN",number:108,body:'Using the "and" operator to render multi-column headers produce false columns.\r\n\r\nThis can be observed here: https://stackblitz.com/edit/react-2b8ek7\r\n\r\nWe can think of an approach of how to optimize this use case. Currently, the column configuration can be kept in JSON array which will be modified based on the state values.\r\n\r\nAny feedback and suggestions are welcomed.',createdAt:"2018-10-25T14:18:44Z",author:{login:"simonssspirit",avatarUrl:"https://avatars2.githubusercontent.com/u/11087921?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/108",labels:{edges:[{node:{name:"discussion",__typename:"Label"},__typename:"LabelEdge"},{node:{name:"pkg:grid",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Ability to render the pager or another Grid component on customization position.",state:"OPEN",number:109,body:"Based on a couple of requests about rendering the Grid pager at the top.\r\n\r\nWe have a couple of solutions which we need to evaluate:\r\n\r\n1) Expose a Pager component - This will allow the user to place the pager at the desired place.\r\n2) Have a setting for the pager - bottom, top and both. The issue here is where to place the pager, on the top of the Grid over the toolbar, the grouping header or below them.\r\n3) Exposing a render prop for the Grid which will allow customizing the Grid elements, their order and it will allow cloning them and placing them on the desired place.",createdAt:"2018-10-26T10:08:43Z",author:{login:"simonssspirit",avatarUrl:"https://avatars2.githubusercontent.com/u/11087921?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/109",labels:{edges:[{node:{name:"discussion",__typename:"Label"},__typename:"LabelEdge"},{node:{name:"pkg:grid",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Duplicate declaration error in the Gauges examples.",state:"CLOSED",number:110,body:"Duplicate declaration error in the Gauges examples.",createdAt:"2018-10-29T12:05:10Z",author:{login:"simonssspirit",avatarUrl:"https://avatars2.githubusercontent.com/u/11087921?v=4",__typename:"User"},assignees:{nodes:[{name:"Stefan Stefanov",avatarUrl:"https://avatars2.githubusercontent.com/u/11087921?v=4",__typename:"User"}],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/110",labels:{edges:[{node:{name:"documenation",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Date Filter in column menu closes on click",state:"CLOSED",number:111,body:"## I'm submitting a...\r\n  * Bug Report\r\n\r\n## Current behavior\r\nDate filter in column menu is unusable because when the toggle calendar is clicked the whole filter closes\r\n\r\n## Expected behavior\r\nBe able to use the calendar in column menu\r\n\r\n## Minimal reproduction of the problem with instructions\r\nhttps://stackblitz.com/edit/react-e8qdgb",createdAt:"2018-10-29T15:11:11Z",author:{login:"simooo93",avatarUrl:"https://avatars1.githubusercontent.com/u/8407095?v=4",__typename:"User"},assignees:{nodes:[{name:"Vladimir Iliev",avatarUrl:"https://avatars3.githubusercontent.com/u/2195951?v=4",__typename:"User"},{name:"Vasil Raev",avatarUrl:"https://avatars0.githubusercontent.com/u/9458606?v=4",__typename:"User"}],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/111",labels:{edges:[{node:{name:"bug",__typename:"Label"},__typename:"LabelEdge"},{node:{name:"pkg:dateinputs",__typename:"Label"},__typename:"LabelEdge"},{node:{name:"pkg:grid",__typename:"Label"},__typename:"LabelEdge"},{node:{name:"pkg:popup",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"selecting any menu id > 9 also shows menu id 1",state:"CLOSED",number:112,body:"## I'm submitting a...\r\n* Bug report\r\n\r\n## Current behavior\r\nhovering or selecting any menu id > 9 also undesirably shows menu id 1\r\n\r\n## Expected behavior\r\nto not show the unexpected additional menu\r\n\r\n## Minimal reproduction of the problem with instructions\r\n[https://react-evqcrd.stackblitz.io](https://react-evqcrd.stackblitz.io)\r\n\r\n![image](https://user-images.githubusercontent.com/6301228/47805649-114a9980-dcf5-11e8-9a4c-e4cd48eb4a8d.png)\r\n\r\nBrowser:\r\n- Chrome (desktop) version 69.0.3497.100 (Official Build) (64-bit)\r\n- Firefox version - Waterfox 56.2.3 (64-bit)\r\n- Edge version 41.16299.611.0\r\n\r\n",createdAt:"2018-10-31T17:17:58Z",author:{login:"Beej126",avatarUrl:"https://avatars2.githubusercontent.com/u/6301228?v=4",__typename:"User"},assignees:{nodes:[{name:"Asen Arizanov",avatarUrl:"https://avatars3.githubusercontent.com/u/24224244?v=4",__typename:"User"}],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/112",labels:{edges:[{node:{name:"bug",__typename:"Label"},__typename:"LabelEdge"},{node:{name:"pkg:layout",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"IE 9. Unable to get value of the property 'badInput': object is null or undefined",state:"OPEN",number:113,body:"```\r\nimport 'core-js/es6/map';\r\nimport 'core-js/es6/set';\r\nimport 'core-js/shim';\r\nimport 'raf/polyfill';\r\n\r\nimport React from 'react';\r\nimport { Input } from '@progress/kendo-react-inputs';\r\n\r\nconst Search = () => (\r\n    <div className=\"row\">\r\n        <div className=\"col-xs-6\">\r\n            <Input />\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default Search;\r\n```\r\n\r\n--------------------------------------\r\n\r\n\"@progress/kendo-react-inputs\": \"^2.3.1\",\r\n\r\n![2018-11-01_14 49 35_o7iqb](https://user-images.githubusercontent.com/8655528/47850193-84cbd400-dde5-11e8-8e18-fcd213dcf4f6.png)",createdAt:"2018-11-01T11:57:01Z",author:{login:"andalt",avatarUrl:"https://avatars3.githubusercontent.com/u/8655528?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/113",labels:{edges:[{node:{name:"bug",__typename:"Label"},__typename:"LabelEdge"},{node:{name:"pkg:inputs",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Ie 9 Unable to get value of the property 'remove': object is null or undefined ",state:"OPEN",number:114,body:"```\r\nimport 'core-js/es6/map';\r\nimport 'core-js/es6/set';\r\nimport 'core-js/shim';\r\nimport 'raf/polyfill';\r\n\r\nimport React from 'react';\r\nimport { DatePicker } from '@progress/kendo-react-dateinputs';\r\n\r\nconst Search = () => (\r\n    <div className=\"row\">\r\n        <div className=\"col-xs-6\">\r\n            <DatePicker />\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default Search;\r\n```\r\n\r\n--------------------------------------\r\n\r\n\"@progress/kendo-react-dateinputs\": \"^2.3.1\",\r\n\r\n![2018-11-01_15 33 44_4v2r5](https://user-images.githubusercontent.com/8655528/47852057-9912cf80-ddeb-11e8-9bd1-dc1c84c927bc.png)\r\n",createdAt:"2018-11-01T12:34:30Z",author:{login:"andalt",avatarUrl:"https://avatars3.githubusercontent.com/u/8655528?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/114",labels:{edges:[{node:{name:"bug",__typename:"Label"},__typename:"LabelEdge"},{node:{name:"pkg:dateinputs",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Unable to add list validation to kendo react spreadsheet. (Wrapper)",state:"OPEN",number:115,body:"\x3c!--\r\n  Please help us process GitHub issues faster by providing the necessary information in the template format that follows.\r\n  We might not be able to assist with issues which lack important information.\r\n--\x3e\r\n\r\n## I'm submitting a...\r\n\x3c!--\r\n  Please submit:\r\n  * Feature requests to our UserVoice Portal at https://goo.gl/HsVr7R.\r\n  * Support requests to https://www.telerik.com/account/support-tickets.\r\n--\x3e\r\n\r\n\x3c!--  Leave one of the following options. --\x3e\r\n* Bug report \x3c!-- Please search for a similar issue before you submit a bug report. --\x3e\r\n\r\n## Current behavior\r\n\x3c!--\r\n  * Describe the current (faulty) behavior which is caused by the issue.\r\n  * In the latest package versions, check whether this behavior still represents an issue.\r\n--\x3e\r\nI am trying to add a list validation to kendo spreadsheet using kendo-spreadsheet-react-wrapper with react typscript. I get the following error when trying to add a list validation on a column of the spreadsheet. \r\n\r\nThe error message i get is: **Error in /turbo_modules/@progress/kendo-ui@2018.3.1024/js/spreadsheet/customeditors.js (200:18).**\r\n\r\nI forked your example from https://www.telerik.com/kendo-react-ui/wrappers/spreadsheet/ and reproduced the problem. \r\n\r\n**I found a solution to the problem by adding **var $ = kendo.jQuery** inside /node_modules/kendo-ui/js/spreadsheet/customeditor.js. inside my local project.**\r\n\r\n\r\n**Inside customeditor.js**\r\n![image](https://user-images.githubusercontent.com/40205267/47854529-3b2dba00-dde2-11e8-9ec3-ea37e2868abf.png)\r\n\r\n\r\n## Expected behavior\r\n\x3c!-- Describe what the desired behavior would be. --\x3e\r\nBe able to use the list validation  on a cell or range of cells. \r\n## Minimal reproduction of the problem with instructions\r\n\x3c!--\r\nFor bug reports, please provide the **STEPS TO REPRODUCE** and, if possible, a **MINIMAL DEMO** of the issue. You can use https://plnkr.co or share your project in a public repository.\r\n\r\n  1. Find an example in [the documentation](http://www.telerik.com/kendo-angular-ui/components/) that looks similar to your case.\r\n  2. Open it in Plunker by using the **OPEN AS PLUNKER** button.\r\n  3. Modify the plunk, so that the issue is reproducible in it. Try to include the minimum possible amount of code.\r\n  4. Save the plunk by using the blue **Save** button at the top.\r\n  5. Copy the link from the address bar of the browser.\r\n--\x3e\r\n\r\nhttps://stackblitz.com/edit/react-jkvyjq-1ezlpz?file=app%2Fmain.js\r\n\r\n\r\n\r\n",createdAt:"2018-11-01T13:21:54Z",author:{login:"NebbiGIt",avatarUrl:"https://avatars2.githubusercontent.com/u/40205267?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/115",labels:{edges:[{node:{name:"wrappers",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"DatePicker & TimePicker - Manual keyboard input issue.",state:"OPEN",number:116,body:"\x3c!--\r\n  Please help us process GitHub issues faster by providing the necessary information in the template format that follows.\r\n  We might not be able to assist with issues which lack important information.\r\n--\x3e\r\n\r\n## I'm submitting a...\r\n\x3c!--\r\n  Please submit:\r\n  * Feature requests to our UserVoice Portal at https://goo.gl/HsVr7R.\r\n  * Support requests to https://www.telerik.com/account/support-tickets.\r\n--\x3e\r\n\r\n\x3c!--  Leave one of the following options. --\x3e\r\n* Suggestion for improvement\r\n\r\n## Current behavior\r\n\x3c!--\r\n  * Describe the current (faulty) behavior which is caused by the issue.\r\n  * In the latest package versions, check whether this behavior still represents an issue.\r\n--\x3e\r\nUsing the demo from the documentation, once a time is set, it becomes difficult to change the hour or minute via the keyboard (using the keypad).  The arrow keys work flawlessly, but as an example, if we have 10:30 freshly set via the set button (in its drop-down), I can type two keystrokes and it'll keep.  However, once set by the keystrokes, if I return focus on the minute and type two new digits/keystrokes, it only accepts the first digit/keystroke and loses focus.\r\n\r\n## Expected behavior\r\n\x3c!-- Describe what the desired behavior would be. --\x3e\r\nAllow two digit keystrokes to be accepted and retained before losing focus or advancing to the next option.\r\n\r\n## Minimal reproduction of the problem with instructions\r\n\x3c!--\r\nFor bug reports, please provide the **STEPS TO REPRODUCE** and, if possible, a **MINIMAL DEMO** of the issue. You can use https://plnkr.co or share your project in a public repository.\r\n\r\n  1. Find an example in [the documentation](http://www.telerik.com/kendo-angular-ui/components/) that looks similar to your case.\r\n  2. Open it in Plunker by using the **OPEN AS PLUNKER** button.\r\n  3. Modify the plunk, so that the issue is reproducible in it. Try to include the minimum possible amount of code.\r\n  4. Save the plunk by using the blue **Save** button at the top.\r\n  5. Copy the link from the address bar of the browser.\r\n--\x3e\r\nhttps://www.telerik.com/kendo-react-ui/components/dateinputs/timepicker/\r\nhttps://www.telerik.com/kendo-react-ui/components/dateinputs/datepicker/\r\n\r\n## What is the motivation or use case for changing the behavior?\r\n\x3c!-- Describe the motivation or the concrete use case. --\x3e\r\nManual override of hour and time without invoking the popup panel\r\n\r\n## Environment\r\n\r\nPackage versions:\r\n\x3c!--\r\n  Paste the output from \"npm ls --depth 0\" in the code block below.\r\n  Omit this step if the problem is reproducible on our demo site.\r\n--\x3e\r\n```\r\n2.3.1\r\n```\r\n\r\nBrowser:\r\n\x3c!-- Leave only the browsers that you tested the issue with. --\x3e\r\n- Chrome (desktop) version XX\r\n\r\n\r\n",createdAt:"2018-11-06T16:01:01Z",author:{login:"citems",avatarUrl:"https://avatars0.githubusercontent.com/u/13468493?v=4",__typename:"User"},assignees:{nodes:[{name:"Vasil Raev",avatarUrl:"https://avatars0.githubusercontent.com/u/9458606?v=4",__typename:"User"},{name:"Kiril Peyanski",avatarUrl:"https://avatars1.githubusercontent.com/u/30626787?v=4",__typename:"User"}],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/116",labels:{edges:[{node:{name:"bug",__typename:"Label"},__typename:"LabelEdge"},{node:{name:"pkg:dateinputs",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"PanelBar doesn't use the className prop",state:"OPEN",number:117,body:"\x3c!--\r\n  Please help us process GitHub issues faster by providing the necessary information in the template format that follows.\r\n  We might not be able to assist with issues which lack important information.\r\n--\x3e\r\n\r\n## I'm submitting a...\r\n\x3c!--\r\n  Please submit:\r\n  * Feature requests to our UserVoice Portal at https://goo.gl/HsVr7R.\r\n  * Support requests to https://www.telerik.com/account/support-tickets.\r\n--\x3e\r\n\r\n\x3c!--  Leave one of the following options. --\x3e\r\n* Bug report \x3c!-- Please search for a similar issue before you submit a bug report. --\x3e\r\n\r\n## Current behavior\r\nPanelBar doesn't use the className prop.\r\n\r\n## Expected behavior\r\nSetting className prop should render a html element with the class specified.\r\n\r\n## Minimal reproduction of the problem with instructions\r\nhttps://stackblitz.com/edit/react-xg83fr\r\n\r\n1. In main.js you can see I've set <PanelBar className='test'> and  <PanelBarItem className='testInner'>\r\n2. Clicking the button shows that only the PanelBarItem has a className set, the PanelBar doesn't (you can also inspect-element on the PanelBar)\r\n\r\n## What is the motivation or use case for changing the behavior?\r\nWe have different styling for when a PanelBar is single or multi select. Specifying the className would be a useful way to distinguish them.\r\n\r\n## Environment\r\n\r\nBrowser:\r\n\x3c!-- Leave only the browsers that you tested the issue with. --\x3e\r\n- Chrome (desktop) version 70.0.3538.77 (Official Build) (64-bit)",createdAt:"2018-11-07T02:48:01Z",author:{login:"GeoMarkou",avatarUrl:"https://avatars0.githubusercontent.com/u/12272970?v=4",__typename:"User"},assignees:{nodes:[{name:"Vladimir Iliev",avatarUrl:"https://avatars3.githubusercontent.com/u/2195951?v=4",__typename:"User"}],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/117",labels:{edges:[{node:{name:"bug",__typename:"Label"},__typename:"LabelEdge"},{node:{name:"pkg:layout",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"NumbericTextBox with Hebrew culture is returning null as value onChange.",state:"OPEN",number:118,body:"NumbericTextBox with Hebrew culture is returning null as value onChange.\r\n\r\nThis is an example: https://stackblitz.com/edit/react-e2vmzh-iycfx7?file=app/main.js",createdAt:"2018-11-07T12:13:45Z",author:{login:"simonssspirit",avatarUrl:"https://avatars2.githubusercontent.com/u/11087921?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/118",labels:{edges:[{node:{name:"bug",__typename:"Label"},__typename:"LabelEdge"},{node:{name:"pkg:inputs",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Add support for frozen columns",state:"CLOSED",number:119,body:"## I'm submitting a...\r\n* Suggestion for improvement\r\n\r\n## Current behavior\r\nFrozen columns isn't supported in React.\r\n\r\n## Expected behavior\r\nSetting the GridColumn prop locked={ true } should freeze the column so the table scrolls underneath.\r\n\r\n## Minimal reproduction of the problem with instructions\r\nThis is currently supported in the JQuery version but not the React version.\r\nhttps://demos.telerik.com/kendo-ui/grid/frozen-columns\r\n\r\n## What is the motivation or use case for changing the behavior?\r\nWe have a very large grid that can have an unknown amount of columns depending on the data. The user could lose track of what row they are looking at without an identifying column being fixed.",createdAt:"2018-11-08T23:34:27Z",author:{login:"GeoMarkou",avatarUrl:"https://avatars0.githubusercontent.com/u/12272970?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/119",labels:{edges:[{node:{name:"enhancement",__typename:"Label"},__typename:"LabelEdge"},{node:{name:"pkg:grid",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"NumericTextBox currency format is cumbersome to edit",state:"OPEN",number:120,body:"## I'm submitting a...\r\n* Suggestion for improvement\r\n\r\n## Current behavior\r\nDeleting the existing value to type a new one doesn't behave as expected. It replaces the values with 0 instead of allowing space for new numbers.\r\n\r\n## Expected behavior\r\nPressing backspace or delete in the text box should delete the value. Formatting and validation should be applied on blur instead of on change.\r\n\r\n## Minimal reproduction of the problem with instructions\r\nhttps://stackblitz.com/edit/react-6tetzy\r\n\r\n**NumericTextBox:**\r\n1. Try to change the cents from 53 to 10 by pressing backspace. The cents becomes 00, and then it will add 10 to the start of the 00 making it $101.1000 which doesn't make sense.\r\n2. Try to change the entire value to $95 flat by pressing backspace to remove the existing value. The total value becomes $0.00, and 95 will be added to the start making it $950. If you press backspace all the way to the $ sign it replaces the first digit with 9, but this is counter to user expectation for textboxes.\r\n\r\n**Standard HTML input:**\r\n1. Try to change the cents from 53 to 10 by pressing backspace. The cents will be cleared and the new value can be entered normally.\r\n2. Try to change the entire value to $95 flat by pressing backspace to remove the existing value. The total value will be cleared and become blank, and the new value can be added normally.\r\n\r\n## What is the motivation or use case for changing the behavior?\r\nWe have a lot of money type textboxes in our app, which are adjusted and edited frequently. It's also an international app and we really like Kendo UI's globalisation features and would like to use them but the Numeric Text Box is a bit difficult to use on a frequent basis.\r\n\r\nBrowser:\r\n- Chrome (desktop) version 70.0.3538.77 (Official Build) (64-bit)\r\n\r\nSystem:\r\n- Platform: Windows",createdAt:"2018-11-09T00:19:26Z",author:{login:"GeoMarkou",avatarUrl:"https://avatars0.githubusercontent.com/u/12272970?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/120",labels:{edges:[{node:{name:"discussion",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"IE11 clicking on Multiselect does not always open dropdown list",state:"CLOSED",number:121,body:"## I'm submitting a...\r\n* Bug report\r\n\r\n## Current behavior\r\nIn Internet Explorer 11. Click inside the multiselect. The list drops down. Click the multiselect again. The list closes. Click the multiselect again. The list does not open. You must click towards the middle or right hand side of the component.\r\nKeep clicking the multiselect over and over and you will see the list does not open all the time.\r\n\r\n(If you click elsewhere on the screen first, and then back to the multiselect again, it will display the list items correctly. Or if you click the multi select multiple times it will display the list correctly)\r\n\r\nA summary is: When clicking on the k-multiselect-wrap while the k-input is already focussed, the dropdown list does not toggle. \r\n\r\n## Expected behavior\r\nWhen clicking the Multiselect it should open the list. When clicking it again it should close the list. Then when clicking it again it should open the list again.\r\n\r\n## Minimal reproduction of the problem with instructions\r\nStep 1. Use Internet Explorer 11.\r\nStep 2 Click the Multi Select. The list drops down.\r\nStep 3. Click the Multi Select again, or Select an Item. The list closes.\r\nStep 4. Click the Multi Select again one time. The list does not open.\r\nNB! You must click towards the middle or right hand side of the component. \r\nIf you click close to the left, or close to any existing tags it will work fine\r\n\r\nThis is the same as the demo site demo:\r\nhttps://stackblitz.com/edit/react-uydchp?file=package.json\r\n\r\n## What is the motivation or use case for changing the behavior?\r\nWhenever a user selects a Multi Select item, they experience buggy behavior, having to click the multiselect multiple times\r\n\r\n## Environment\r\nSame as demo site\r\n\r\n\r\nBrowser:\r\n- IE version 11\r\n\r\nSystem:\r\n- Platform:  Windows \r\n",createdAt:"2018-11-09T07:51:19Z",author:{login:"k290",avatarUrl:"https://avatars0.githubusercontent.com/u/5611876?v=4",__typename:"User"},assignees:{nodes:[{name:"Nikolay Stoychev",avatarUrl:"https://avatars0.githubusercontent.com/u/13251479?v=4",__typename:"User"}],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/121",labels:{edges:[{node:{name:"bug",__typename:"Label"},__typename:"LabelEdge"},{node:{name:"pkg:dropdowns",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Grouping with virtualization.",state:"OPEN",number:122,body:"Add support for Grouping with virtualization.\r\n",createdAt:"2018-11-09T08:35:46Z",author:{login:"simonssspirit",avatarUrl:"https://avatars2.githubusercontent.com/u/11087921?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/122",labels:{edges:[{node:{name:"discussion",__typename:"Label"},__typename:"LabelEdge"},{node:{name:"enhancement",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Improve customization of the filter.",state:"OPEN",number:123,body:"Make filter operators per type (or per column) to be configurable.\r\nRequested in https://github.com/telerik/kendo-react/issues/28",createdAt:"2018-11-09T08:42:18Z",author:{login:"Xizario",avatarUrl:"https://avatars0.githubusercontent.com/u/9458606?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/123",labels:{edges:[{node:{name:"enhancement",__typename:"Label"},__typename:"LabelEdge"},{node:{name:"pkg:grid",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Add the TreeView component.",state:"CLOSED",number:124,body:"Add the TreeView component.",createdAt:"2018-11-12T06:51:44Z",author:{login:"simonssspirit",avatarUrl:"https://avatars2.githubusercontent.com/u/11087921?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/124",labels:{edges:[{node:{name:"New component",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"react multisesect triggers onChange event twice when custom itemRender contains checkbox",state:"CLOSED",number:125,body:"Multiselect has some problem with triggering onChange event when custom ItemRendering is enabled and contains input, for example checkbox. onChange event is triggered twice in 2.3.2 version. In version 1.2.0 it worked fine without any problem.\r\n\r\nFollow this sample and then just copy paste my code below\r\nKendo version: 2.3.2\r\n\r\nEdit: solution to this is that onClick + onChange event on input must have this\r\n`onChange={(e) => { e.stopPropagation(); e.preventDefault() }}\r\n`\r\n`onClick={(e) => { e.stopPropagation(); e.preventDefault() }}`\r\n      \r\nhttps://www.telerik.com/kendo-react-ui/components/dropdowns/multiselect/custom-rendering/\r\n\r\n    import React from 'react';\r\n    import ReactDOM from 'react-dom';\r\n    import { MultiSelect } from '@progress/kendo-react-dropdowns';\r\n    const sports = [\r\n        { text: 'Basketball', id: 1 },\r\n        { text: 'Football', id: 2 },\r\n        { text: 'Tennis', id: 3 },\r\n        { text: 'Volleyball', id: 4 }\r\n    ];\r\n\r\n    class AppComponent extends React.Component {\r\n    state = { value: [] };\r\n\r\n    isCustom(item) { return item.id === undefined; }\r\n    addKey(item) { item.id = new Date().getTime(); }\r\n\r\n    handleChange = (event) => {\r\n        const values = event.target.value;\r\n        const lastItem = values[values.length - 1];\r\n        console.log(\"triggered\");\r\n        if (lastItem && this.isCustom(lastItem)) {\r\n            values.pop();\r\n            const sameItem = values.find(v => v.text === lastItem.text);\r\n            if (sameItem === undefined) {\r\n                this.addKey(lastItem);\r\n                values.push(lastItem);\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            value: values\r\n        });\r\n    }\r\n    itemRender = (li, itemProps) => {\r\n        const index = itemProps.index;\r\n        const itemChildren = \r\n        <label>\r\n        \t\t\t<input\r\n              type=\"checkbox\"\r\n\t\t\t\t        id={index.toString()}\r\n\t\t\t\t        className=\"k-checkbox\"\r\n\t\t\t\t        checked={false}/>\r\n\t\t\t          <label className=\"k-checkbox-label\" htmlFor={index.toString()}></label>\r\n                <span className=\"k-checkbox-text normal\">{li.props.children}</span>\r\n      </label>;\r\n\r\n        return React.cloneElement(li, li.props, itemChildren);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"example-config\">\r\n                    Selected Values: {JSON.stringify(this.state.value)}\r\n                </div>\r\n                <MultiSelect\r\n                    data={sports}\r\n                    onChange={this.handleChange}\r\n                    value={this.state.value}\r\n                    textField=\"text\"\r\n                    itemRender={this.itemRender}\r\n                    dataItemKey=\"value\"\r\n                    allowCustom={true}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n    }\r\n\r\n    ReactDOM.render(\r\n        <AppComponent />,\r\n        document.querySelector('my-app')\r\n    );\r\n",createdAt:"2018-11-12T12:10:01Z",author:{login:"marthrusk",avatarUrl:"https://avatars1.githubusercontent.com/u/17235959?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/125",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Using Kendo React with Sharepoint Framework (spfx) 1.7",state:"CLOSED",number:126,body:"I am able to get everything working out of the box; however, I get a large number of errors during the build process related to references to the kendo framework.   Example is below.\r\n\r\nDo you have a single example of using your grid with spfx 1.41 or higher that will compile without error.\r\n\r\n./node_modules/@progress/kendo-react-dropdowns/dist/es/common/ListFilter.js\r\n(Emitted value instead of an instance of Error) Cannot find source file '../../../src/common/ListFilter.tsx': Error: Can't resolve '../../../src/common/ListFilter.tsx' in 'C:\\Users\\StewartLawyer\\Documents\\GitHub\\React-SPFX-Telerik\\node_modules\\@progress\\kendo-react-dropdowns\\dist\\es\\common'\r\nNonErrorEmittedError: (Emitted value instead of an instance of Error) Cannot find source file '../../../src/common/ListFilter.tsx': Error: Can't resolve '../../../src/common/ListFilter.tsx' in 'C:\\Users\\StewartLawyer\\Documents\\GitHub\\React-SPFX-Telerik\\node_modules\\@progress\\kendo-react-dropdowns\\dist\\es\\common'\r\n    at emitWarning (C:\\Users\\StewartLawyer\\Documents\\GitHub\\React-SPFX-Telerik\\node_modules\\webpack\\lib\\NormalModule.js:117:16)\r\n    at C:\\Users\\StewartLawyer\\Documents\\GitHub\\React-SPFX-Telerik\\node_modules\\source-map-loader\\index.js:80:7\r\n    at onError (C:\\Users\\StewartLawyer\\Documents\\GitHub\\React-SPFX-Telerik\\node_modules\\enhanced-resolve\\lib\\Resolver.js:65:10)\r\n    at loggingCallbackWrapper (C:\\Users\\StewartLawyer\\Documents\\GitHub\\React-SPFX-Telerik\\node_modules\\enhanced-resolve\\lib\\createInnerCallback.js:31:19)\r\n    at runAfter (C:\\Users\\StewartLawyer\\Documents\\GitHub\\React-SPFX-Telerik\\node_modules\\enhanced-resolve\\lib\\Resolver.js:158:4)\r\n    at innerCallback (C:\\Users\\StewartLawyer\\Documents\\GitHub\\React-SPFX-Telerik\\node_modules\\enhanced-resolve\\lib\\Resolver.js:146:3)\r\n    at loggingCallbackWrapper (C:\\Users\\StewartLawyer\\Documents\\GitHub\\React-SPFX-Telerik\\node_modules\\enhanced-resolve\\lib\\createInnerCallback.js:31:19)\r\n    at next (C:\\Users\\StewartLawyer\\Documents\\GitHub\\React-SPFX-Telerik\\node_modules\\tapable\\lib\\Tapable.js:252:11)\r\n    at C:\\Users\\StewartLawyer\\Documents\\GitHub\\React-SPFX-Telerik\\node_modules\\enhanced-resolve\\lib\\UnsafeCachePlugin.js:40:4\r\n    at loggingCallbackWrapper (C:\\Users\\StewartLawyer\\Documents\\GitHub\\React-SPFX-Telerik\\node_modules\\enhanced-resolve\\lib\\createInnerCallback.js:31:19)\r\n @ ./node_modules/@progress/kendo-react-dropdowns/dist/es/DropDownList/DropDownList.js 23:0-46\r\n @ ./node_modules/@progress/kendo-react-dropdowns/dist/es/main.js\r\n @ ./lib/webparts/telerikGrid/components/TelerikGrid.js\r\n @ ./lib/webparts/telerikGrid/TelerikGridWebPart.js",createdAt:"2018-11-13T19:07:23Z",author:{login:"jchilde",avatarUrl:"https://avatars0.githubusercontent.com/u/11364073?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/126",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Grid - filter input loses focus on a grid with applied grouping",state:"CLOSED",number:127,body:"## I'm submitting a...\r\n* Bug report\r\n\r\n## Steps to reproduce\r\n1. Go to https://www.telerik.com/kendo-react-ui/components/grid/grouping/ (or to the fork https://react-zvb7mh.stackblitz.io/).\r\n2. Enter any value into Product Name filter, so all data are filtered out.\r\n\r\n## Current behavior\r\nFilter input loses focus. User have to put cursor into the filter input manually to continue filter editing.\r\n\r\n## Expected behavior\r\nFocus must be kept.\r\n\r\n## Additional\r\n1. Reverse actions (clearing filter, until data starts to appear in the grid) also causes losing focus.\r\n2. Unit Price filter behaves differently - when all data is filtered out, the focus switches to Units in Stock filter:\r\n![image](https://user-images.githubusercontent.com/5493641/48468941-64950f80-e7fe-11e8-8cc2-c764fb3f6084.png)\r\n(here I tried to enter `333333` into Units Price filter).\r\n3. I believe, this is somehow related to additional column(s) when there are some data in the grid and grouping is applied:\r\n![image](https://user-images.githubusercontent.com/5493641/48469046-b76ec700-e7fe-11e8-80bc-22aeebc5e64c.png)\r\nWithout data it's absent:\r\n![image](https://user-images.githubusercontent.com/5493641/48469064-cb1a2d80-e7fe-11e8-9c43-3edde4f16c2f.png)\r\n\r\n## What is the motivation or use case for changing the behavior?\r\nFiltering on a grid with applied grouping.\r\n\r\n## Environment\r\n\r\nChrome (desktop) Version 70.0.3538.102 (Official Build) (64-bit)\r\nWindows 10 Pro 1803",createdAt:"2018-11-14T08:23:51Z",author:{login:"yarmolovichalex",avatarUrl:"https://avatars3.githubusercontent.com/u/5493641?v=4",__typename:"User"},assignees:{nodes:[{name:"Vasil Raev",avatarUrl:"https://avatars0.githubusercontent.com/u/9458606?v=4",__typename:"User"}],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/127",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"When no columns are passed to the Grid, the details column has a colSpan 0.",state:"OPEN",number:128,body:"When no columns are passed to the Grid, the details column has a colSpan 0.",createdAt:"2018-11-19T08:38:06Z",author:{login:"simonssspirit",avatarUrl:"https://avatars2.githubusercontent.com/u/11087921?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/128",labels:{edges:[{node:{name:"bug",__typename:"Label"},__typename:"LabelEdge"},{node:{name:"pkg:grid",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Using props.children for columnMenu attribute results in Cannot read property 'displayName' of undefined",state:"CLOSED",number:129,body:'\x3c!--\r\n  Please help us process GitHub issues faster by providing the necessary information in the template format that follows.\r\n  We might not be able to assist with issues which lack important information.\r\n--\x3e\r\n\r\n\x3c!--  Leave one of the following options. --\x3e\r\n* Bug report \x3c!-- Please search for a similar issue before you submit a bug report. --\x3e\r\n\r\n## Current behavior\r\nWhen using columnMenu as described [here](https://www.telerik.com/kendo-react-ui/components/grid/columns/column-menu/) for React it works providing the columns are not passed via props.children.\r\n\r\nAs we want to encapsulate a lot of functionality within the grid, I have a grid component (which has filtering, grouping etc functionality), and from an implementation point of view we use this component and pass in our column names. The grid component will then render these columns using `{props.children}`. However, specifying a columnMenu on the columns results in the error:\r\n\r\n```\r\nTypeError: Cannot read property \'displayName\' of undefined\r\n(anonymous function)\r\nC:/K3Projects/OrchardWebClient/RO/learning-react/node_modules/@progress/kendo-react-grid/dist/es/Grid.js:371\r\n  368 | }, this.props.group !== undefined, this.props.expandField);\r\n  369 | var children = React.Children.toArray(this.props.children);\r\n  370 | this.initColumns(children.filter(function (child) {\r\n> 371 |   return child && child.type.displayName === \'KendoReactGridColumn\';\r\n      | ^  372 | }), resolvedGroupsCount);\r\n  373 | var toolbar = children.filter(function (child) {\r\n  374 |   return child && child.type.displayName === \'KendoReactGridToolbar\';\r\n```\r\n\r\n## Expected behavior\r\nTo display a column menu, as it does if not using `props.children`.\r\n\r\n## Minimal reproduction of the problem with instructions\r\nCreate a component using the Grid component. Use `{props.children}` between `<Grid>` tags. Have another component create this component, passing in the columns as children. Specify columnMenu to these columns to generate the error.\r\n\r\nLike:\r\n`<Grid\r\n                    scrollable={"none"}\r\n                >\r\n                    /** Allows user to pass in own columns */\r\n                    {this.props.children}\r\n                </Grid>`\r\n\r\n## What is the motivation or use case for changing the behavior?\r\n\x3c!-- Describe the motivation or the concrete use case. --\x3e\r\n\r\n## Environment\r\nUsing @progress/kendo-react-grid 2.3.2.\r\n\r\nPackage versions:\r\n\x3c!--\r\n  Paste the output from "npm ls --depth 0" in the code block below.\r\n  Omit this step if the problem is reproducible on our demo site.\r\n--\x3e\r\n  "dependencies": {\r\n    "@progress/kendo-data-query": "^1.5.0",\r\n    "@progress/kendo-react-dateinputs": "^2.3.2",\r\n    "@progress/kendo-react-dropdowns": "^2.3.2",\r\n    "@progress/kendo-react-grid": "^2.3.2",\r\n    "@progress/kendo-react-inputs": "^2.3.2",\r\n    "@progress/kendo-react-intl": "^2.3.2",\r\n    "@progress/kendo-theme-default": "^2.60.0",\r\n    "axios": "^0.18.0",\r\n    "query-string": "^6.2.0",\r\n    "react": "^16.6.3",\r\n    "react-dom": "^16.6.3",\r\n    "react-router-dom": "^4.3.1",\r\n    "react-scripts": "^2.1.1"\r\n\r\nBrowser:\r\n\x3c!-- Leave only the browsers that you tested the issue with. --\x3e\r\n- Chrome (desktop) version XX\r\n- Chrome (Android) version XX\r\n- Chrome (iOS) version XX\r\n- Firefox version XX\r\n- Safari (desktop) version XX\r\n- Safari (iOS) version XX\r\n- IE version XX\r\n- Edge version XX\r\n\r\nSystem:\r\n- TypeScript version: XX \x3c!-- run tsc --version --\x3e\r\n- Node version: XX  \x3c!-- run "node --version" and "npm --version"--\x3e\r\n- Platform:  \x3c!-- Mac, Linux, Windows --\x3e\r\n\r\n\x3c!-- Add any additional information that might be relevant. --\x3e\r\n',createdAt:"2018-11-20T15:10:05Z",author:{login:"rickyoleary",avatarUrl:"https://avatars1.githubusercontent.com/u/45206142?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/129",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Text cursor position is incorrect when the user types a decimal without a leading 0 in NumericTextBox",state:"CLOSED",number:130,body:'Text cursor position is incorrect when the user types a decimal without a leading 0 in NumericTextBox.\r\n\r\nSteps:\r\n\r\ntype "." "9" and "8". The expected result is 0.98, but we got 0.89:\r\n\r\nReproducible in the demo:\r\n\r\nhttps://www.telerik.com/kendo-react-ui/components/inputs/numerictextbox/',createdAt:"2018-11-21T07:31:00Z",author:{login:"simonssspirit",avatarUrl:"https://avatars2.githubusercontent.com/u/11087921?v=4",__typename:"User"},assignees:{nodes:[{name:"Stefan Stefanov",avatarUrl:"https://avatars2.githubusercontent.com/u/11087921?v=4",__typename:"User"}],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/130",labels:{edges:[{node:{name:"bug",__typename:"Label"},__typename:"LabelEdge"},{node:{name:"pkg:inputs",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"react spfx webpack issues after adding kendo UI dropdown",state:"CLOSED",number:131,body:"### Reproduction of the problem\r\nI created a spfx react project and added the react kendo UI, after adding kendo-react-drop-down.\r\nAfter adding I am getting the following issues.\r\nnpm install --save @progress/kendo-react-dropdowns\r\n**Errors**\r\n[12:37:54] Warning - [webpack] 'dist':\r\n./node_modules/@progress/kendo-react-dateinputs/dist/es/calendar/components/Calendar.js\r\n(Emitted value instead of an instance of Error) Cannot find source file '../../../../src/calendar/components/Calendar.tsx': Error: Can't resolve '../../../../src/calendar/components/Calendar.tsx' in 'E:\\projects\\sharepoint\\node_modules\\@progress\\kendo-react-dateinputs\\dist\\es\\calendar\\components'\r\nNonErrorEmittedError: (Emitted value instead of an instance of Error) Cannot find source file '../../../../src/calendar/components/Calendar.tsx': Error: Can't resolve '../../../../src/calendar/components/Calendar.tsx' in 'E:\\projects\\sharepoint\\node_modules\\@progress\\kendo-react-dateinputs\\dist\\es\\calendar\\components'\r\n\r\n### Expected/desired behavior\r\nThe project is runnning fine with above errors mentioned above. Trying to remove the errors.\r\n\r\n\r\n### Environment\r\n\r\n* **Kendo UI version:** 201x.r.ddd\r\n* **react version:** 16.3.2\r\n* **Browser:** [all | Chrome XX | Firefox XX | IE XX | Safari XX | Mobile Chrome XX | Android X.X Web Browser | iOS XX Safari | iOS XX UIWebView | iOS XX WKWebView ] \r\n\r\n\r\n",createdAt:"2018-11-21T09:46:07Z",author:{login:"ekkuluri",avatarUrl:"https://avatars0.githubusercontent.com/u/3906782?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/131",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"The content of the Chart Tooltip is rendered inside a <p> insteaf of <span>.",state:"CLOSED",number:132,body:'The content of the Chart Tooltip is rendered inside a "p" element insteaf of  a "span" element.\r\n\r\nAs the "p" element has a bottom margin this creates visually not symmetric result:\r\n\r\n![image](https://user-images.githubusercontent.com/11087921/49150821-b4072f80-f316-11e8-80a2-3bbb1a8bb764.png)\r\n',createdAt:"2018-11-28T12:06:17Z",author:{login:"simonssspirit",avatarUrl:"https://avatars2.githubusercontent.com/u/11087921?v=4",__typename:"User"},assignees:{nodes:[{name:"Stefan Stefanov",avatarUrl:"https://avatars2.githubusercontent.com/u/11087921?v=4",__typename:"User"}],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/132",labels:{edges:[{node:{name:"bug",__typename:"Label"},__typename:"LabelEdge"},{node:{name:"pkg:charts",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Add ability to add custom className to all components.",state:"OPEN",number:133,body:"- [x] Button\r\n- [x] ButtonGroup\r\n- [ ] Charts?\r\n- [ ] Chat\r\n- [ ] DateInput\r\n- [x] DatePicker\r\n- [x] TimePicker\r\n- [x] Calendar\r\n- [ ] Dialog\r\n- [x] AutoComplete\r\n- [x] ComboBox\r\n- [x] DropDown\r\n- [x] MultiSelect\r\n- [ ] Grid\r\n- [x] Input\r\n- [ ] NumericTextBox\r\n- [ ] MaskedTextBox\r\n- [x] Popup\r\n- [ ] Tooltip\r\n",createdAt:"2018-11-29T10:47:30Z",author:{login:"simonssspirit",avatarUrl:"https://avatars2.githubusercontent.com/u/11087921?v=4",__typename:"User"},assignees:{nodes:[{name:"Stefan Stefanov",avatarUrl:"https://avatars2.githubusercontent.com/u/11087921?v=4",__typename:"User"}],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/133",labels:{edges:[{node:{name:"enhancement",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Scrolling quickly in Grid with virtual scroll in some cases results in empty Grid",state:"CLOSED",number:134,body:"In Grid with virtual scroll, moving the mouse outside of the Grid in some cases results in empty Grid.\r\n\r\nThis is reproduced in our demo as well:\r\n\r\nhttps://www.telerik.com/kendo-react-ui/components/grid/scroll-modes/#toc-virtual-scrolling\r\n\r\n![4b21e12a-a81d-4248-8572-e6fa464543f3_ezgif-1-ed6c0e0cdaf1](https://user-images.githubusercontent.com/13251479/49223839-999d8680-f3e8-11e8-9399-86838a575b92.gif)\r\n\r\nMultiple messages has been shown in the browser's console.\r\n`Active resource loading counts reached to a per-frame limit while the tab is in background. Network requests will be delayed until a previous loading finishes, or the tab is foregrounded. See `[https://www.chromestatus.com/feature/5527160148197376](https://www.chromestatus.com/feature/5527160148197376)` for more details`\r\n\r\nReported in ticket: 1362834",createdAt:"2018-11-29T12:00:40Z",author:{login:"simonssspirit",avatarUrl:"https://avatars2.githubusercontent.com/u/11087921?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/134",labels:{edges:[{node:{name:"bug",__typename:"Label"},__typename:"LabelEdge"},{node:{name:"pkg:grid",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"DateRangePicker does not work correctly",state:"OPEN",number:135,body:"## I'm submitting a...\r\n* Bug report \r\n\r\n## Current behavior\r\nDateRangePicker keyboard/mouse does not work correctly \r\n\r\n![daterangepicker bug](https://user-images.githubusercontent.com/2721926/49261843-6b7c6e80-f409-11e8-82a5-796306c36839.gif)\r\n\r\n## Expected behavior\r\nConsistent behavior with keyboard/mouse\r\n\r\n## Minimal reproduction of the problem with instructions\r\nsee attachment\r\n\r\n## What is the motivation or use case for changing the behavior?\r\ncomponent is not functional... how did this make it out of testing?\r\n\r\n## Environment\r\nhttps://www.telerik.com/kendo-react-ui/components/dateinputs/daterangepicker/\r\n\r\nBrowser:\r\n- Chrome (desktop) version 70.0.3538.110 (Official Build) (64-bit)\r\n- Firefox version 63.0.3 (64-bit)\r\n\r\nSystem:\r\ncomponent demo\r\n",createdAt:"2018-11-30T01:08:26Z",author:{login:"cheesefinger",avatarUrl:"https://avatars3.githubusercontent.com/u/2721926?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/135",labels:{edges:[{node:{name:"needs more information",__typename:"Label"},__typename:"LabelEdge"},{node:{name:"pkg:dateinputs",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"kendo-react-dropdowns doesn't work with react-create-app + typescript.",state:"CLOSED",number:136,body:'## I\'m submitting a...\r\n\r\n* Bug report\r\n\r\n## Current behavior\r\n\r\nkendo-react-dropdowns does not work with create-react-app when using typescript.\r\n\r\n> node_modules/@progress/kendo-react-dropdowns/dist/npm/common/settings.d.ts\r\n>  Type error: Ambient const enums are not allowed when the \'--isolatedModules\' flag is provided.  TS1209\r\n\r\n## Expected behavior\r\n\r\nUsing `<DropDownList>` should not cause an error.\r\n\r\n## Minimal reproduction of the problem with instructions\r\n\r\n```\r\nnpx create-react-app foo\r\ncd foo\r\n```\r\n\r\nNow follow the guide here to enable typescript:\r\n\r\nhttps://facebook.github.io/create-react-app/docs/adding-typescript\r\n\r\nNote the comment at the end of the documentation:\r\n\r\n> Note: Constant enums and namespaces are not supported.\r\n\r\nNow attempt to use kendo-react-dropdowns:\r\n\r\n```\r\nnpm install @progress/kendo-react-dropdowns\r\n```\r\n\r\n...\r\n\r\n```\r\nimport {DropDownList} from "@progress/kendo-react-dropdowns";\r\n```\r\n\r\nGives:\r\n\r\n```\r\nnode_modules/@progress/kendo-react-dropdowns/dist/npm/common/settings.d.ts\r\nType error: Ambient const enums are not allowed when the \'--isolatedModules\' flag is provided.  TS1209\r\n\r\n     98 |  * @hidden\r\n     99 |  */\r\n  > 100 | export declare const enum ActiveDescendant {\r\n        |                           ^\r\n    101 |     \'PopupList\' = 0,\r\n    102 |     \'TagsList\' = 1\r\n    103 | }\r\n```\r\n\r\n## What is the motivation or use case for changing the behavior?\r\n\r\nreact-create-app is the standard way of create react applications, and have selected the babel typescript integration as the \'blessed\' way of using typescript.\r\n\r\nCertainly, the typescript standard supports this feature, but `DropDownList` is a fundamental component; this is a show-stopper for using kendo-react.\r\n\r\n## Environment\r\n\r\nPackage versions:\r\n```\r\n    "@progress/kendo-react-buttons": "^2.4.0",\r\n    "@progress/kendo-react-dateinputs": "^2.4.0",\r\n    "@progress/kendo-react-dropdowns": "^2.4.0",\r\n    "@progress/kendo-react-inputs": "^2.4.0",\r\n    "@progress/kendo-react-intl": "^2.4.0",\r\n    "@progress/kendo-theme-material": "^1.5.1",\r\n    "@progress/kendo-ui": "^2018.3.1129",\r\n    "@types/jest": "^23.3.10",\r\n    "@types/node": "^10.12.10",\r\n    "@types/react": "^16.7.8",\r\n    "@types/react-dom": "^16.0.11",\r\n    "node-sass": "^4.10.0",\r\n    "react": "^16.6.3",\r\n    "react-dom": "^16.6.3",\r\n    "react-scripts": "2.1.1",\r\n    "typescript": "^3.1.6"\r\n```\r\n\r\nBrowser:\r\nSince this prevents compile, it affects all browsers.\r\n\r\nSystem:\r\n- TypeScript version: 3.1.6\r\n- Node version: v10.13.0\r\n- Platform:  Windows',createdAt:"2018-11-30T03:38:31Z",author:{login:"shadowmint",avatarUrl:"https://avatars0.githubusercontent.com/u/355760?v=4",__typename:"User"},assignees:{nodes:[{name:"Nikolay Stoychev",avatarUrl:"https://avatars0.githubusercontent.com/u/13251479?v=4",__typename:"User"}],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/136",labels:{edges:[{node:{name:"bug",__typename:"Label"},__typename:"LabelEdge"},{node:{name:"pkg:dropdowns",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Incorrect prop type is set to the formatPlaceholder property of the DatePicker",state:"CLOSED",number:137,body:"Incorrect prop type is set to the formatPlaceholder property of the DatePicker.\r\n\r\nThis causes warning in develop mode but does not affect the actual behavior of the component.",createdAt:"2018-11-30T08:35:29Z",author:{login:"simonssspirit",avatarUrl:"https://avatars2.githubusercontent.com/u/11087921?v=4",__typename:"User"},assignees:{nodes:[{name:"Kiril Peyanski",avatarUrl:"https://avatars1.githubusercontent.com/u/30626787?v=4",__typename:"User"}],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/137",labels:{edges:[{node:{name:"bug",__typename:"Label"},__typename:"LabelEdge"},{node:{name:"pkg:dateinputs",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Changed GridColumn.displayName corrupt view of table",state:"OPEN",number:138,body:'## Expected behavior\r\nI want have the opportunity for do like this:\r\n```js\r\nGrid.displayName = "KendoGrid";\r\nGridColumn.displayName = "KendoGridColumn";\r\n```\r\nbut after that view of table is corrupt, because in\r\n```js\r\n<colgroup>\r\n  <col {width}>\r\n```\r\n\r\n param width not receive and possible lost somewhere above just for GridColumn\r\n\r\n## What is the motivation or use case for changing the behavior?\r\nI want to see in my storybook info panel jsx code with exactly "KendoGrid" word, not "KendoReactGrid".\r\n\r\n## Environment\r\nPackage versions:\r\n```js\r\n    "@progress/kendo-react-grid": "2.4.0",\r\n```\r\n\r\n',createdAt:"2018-11-30T13:46:32Z",author:{login:"feonit",avatarUrl:"https://avatars1.githubusercontent.com/u/3956831?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/138",labels:{edges:[{node:{name:"discussion",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Expose TimePicker setValue function",state:"OPEN",number:139,body:"## I'm submitting a...\r\n\x3c!--  Leave one of the following options. --\x3e\r\n* Suggestion for improvement\r\n\r\n## Current behavior\r\nThere is no official way to manually update the TimePicker for uncontrolled components.\r\n\r\n## Expected behavior\r\nEither one of these options would be wonderful:\r\n\r\nTimePicker.setValue(date);\r\nTimePicker.value = date;\r\n\r\n## Minimal reproduction of the problem with instructions\r\nhttps://stackblitz.com/edit/react-zphqrv?file=app/main.js\r\nYou can see in the HandleChange function, we're forced to use .setState({ value: value }) directly, which may be bypassing some internal logic we aren't aware of in the TimePicker component.\r\n\r\n## What is the motivation or use case for changing the behavior?\r\nWe have a form with a lot of TimePicker components in the style of:\r\n\r\nMonday: {TimePicker Start Time} {TimePicker End Time}\r\nTuesday: {TimePicker Start Time} {TimePicker End Time}\r\n...\r\n\r\nIf the user chooses an invalid time e.g a Start time that is after the End time, we would like to allow the change but update the end time to match the start time for ease of use. This is currently a difficult operation.\r\n\r\nUsing controlled inputs with value={} causes performance issues as the entire page is re-rendered on keystroke so we would prefer to continue using defaultValue={}.\r\n\r\n## Environment\r\nBrowser:\r\n- Chrome (desktop) version 70.0.3538.110 (Official Build) (64-bit)\r\n\r\nSystem:\r\n- Node version: v8.9.3 6.4.1\r\n- Platform:  Windows",createdAt:"2018-12-04T02:14:18Z",author:{login:"GeoMarkou",avatarUrl:"https://avatars0.githubusercontent.com/u/12272970?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/139",labels:{edges:[{node:{name:"needs more information",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Validitystyles has no effect on validity styling",state:"CLOSED",number:140,body:'## I\'m submitting a...\r\n* Bug report \r\n\r\n## Current behavior\r\nWhen applying validityStyles to a component, when the prop is set to false it does not remove the red border.\r\n\r\n## Expected behavior\r\nWhen the validityStyles prop is set to false, the components should not be styled in red\r\n\r\n## Minimal reproduction of the problem with instructions\r\n\r\n  1. Open the demo for the "Delaying Validity Styles" article. https://stackblitz.com/edit/react-ebmmmv?file=app/main.js\r\nWhen it opens the inputs are styled red\r\n\r\n## What is the motivation or use case for changing the behavior?\r\nTo not have form components open in an invalid state as soon as the user opens the page.\r\n\r\n## Environment\r\n\r\nPackage versions:\r\n   "react": "16.6.3",\r\n    "react-dom": "16.6.3",\r\n    "@progress/kendo-data-query": "1.5.0",\r\n    "@progress/kendo-date-math": "1.3.2",\r\n    "@progress/kendo-drawing": "1.5.7",\r\n    "@progress/kendo-file-saver": "1.0.7",\r\n    "@progress/kendo-react-animation": "2.4.0",\r\n    "@progress/kendo-react-buttons": "2.4.0",\r\n    "@progress/kendo-react-charts": "2.4.0",\r\n    "@progress/kendo-react-conversational-ui": "2.4.0",\r\n    "@progress/kendo-react-dateinputs": "2.4.0",\r\n    "@progress/kendo-react-dialogs": "2.4.0",\r\n    "@progress/kendo-react-dropdowns": "2.4.0",\r\n    "@progress/kendo-react-excel-export": "2.4.0",\r\n    "@progress/kendo-react-gauges": "2.4.0",\r\n    "@progress/kendo-react-grid": "2.4.0",\r\n    "@progress/kendo-react-inputs": "2.4.0",\r\n    "@progress/kendo-react-intl": "2.4.0",\r\n    "@progress/kendo-react-layout": "2.4.0",\r\n    "@progress/kendo-react-pdf": "2.4.0",\r\n    "@progress/kendo-react-tooltip": "2.4.0",\r\n    "@progress/kendo-react-popup": "2.4.0",\r\n    "@progress/kendo-react-ripple": "2.4.0",\r\n\r\nBrowser:\r\n\x3c!-- Leave only the browsers that you tested the issue with. --\x3e\r\n- Chrome (desktop) version 70\r\n\r\n\r\nSystem:\r\n- Platform: Windows\r\n\r\n',createdAt:"2018-12-04T07:22:54Z",author:{login:"k290",avatarUrl:"https://avatars0.githubusercontent.com/u/5611876?v=4",__typename:"User"},assignees:{nodes:[{name:"Kiril Peyanski",avatarUrl:"https://avatars1.githubusercontent.com/u/30626787?v=4",__typename:"User"}],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/140",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Cannot set decimal separator in NumericTextBox on iPhone(iOS 12)",state:"CLOSED",number:141,body:"Cannot set decimal separator in NumericTextBox on iPhone(iOS 12).\r\n\r\nThis occurs as we use input type tel, and on the new iOS, the keyboard that pops up for type tel does not contain a decimal symbol.",createdAt:"2018-12-05T11:37:03Z",author:{login:"simonssspirit",avatarUrl:"https://avatars2.githubusercontent.com/u/11087921?v=4",__typename:"User"},assignees:{nodes:[{name:"Stefan Stefanov",avatarUrl:"https://avatars2.githubusercontent.com/u/11087921?v=4",__typename:"User"}],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/141",labels:{edges:[{node:{name:"bug",__typename:"Label"},__typename:"LabelEdge"},{node:{name:"pkg:inputs",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Add some missing components into the themebuilder",state:"OPEN",number:142,body:"- [ ] Calendar\r\n- [ ] DateInputs\r\n- [ ] Gauges\r\n- [ ] Menu\r\n- [ ] Splitter",createdAt:"2018-12-06T08:23:04Z",author:{login:"Xizario",avatarUrl:"https://avatars0.githubusercontent.com/u/9458606?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/142",labels:{edges:[{node:{name:"enhancement",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Autocapitalize doesn't work",state:"OPEN",number:143,body:"I tried using autocapitalize with <Input autoCapitalize=\"words\" /> but it doesn't work. The docs also don't say anything on how to use the autoCapitalize props from here: https://www.telerik.com/kendo-react-ui/components/inputs/api/InputProps/",createdAt:"2018-12-07T09:21:24Z",author:{login:"derencel20",avatarUrl:"https://avatars0.githubusercontent.com/u/17394978?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/143",labels:{edges:[{node:{name:"documenation",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Display persistent validation messages for all form inputs",state:"CLOSED",number:144,body:'## I\'m submitting a...\r\n* Suggestion for improvement\r\n\r\n## Current behavior\r\nWhen you click a form submit button a tooltip displays a validation message for the first element of the form.\r\nhttps://stackblitz.com/edit/react-ebmmmv-avseek?file=app/main.js\r\n\r\n## Suggested behavior\r\nIt would be nice if similar to Jquery KendoUI, the angular wrappers etc, it displays persistent validation errors for all inputs:\r\ne.g. https://demos.telerik.com/kendo-ui/validator/index\r\n\r\n## What is the motivation or use case for changing the behavior?\r\nCurrent user workflow:\r\n1. Submit form\r\n2. Understand and resolve first validation error\r\n3. Submit form\r\n4. Understand and resolve next validation error.\r\n5. Submit form\r\n6. Understand and resolve next validation error\r\n....\r\n\r\nBetter user workflow:\r\n1. Submit form\r\n2. Understand and resolve all validation errors\r\n3. Submit form\r\n\r\n## Versions\r\n  "@progress/kendo-react-inputs": "2.4.0",\r\n\r\n',createdAt:"2018-12-11T08:54:31Z",author:{login:"k290",avatarUrl:"https://avatars0.githubusercontent.com/u/5611876?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/144",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"TabStrip component errors with only one TabStripTab",state:"CLOSED",number:145,body:"\x3c!--\r\n  Please help us process GitHub issues faster by providing the necessary information in the template format that follows.\r\n  We might not be able to assist with issues which lack important information.\r\n--\x3e\r\n\r\n## I'm submitting a...\r\n* Bug report \x3c!-- Please search for a similar issue before you submit a bug report. --\x3e\r\n\r\n## Current behavior\r\nUsing TabStrip with only one TabStripTab results in an error of `Cannot read property 'props' of undefined`\r\n\r\n## Expected behavior\r\nTabStrip can function with only one tab.\r\n\r\n## Minimal reproduction of the problem with instructions\r\nhttps://stackblitz.com/edit/react-sdnxrw\r\n\r\n## What is the motivation or use case for changing the behavior?\r\nWe have an application where we are showing Excel previews with the Kendo React Grid component.  We have a requirement to mimic the look and feel of Excel to include sheets.  My plan is to use the TabStrip component for sheet navigation.  There may not always be > 1 sheet initially and sheets can be dynamically added. I expect the TabStrip component to function with >= 1 TabStripTab.\r\n",createdAt:"2018-12-11T15:21:04Z",author:{login:"gridbox",avatarUrl:"https://avatars0.githubusercontent.com/u/17598517?v=4",__typename:"User"},assignees:{nodes:[{name:"Kiril Peyanski",avatarUrl:"https://avatars1.githubusercontent.com/u/30626787?v=4",__typename:"User"}],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/145",labels:{edges:[{node:{name:"bug",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"TreeView React Wrapper doesn't re-render properly",state:"CLOSED",number:146,body:"## I'm submitting a...\r\n* Bug report \r\n\r\nThe TreeView React wrapper works fine in the example shown in the [docs](https://www.telerik.com/kendo-react-ui/wrappers/treeview/).\r\n\r\nBut if the component is re-rendered (because of new props), it doesn't render the new dataSource as it should.\r\n\r\nHere's a working example of the buggy behavior: https://stackblitz.com/edit/kendo-ui-treeview-bug",createdAt:"2018-12-13T00:40:53Z",author:{login:"eparizzi",avatarUrl:"https://avatars0.githubusercontent.com/u/412489?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/146",labels:{edges:[{node:{name:"wontfix",__typename:"Label"},__typename:"LabelEdge"},{node:{name:"wrappers",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Toolbar component",state:"CLOSED",number:147,body:"Can be tested here https://www.telerik.com/kendo-react-ui-develop/components/buttons/toolbar/",createdAt:"2018-12-13T12:18:28Z",author:{login:"Xizario",avatarUrl:"https://avatars0.githubusercontent.com/u/9458606?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/147",labels:{edges:[{node:{name:"enhancement",__typename:"Label"},__typename:"LabelEdge"},{node:{name:"pkg:buttons",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"ComboBox filter not cleared on blur",state:"CLOSED",number:148,body:'\x3c!--\r\n  Please help us process GitHub issues faster by providing the necessary information in the template format that follows.\r\n  We might not be able to assist with issues which lack important information.\r\n--\x3e\r\n\r\n## I\'m submitting a...\r\n\x3c!--\r\n  Please submit:\r\n  * Feature requests to our UserVoice Portal at https://goo.gl/HsVr7R.\r\n  * Support requests to https://www.telerik.com/account/support-tickets.\r\n--\x3e\r\n\r\n\x3c!--  Leave one of the following options. --\x3e\r\n* Regression report \x3c!-- A behavior that used to work and stopped working in a new release. --\x3e\r\n\r\n## Current behavior\r\nWhen using the [filter](https://www.telerik.com/kendo-react-ui/components/dropdowns/combobox/filtering/) configuration, if no valid item is selected and the input loses focus, the filter text is cleared but the data is still filtered.\r\n\x3c!--\r\n  * Describe the current (faulty) behavior which is caused by the issue.\r\n  * In the latest package versions, check whether this behavior still represents an issue.\r\n--\x3e\r\n\r\n## Expected behavior\r\nUpon losing focus, the filter text should be cleared and a filter change event fired to notify any filtering code that it should restore the data.\r\n\x3c!-- Describe what the desired behavior would be. --\x3e\r\n\r\n## Minimal reproduction of the problem with instructions\r\n\x3c!--\r\nFor bug reports, please provide the **STEPS TO REPRODUCE** and, if possible, a **MINIMAL DEMO** of the issue. You can use https://plnkr.co or share your project in a public repository.\r\n\r\n  1. Find an example in [the documentation](http://www.telerik.com/kendo-angular-ui/components/) that looks similar to your case.\r\n  2. Open it in Plunker by using the **OPEN AS PLUNKER** button.\r\n  3. Modify the plunk, so that the issue is reproducible in it. Try to include the minimum possible amount of code.\r\n  4. Save the plunk by using the blue **Save** button at the top.\r\n  5. Copy the link from the address bar of the browser.\r\n--\x3e\r\nThis bug can be reproduced using the example on the [filtering page](https://www.telerik.com/kendo-react-ui/components/dropdowns/combobox/filtering/) (or on [StackBlitz](https://82huhn.run.stackblitz.io)) with no modifications. Simply type "d" into the dropdown, click away the dropdown to remove focus and close the list, then click the button to open the list again. Notice that the options remain filtered (only "Medium" appears) while there is no text in the search bar.\r\n\r\n\r\n## Notes\r\nThis is possibly related to issue #84.\r\n',createdAt:"2018-12-18T04:48:29Z",author:{login:"thejroberts",avatarUrl:"https://avatars1.githubusercontent.com/u/1132018?v=4",__typename:"User"},assignees:{nodes:[{name:"Nikolay Stoychev",avatarUrl:"https://avatars0.githubusercontent.com/u/13251479?v=4",__typename:"User"}],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/148",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Window compomnent",state:"CLOSED",number:149,body:"Live at dev: https://www.telerik.com/kendo-react-ui-develop/components/dialogs/window/\r\nFeedback appreciated ",createdAt:"2018-12-18T09:41:44Z",author:{login:"Xizario",avatarUrl:"https://avatars0.githubusercontent.com/u/9458606?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/149",labels:{edges:[{node:{name:"New component",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Add placeholder property to the Chat component",state:"CLOSED",number:150,body:"The `Type a message...` placeholder and `Send...` aria-label of the chat should be localizable true the LocalizationProvider",createdAt:"2018-12-18T14:30:35Z",author:{login:"Xizario",avatarUrl:"https://avatars0.githubusercontent.com/u/9458606?v=4",__typename:"User"},assignees:{nodes:[{name:"Asen Arizanov",avatarUrl:"https://avatars3.githubusercontent.com/u/24224244?v=4",__typename:"User"}],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/150",labels:{edges:[{node:{name:"enhancement",__typename:"Label"},__typename:"LabelEdge"},{node:{name:"pkg:conversational-ui",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Unable to conditionally render a TabStripTab: Exception is thrown",state:"OPEN",number:152,body:'## I\'m submitting a...\r\n\r\n* Bug report \r\n\r\n## Current behavior\r\nWhen conditionally rendering a TabStripTab, the parent TabStrip thinks that the expression is a child and tries to render it, leading to the error: Cannot read property \'props\' of undefined\r\n\r\n## Expected behavior\r\nI would expect expressions for conditional rendering to be allowed inside a TabStrip.\r\n\r\nFYI another similar library also had this exact issue and here is how they resolved it:\r\nhttps://github.com/grommet/grommet/issues/1159\r\n\r\n\r\n## Minimal reproduction of the problem with instructions\r\nhttps://stackblitz.com/edit/react-4kknwi?file=app/main.js\r\n\r\n## What is the motivation or use case for changing the behavior?\r\nAbility to hide tabs and perform other expressions inside tabStrips\r\n\r\n## Environment\r\n\r\nPackage versions:\r\n    "react": "16.7.0",\r\n    "react-dom": "16.7.0",\r\n    "@progress/kendo-react-buttons": "2.5.0",\r\n    "@progress/kendo-react-charts": "2.5.0",\r\n    "@progress/kendo-react-conversational-ui": "2.5.0",\r\n    "@progress/kendo-react-dateinputs": "2.5.0",\r\n    "@progress/kendo-react-dialogs": "2.5.0",\r\n    "@progress/kendo-react-dropdowns": "2.5.0",\r\n    "@progress/kendo-react-excel-export": "2.5.0",\r\n    "@progress/kendo-react-gauges": "2.5.0",\r\n    "@progress/kendo-react-grid": "2.5.0",\r\n    "@progress/kendo-react-inputs": "2.5.0",\r\n    "@progress/kendo-react-intl": "2.5.0",\r\n    "@progress/kendo-react-layout": "2.5.0",\r\n    "@progress/kendo-react-pdf": "2.5.0",\r\n    "@progress/kendo-react-tooltip": "2.5.0",\r\n    "@progress/kendo-react-popup": "2.5.0",\r\n    "@progress/kendo-react-ripple": "2.5.0",\r\n\r\nBrowser:\r\n- Chrome (desktop) version 71\r\n',createdAt:"2018-12-21T08:21:50Z",author:{login:"k290",avatarUrl:"https://avatars0.githubusercontent.com/u/5611876?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/152",labels:{edges:[{node:{name:"enhancement",__typename:"Label"},__typename:"LabelEdge"},{node:{name:"pkg:layout",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"accessibility compliance in Kendo React Libraries",state:"OPEN",number:153,body:'Hello, \r\n\r\nWe are going though an accessibility scan in our application, and one of the issues that we have got in the scan is:\r\n\r\n<img width="508" alt="captura de pantalla 2018-12-21 a las 14 18 46" src="https://user-images.githubusercontent.com/12745033/50344458-5b990b80-052b-11e9-8c00-188f855ac336.png">\r\n\r\nThe guidelines provided in this scan are: To help users navigate a page, WAI-ARIA widgets must have an accessible name specified with aria-label, aria-labeledby or the widget\'s inner text.\r\n\r\nExample:  \r\n\r\n      <div role="tree" aria-label="table of contents">...</div>\r\n\r\nWe are using kendo-grid-react-wrapper for our grids, and we\'ve seen that its elements doesn\'t include: aria-label, where there is a role=. As we can see in the screenshot provided.\r\n\r\nI\'ve checked this link: https://www.telerik.com/kendo-react-ui/components/accessibility/ \r\nbut I cant see a way in which I could correct this issue. \r\n\r\n- Could you help me to understand if there is a way we could correct this kind of issue in our application to be accessibility compliant?\r\n\r\nThanks in advance,\r\n',createdAt:"2018-12-21T13:25:39Z",author:{login:"IreneMarquet",avatarUrl:"https://avatars1.githubusercontent.com/u/12745033?v=4",__typename:"User"},assignees:{nodes:[{name:"Stefan Stefanov",avatarUrl:"https://avatars2.githubusercontent.com/u/11087921?v=4",__typename:"User"}],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/153",labels:{edges:[{node:{name:"needs more information",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Passing array with single ExcelExportColumn as Children results in error",state:"OPEN",number:154,body:"At this line:\r\n```jsx\r\nconst root = React.Children.count(this.props.children) === 1 && React.Children.only(this.props.children);\r\n```\r\n`count` returns 1, but `children` is array, and `only` throws exception. \r\n\r\nWorkaround: map the columns to `columns` prop instead of `children` prop.\r\n\r\nsample: https://stackblitz.com/edit/react-2b8ek7-qhbqgb?file=app/main.js",createdAt:"2019-01-02T09:25:59Z",author:{login:"Xizario",avatarUrl:"https://avatars0.githubusercontent.com/u/9458606?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/154",labels:{edges:[{node:{name:"bug",__typename:"Label"},__typename:"LabelEdge"},{node:{name:"pkg:excel-export",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"The className of a button that is inside a buttonGroup is not set.",state:"OPEN",number:155,body:"The className of a button that is inside a buttonGroup is not set.\r\n\r\nThe className of a single button can be set, but once the button is inside a ButtonGroup the class is not set.\r\n\r\nAn example can be observed here:\r\n\r\nhttps://stackblitz.com/edit/react-wsdxcv-3lyc83?file=app/main.js",createdAt:"2019-01-04T07:27:14Z",author:{login:"simonssspirit",avatarUrl:"https://avatars2.githubusercontent.com/u/11087921?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/155",labels:{edges:[{node:{name:"bug",__typename:"Label"},__typename:"LabelEdge"},{node:{name:"pkg:buttons",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Add DateTimePicker",state:"OPEN",number:156,body:"Add DateTimePicker.\r\n\r\nThis issue is to keep track of the progress of making the DateTimePicker component.",createdAt:"2019-01-07T08:24:12Z",author:{login:"simonssspirit",avatarUrl:"https://avatars2.githubusercontent.com/u/11087921?v=4",__typename:"User"},assignees:{nodes:[{name:"Kiril Peyanski",avatarUrl:"https://avatars1.githubusercontent.com/u/30626787?v=4",__typename:"User"}],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/156",labels:{edges:[{node:{name:"New component",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"TimePicker not assignable to ComponentType<TimePickerProps> (Typescript Typings issue)",state:"CLOSED",number:157,body:"\r\n\r\n## I'm submitting a...\r\n\r\n\r\n* Bug report \r\n\r\n\r\n## Current behavior\r\nI am having an issue with the TimePicker typescript typings. I am trying to create a React HOC in Typescript which handles the validation logic of all Kendo FormComponents . However, in the case of the TimePicker it is not allowing it to be assigned to a React.ComponentType. All other Kendo Form components are fine.\r\n\r\n## Minimal reproduction of the problem with instructions\r\nPlease see the following code\r\n\r\n```\r\nimport * as React from 'react';\r\nimport { Input, MaskedTextBox, NumericTextBox, InputProps, MaskedTextBoxProps, NumericTextBoxProps } from '@progress/kendo-react-inputs';\r\nimport { DatePicker, TimePicker, DateInputProps, DatePickerProps, DateInput, TimePickerProps } from '@progress/kendo-react-dateinputs';\r\nimport { AutoComplete, ComboBox, DropDownList, MultiSelect, AutoCompleteProps, ComboBoxProps, DropDownListProps, MultiSelectProps } from '@progress/kendo-react-dropdowns';\r\n\r\ninterface WithValidationProps {\r\n    validityStyles?: boolean;\r\n    onChange?: React.ChangeEventHandler;\r\n}\r\n\r\ninterface WithValidationState {\r\n    touched: boolean;\r\n}\r\n\r\nconst withValidation = <P extends object>(Component: React.ComponentType<P>) =>\r\n    class WithValidation extends React.PureComponent<P & WithValidationProps, WithValidationState> {\r\n\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = { touched: false };\r\n            this.handleChange = this.handleChange.bind(this);\r\n        }\r\n\r\n        handleChange(event) {\r\n            this.setState(() => {\r\n                return { touched: true };\r\n            })\r\n            // Check if another event function should be triggered\r\n            if (this.props.onChange) {\r\n                this.props.onChange(event);\r\n            }\r\n        }\r\n\r\n        render() {\r\n            const { validityStyles, onChange, ...props } = this.props as WithValidationProps;\r\n\r\n            return <Component {...props as any} validityStyles={this.state.touched} onChange={this.handleChange} />;\r\n        }\r\n    };\r\n\r\nexport const PipDateInput = withValidation<DateInputProps>(DateInput);\r\nexport const PipDatePicker = withValidation<DatePickerProps>(DatePicker);\r\nexport const PipTimePicker = withValidation<TimePickerProps>(TimePicker);\r\nexport const PipAutoComplete = withValidation<AutoCompleteProps>(AutoComplete);\r\nexport const PipComboBox = withValidation<ComboBoxProps>(ComboBox);\r\nexport const PipDropDownList = withValidation<DropDownListProps>(DropDownList);\r\nexport const PipMultiSelect = withValidation<MultiSelectProps>(MultiSelect);\r\nexport const PipMaskedTextBox = withValidation<MaskedTextBoxProps>(MaskedTextBox);\r\nexport const PipNumericTextBox = withValidation<NumericTextBoxProps>(NumericTextBox);\r\nexport const PipInput = withValidation<InputProps>(Input);\r\n```\r\n\r\nAs you can see there is something wrong with the typings on the TimePicker:\r\n![image](https://user-images.githubusercontent.com/5611876/50767575-09275100-1286-11e9-85b1-68ff9a62303c.png)\r\n\r\n## Environment\r\n\r\nPackage versions:\r\nKendo-React: 2.5\r\nReact: 16.7.18\r\n\r\nSystem:\r\n- TypeScript version: 3.2\r\n- Platform:  Windows\r\n",createdAt:"2019-01-07T12:14:29Z",author:{login:"k290",avatarUrl:"https://avatars0.githubusercontent.com/u/5611876?v=4",__typename:"User"},assignees:{nodes:[{name:"Kiril Peyanski",avatarUrl:"https://avatars1.githubusercontent.com/u/30626787?v=4",__typename:"User"}],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/157",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"DatePicker Animation Issue on IPad",state:"OPEN",number:158,body:"## I'm submitting a...\r\n* Bug report\r\n\r\n## Current behavior\r\nWhen the DatePicker is at the bottom of the page, it opens upwards, to prevent clipping off the bottom. This animation appears incorrectly on iPad.\r\n\r\n## Expected behavior\r\nBoth animations should appear correctly on iPad.\r\n\r\n## Minimal reproduction of the problem with instructions\r\nHere is the editor:\r\nhttps://stackblitz.com/edit/react-2syswt?file=app/main.js\r\n\r\nBut it may be easier to see with the live example:\r\nhttps://react-2syswt.stackblitz.io\r\n\r\n1. Scroll down to the bottom of the page where there is a 2nd DatePicker.\r\n2. This one should open upwards. It will have a glitchy animation on iPad.\r\n\r\n## What is the motivation or use case for changing the behavior?\r\nWe have DatePickers on many of our forms which appear further down the page. Our form is designed to work with iPads and larger tablets, and the animation is a bit distracting.\r\n\r\n## Environment\r\nBrowser:\r\n- Safari (iOS) version 12.1.1\r\n\r\nSystem:\r\n- Platform:  iPad MR7F2X/A",createdAt:"2019-01-08T23:53:22Z",author:{login:"GeoMarkou",avatarUrl:"https://avatars0.githubusercontent.com/u/12272970?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/158",labels:{edges:[{node:{name:"bug",__typename:"Label"},__typename:"LabelEdge"},{node:{name:"pkg:dateinputs",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Multiselect with filtering incorrectly calculating focusedIndex.",state:"OPEN",number:159,body:'Step to reproduce:\r\n\r\nCase 1:\r\n1. Go to documentation page: https://www.telerik.com/kendo-react-ui/components/dropdowns/multiselect/filtering/\r\n2. Type \u201car\u201d symbols\r\n\r\nActual result: Focused element is Bulgaria instead Armenia\r\n\r\nExpected result: The first element in a list focused - Armenia\r\n\r\nCase 2:\r\n\r\n1. Go to documentation page: https://www.telerik.com/kendo-react-ui/components/dropdowns/multiselect/filtering/\r\n2. Type \u201cary\u201d - Hungary is suggested\r\n\r\n3. Remove "y" to search "ar"\r\n\r\nActual result: There is no selected element\r\nExpected result: The first element in a list focused - Armenia',createdAt:"2019-01-09T08:57:19Z",author:{login:"simonssspirit",avatarUrl:"https://avatars2.githubusercontent.com/u/11087921?v=4",__typename:"User"},assignees:{nodes:[{name:"Nikolay Stoychev",avatarUrl:"https://avatars0.githubusercontent.com/u/13251479?v=4",__typename:"User"}],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/159",labels:{edges:[{node:{name:"bug",__typename:"Label"},__typename:"LabelEdge"},{node:{name:"pkg:dropdowns",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"MultiSelect value binding should not require text",state:"CLOSED",number:160,body:"I am basing my suggestion on sample located here:\r\nhttps://www.telerik.com/kendo-react-ui/components/dropdowns/multiselect/binding/#toc-datasets-of-objects\r\nI am wrapping my multiselect inside a high order component which takes care of the data binding.When I am doing the value binding (which is usually done in the multiselect parent component e.g. form page), i Find it unnecessary to have to provide text in addition to value since I get the value as a foreign key but do not want to hit the database just to fetch the text (e.g. do not want to do Entity Framework include join).\r\n\r\nSo instead of passing both text and id to the state as below:\r\n\r\n`state = {        \r\n        value: [\r\n            { text: 'Football', id: 2 },\r\n            { text: 'Tennis', id: 3 }\r\n        ]\r\n    };`\r\n\r\nI feel it should be enough to pass only the id:\r\n\r\n`state = {        \r\n        value: [\r\n            { id: 2 },\r\n            { id: 3 }\r\n        ]\r\n    };`\r\n\r\nThanks",createdAt:"2019-01-09T13:18:52Z",author:{login:"madani2010",avatarUrl:"https://avatars2.githubusercontent.com/u/16631814?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/160",labels:{edges:[{node:{name:"needs more information",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Tooltip: Elements affected by title tag of parent do not get Kendo tooltip styling",state:"OPEN",number:161,body:"* Bug report \x3c!-- Please search for a similar issue before you submit a bug report. --\x3e\r\n\r\n## Current behavior\r\nA span with  a `title` attribute, sometimes has subelements (e.g`. <i>, <strong> `etc. Browsers give several subelements a tooltip with the same `title` as the parent. But these do not get the Kendo tooltip styling\r\n## Expected behavior\r\n\r\nDisplay the Kendo tooltip styling on all elements that are affected by the `title`\r\n\r\n**or**\r\n\r\nDo not display a tooltip on any subelements (in which case the developer must put a `title` on each subelement).  **However this breaks away from current web standards**: http://jsfiddle.net/syxm4j51/\r\n\r\n## Minimal reproduction of the problem with instructions\r\nhttps://stackblitz.com/edit/react-mghojh?file=app/main.js\r\n## What is the motivation or use case for changing the behavior?\r\nConsistent styling of elements affected by `title` tag\r\n\r\n## Environment\r\n\r\nkendo-react: 2.5.0\r\nreact: 16.7.0\r\n\r\nBrowser:\r\n\x3c!-- Leave only the browsers that you tested the issue with. --\x3e\r\n- Chrome (desktop) version 71\r\n",createdAt:"2019-01-09T14:06:42Z",author:{login:"k290",avatarUrl:"https://avatars0.githubusercontent.com/u/5611876?v=4",__typename:"User"},assignees:{nodes:[{name:"Stefan Stefanov",avatarUrl:"https://avatars2.githubusercontent.com/u/11087921?v=4",__typename:"User"}],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/161",labels:{edges:[{node:{name:"enhancement",__typename:"Label"},__typename:"LabelEdge"},{node:{name:"pkg:tooltip",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"TreeView Component",state:"CLOSED",number:162,body:"",createdAt:"2019-01-11T15:18:07Z",author:{login:"asen-arizanov",avatarUrl:"https://avatars3.githubusercontent.com/u/24224244?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/162",labels:{edges:[{node:{name:"New component",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"DropDown with Virtual scrolling not showing all items when scrolling up.",state:"OPEN",number:163,body:"DropDown with Virtual scrolling not showing all items when scrolling up.\r\n\r\nThis occurs when the page size is more than 3 times bigger than the visible items. Also, it occurs only when the mouse wheel is used for scrolling.\r\n\r\nThis is an example: https://stackblitz.com/edit/react-4skf9l?file=app/main.js\r\n\r\nWe have to make additional research why this occurs only when the mouse wheel is used.",createdAt:"2019-01-15T12:03:28Z",author:{login:"simonssspirit",avatarUrl:"https://avatars2.githubusercontent.com/u/11087921?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/163",labels:{edges:[{node:{name:"pkg:dropdowns",__typename:"Label"},__typename:"LabelEdge"},{node:{name:"research",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"NumericTextBoxProps missing important onBlur & onFocus",state:"OPEN",number:164,body:'## I\'m submitting a...\r\n* Suggestion for improvement\r\n\r\n## Current behavior\r\n`NumericTextBoxProps` doesn\'t have any `onBlur`& `onFocus` callbacks like other input components do. Currently it\'s not possible to capture those events of the `NumericTextBox`\r\n\r\n## Expected behavior\r\n `onBlur`& `onFocus` callbacks would be available for usage\r\n\r\n## What is the motivation or use case for changing the behavior?\r\nI need to be able to process the events for component changes\r\n\r\n## Environment\r\n\r\nPackage versions:\r\n\x3c!--\r\n  Paste the output from "npm ls --depth 0" in the code block below.\r\n  Omit this step if the problem is reproducible on our demo site.\r\n--\x3e\r\n```\r\n"@progress/kendo-react-inputs": "^2.6.0",\r\n```\r\n',createdAt:"2019-01-15T21:49:07Z",author:{login:"DanielHTpg",avatarUrl:"https://avatars1.githubusercontent.com/u/24475714?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/164",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"NumericTextBox doesn't truncate trailing zeros",state:"OPEN",number:165,body:"\x3c!--\r\n  Please help us process GitHub issues faster by providing the necessary information in the template format that follows.\r\n  We might not be able to assist with issues which lack important information.\r\n--\x3e\r\n\r\n## I'm submitting a...\r\n\x3c!--\r\n  Please submit:\r\n  * Feature requests to our UserVoice Portal at https://goo.gl/HsVr7R.\r\n  * Support requests to https://www.telerik.com/account/support-tickets.\r\n--\x3e\r\nBug report\r\n## Current behavior\r\n\x3c!--\r\n  * Describe the current (faulty) behavior which is caused by the issue.\r\n  * In the latest package versions, check whether this behavior still represents an issue.\r\n--\x3e\r\nIn a NumericTextBox with format 'c', when entering values after the decimal, trailing zeros in the displayed value are not truncated until you enter one more decimal than your maximumFractionDigits.\r\n## Expected behavior\r\n\x3c!-- Describe what the desired behavior would be. --\x3e\r\nBecause the control automatically inserts zeros when entering values before the decimal, I would expect those zeros to be overwritten -- not offset -- when entering the decimal portion. I.e. If i focused the box, typed '5', '.', '2', and '3', I should see '$5.23' in the box, not '$5.2300'\r\n## Minimal reproduction of the problem with instructions\r\n\x3c!--\r\nFor bug reports, please provide the **STEPS TO REPRODUCE** and, if possible, a **MINIMAL DEMO** of the issue. You can use https://plnkr.co or share your project in a public repository.\r\n\r\n  1. Find an example in [the documentation](http://www.telerik.com/kendo-angular-ui/components/) that looks similar to your case.\r\n  2. Open it in Plunker by using the **OPEN AS PLUNKER** button.\r\n  3. Modify the plunk, so that the issue is reproducible in it. Try to include the minimum possible amount of code.\r\n  4. Save the plunk by using the blue **Save** button at the top.\r\n  5. Copy the link from the address bar of the browser.\r\n--\x3e\r\nhttps://react-6tetzy-sc4gxs.stackblitz.io\r\nClick on the box, and type '5', '.', '2', and '3'.\r\n## What is the motivation or use case for changing the behavior?\r\n\x3c!-- Describe the motivation or the concrete use case. --\x3e\r\nThe displayed value should respect the culture formatting options (i.e. maximumFractionDigits)",createdAt:"2019-01-15T22:55:40Z",author:{login:"jbrianskog",avatarUrl:"https://avatars0.githubusercontent.com/u/1577680?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/165",labels:{edges:[{node:{name:"bug",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Pass the information if the button the toggable button is active or not in the click event",state:"OPEN",number:166,body:"Pass the information if the button the toggable button is active or not in the click event.\r\nCurrently, there is no official way to obtain this information.",createdAt:"2019-01-17T08:39:41Z",author:{login:"simonssspirit",avatarUrl:"https://avatars2.githubusercontent.com/u/11087921?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/166",labels:{edges:[{node:{name:"enhancement",__typename:"Label"},__typename:"LabelEdge"},{node:{name:"pkg:buttons",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Kendo-editor",state:"OPEN",number:167,body:"I was trying the free version of the kendo ui, and i was not able to find any text editor input.\r\nI am searching for an input where i can change the style of the text like make it bold, italic and it's direction. \r\ni couldn't find anything similar, I am using the kendo react package. can you please help ?",createdAt:"2019-01-19T01:16:36Z",author:{login:"jadrehaoui",avatarUrl:"https://avatars3.githubusercontent.com/u/20945040?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/167",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"kendo-draggable - Type error: 'bindTo', which lacks return-type annotation, implicitly has an 'any' return type. (Typescript Typings issue)",state:"OPEN",number:168,body:"## I'm submitting a...\r\n* Bug report \r\n\r\n## Current behavior\r\n.../ClientApp/node_modules/@telerik/kendo-draggable/dist/npm/main.d.ts\r\nType error: 'bindTo', which lacks return-type annotation, implicitly has an 'any' return type.  TS7010\r\n\r\nline | code\r\n-- | --\r\n8 | export default class Draggable {\r\n9 |     constructor(options?: DraggableOptions)\r\n10 |     bindTo(element: Element)\r\nerror     |     ^\r\n11 |     destroy()\r\n12 | }\r\n13 |\r\n\r\n## Easy Fix\r\nI just added \": void\" return-type declarations to both bindTo() and destroy() in my local copies and it compiled and ran fine.\r\n```\r\nexport default class Draggable {\r\n    constructor(options?: DraggableOptions)\r\n    bindTo(element: Element): void\r\n    destroy(): void\r\n}\r\n```\r\n\r\n## Minimal reproduction of the problem with instructions\r\nIn a Create-React-App 2.1+ Typescript project just import kendo-react-dialogs in a tsx page. Don't even have to use it.\r\n```\r\nimport { Dialog, DialogActionsBar } from '@progress/kendo-react-dialogs';\r\n```\r\n\r\n## Environment\r\n\r\nPackage versions:\r\n```\r\n+-- @progress/kendo-data-query@1.5.0\r\n+-- @progress/kendo-react-animation@2.6.1\r\n+-- @progress/kendo-react-dateinputs@2.6.1\r\n+-- @progress/kendo-react-dialogs@2.6.1\r\n+-- @progress/kendo-react-dropdowns@2.6.1\r\n+-- @progress/kendo-react-excel-export@2.6.1\r\n+-- @progress/kendo-react-grid@2.6.1\r\n+-- @progress/kendo-react-inputs@2.6.1\r\n+-- @progress/kendo-react-intl@2.6.1\r\n+-- @progress/kendo-react-layout@2.6.1\r\n+-- @progress/kendo-react-popup@2.6.1\r\n+-- @progress/kendo-theme-bootstrap@2.18.0\r\n+-- @progress/kendo-theme-default@2.63.0\r\n+-- @types/jest@23.3.10\r\n+-- @types/lodash@4.14.118\r\n+-- @types/node@10.12.12\r\n+-- @types/react@16.7.11\r\n+-- @types/react-dom@16.0.11\r\n+-- @types/react-router@4.4.1\r\n+-- @types/react-router-dom@4.3.1\r\n+-- @types/toastr@2.1.35\r\n+-- bootstrap@4.1.3\r\n+-- change-case@3.0.2\r\n+-- dexie@2.0.4\r\n+-- jquery@3.3.1\r\n+-- lodash@4.17.11\r\n+-- moment@2.22.2\r\n+-- node-sass@4.10.0\r\n+-- npm-run-all@4.1.5\r\n+-- popper.js@1.14.6\r\n+-- react@16.6.3\r\n+-- react-dom@16.6.3\r\n+-- react-router@4.3.1\r\n+-- react-router-dom@4.3.1\r\n+-- react-scripts@2.1.1\r\n+-- toastr@2.1.4\r\n`-- typescript@3.2.1\r\n```\r\n\r\nBrowser:\r\n- Chrome (desktop) version: 71.0.3578.98 (Official Build) (64-bit)\r\n\r\nSystem:\r\n- TypeScript version: 3.1.3\r\n- Node version: 10.13.0\r\n- npm version: 6.4.1\r\n- Platform:  Windows 10\r\n",createdAt:"2019-01-19T02:54:54Z",author:{login:"Beej126",avatarUrl:"https://avatars2.githubusercontent.com/u/6301228?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/168",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"ConversationalUi - Custom Message box",state:"OPEN",number:169,body:"\x3c!--\r\n  Please help us process GitHub issues faster by providing the necessary information in the template format that follows.\r\n  We might not be able to assist with issues which lack important information.\r\n--\x3e\r\n\r\n\x3c!--\r\n  Please submit:\r\n  * Feature requests to our UserVoice Portal at https://goo.gl/HsVr7R.\r\n  * Support requests to https://www.telerik.com/account/support-tickets.\r\n--\x3e\r\nIt would be helpful if user is able to pass custom message box in ConversationalUi component. \r\n\x3c!--  Leave one of the following options. --\x3e\r\n* Suggestion for improvement\r\n\r\n",createdAt:"2019-01-21T07:53:35Z",author:{login:"abhinav-juneja",avatarUrl:"https://avatars1.githubusercontent.com/u/35251889?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/169",labels:{edges:[{node:{name:"enhancement",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Ripple effect stutters",state:"OPEN",number:170,body:"## I'm submitting a...\r\n* Suggestion for improvement\r\n\r\n## Current behavior\r\nWhen clicking a button with the Ripple effect, if the result of the button requires high CPU usage, it will freeze the animation of the Ripple and jump to when it is complete.\r\n\r\n## Expected behavior\r\nRipple effect completes while the DOM is busy.\r\n\r\n## Minimal reproduction of the problem with instructions\r\nEditor:\r\nhttps://stackblitz.com/edit/react-amde8z\r\n\r\nViewer:\r\nhttps://react-amde8z.stackblitz.io\r\n\r\nClick the change tab button. When loading the light tab, it displays the animation smoothly. When loading the resource-heavy tab, the animation will freeze. I've provided an example animation that doesn't use DOM-affecting CSS styles which continues to play during the transition.\r\n\r\n## What is the motivation or use case for changing the behavior?\r\nWe have a tab based layout for our more complex forms that have too much content for a single page. When switching between tabs the ripple animation freezes with makes the page appear unresponsive.\r\n\r\n## Environment\r\nBrowser:\r\n- Chrome (desktop) Version 71.0.3578.98 (Official Build) (64-bit)",createdAt:"2019-01-23T01:00:23Z",author:{login:"GeoMarkou",avatarUrl:"https://avatars0.githubusercontent.com/u/12272970?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/170",labels:{edges:[{node:{name:"pkg:ripple",__typename:"Label"},__typename:"LabelEdge"},{node:{name:"research",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Add HTML Editor component",state:"OPEN",number:171,body:"Add Editor component.\r\n\r\nThis is an issue for the new Editor component.\r\n\r\nHere you can share your ideas for features that will be essential for the component as this will help us prioritize them.",createdAt:"2019-01-23T06:41:13Z",author:{login:"simonssspirit",avatarUrl:"https://avatars2.githubusercontent.com/u/11087921?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/171",labels:{edges:[{node:{name:"New component",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Material Floating Labels Appears Incorrectly When Autofilled",state:"OPEN",number:172,body:'## I\'m submitting a...\r\n* Bug report\r\n\r\n## Current behavior\r\nMaterial floating labels overlaps the text on Chrome in autoComplete forms.\r\n\r\n## Expected behavior\r\nFloating label initially renders above the input if it is autoCompleted.\r\n\r\n## Minimal reproduction of the problem with instructions\r\nI had trouble getting the Editor to display the "save my password" prompt so I recommend the Viewer.\r\n\r\nEditor:\r\nhttps://stackblitz.com/edit/react-bcowxm\r\n\r\nViewer:\r\nhttps://react-bcowxm.stackblitz.io\r\n\r\n1. Type anything into the username and password.\r\n2. Press submit, remembering to click "save my password" when prompted.\r\n3. Refresh the page, the fields should autofill with the yellow background on page load.\r\n4. Clicking anywhere on the page will make the fields realise they have content and the labels will then go to their correct spot.\r\n\r\n![image](https://user-images.githubusercontent.com/12272970/51647705-caa3cd00-1fcd-11e9-83cf-a011f62c4ce4.png)\r\n\r\n## What is the motivation or use case for changing the behavior?\r\nWe just changed our login page to use Kendo Material design with floating labels, but they don\'t display correctly on Chrome when returning to the site. They work correctly in Firefox so maybe it\'s something to do with the way Chrome autofills.\r\n\r\n## Environment\r\nBrowser:\r\n- Chrome (desktop) Version 71.0.3578.98 (Official Build) (64-bit)',createdAt:"2019-01-24T01:15:12Z",author:{login:"GeoMarkou",avatarUrl:"https://avatars0.githubusercontent.com/u/12272970?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/172",labels:{edges:[{node:{name:"bug",__typename:"Label"},__typename:"LabelEdge"},{node:{name:"pkg:inputs",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"MultiSelect closes upon selection (autoClose)",state:"OPEN",number:173,body:"## I'm submitting a...\r\n* Suggestion for improvement\r\n\r\n## Current behavior\r\nWhen the item is selected in MultiSelect, a list with items closes and you have to open it again to select another one. You do not have the option to disable that behaviour.\r\n\r\n## Expected behavior\r\nHave the ability to choose if we want MultiSelect to autoClose or no.\r\n\r\n## What is the motivation or use case for changing the behavior?\r\nMultiSelects that close everytime you select an item are generally considered as bad UX. Also, you are supporting autoClose feature in the [jQuery implementation of MultiSelect](https://docs.telerik.com/kendo-ui/api/javascript/ui/multiselect/configuration/autoclose)\r\n",createdAt:"2019-01-24T12:51:38Z",author:{login:"Nodios",avatarUrl:"https://avatars2.githubusercontent.com/u/7250398?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/173",labels:{edges:[{node:{name:"enhancement",__typename:"Label"},__typename:"LabelEdge"},{node:{name:"pkg:dropdowns",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Virtual Scrolling issue when data is filtered to less than page size",state:"OPEN",number:174,body:"\x3c!--\r\n  Please help us process GitHub issues faster by providing the necessary information in the template format that follows.\r\n  We might not be able to assist with issues which lack important information.\r\n--\x3e\r\n\r\n## I'm submitting a...\r\n\x3c!--\r\n  Please submit:\r\n  * Feature requests to our UserVoice Portal at https://goo.gl/HsVr7R.\r\n  * Support requests to https://www.telerik.com/account/support-tickets.\r\n--\x3e\r\n\r\n\x3c!--  Leave one of the following options. --\x3e\r\n* Bug report \x3c!-- Please search for a similar issue before you submit a bug report. --\x3e\r\n\r\n\r\n## Current behavior\r\n\x3c!--\r\n  * Describe the current (faulty) behavior which is caused by the issue.\r\n  * In the latest package versions, check whether this behavior still represents an issue.\r\n--\x3e\r\nGiven a react kendo grid configured such that\r\n* the sum of the column widths is greater than the table width, i.e. the horizontal scroll bar is visible\r\n* scroll mode is set to 'virtual'\r\nand the data provided to the grid is only enough to fill up a little over half the page\r\nwhen the grid is rendered\r\nthen the vertical scroll bar shows as available\r\nand results in unpredictable behavior.\r\n\r\n## Expected behavior\r\nMatch the behavior of the grid if the table is wider than the sum of the column widths.\r\n\r\n## Minimal reproduction of the problem with instructions\r\nhttps://react-n4yebv.stackblitz.io\r\n\r\n## Environment\r\nReproducible in your production demos. \r\n\r\n\r\nBrowser:\r\n\x3c!-- Leave only the browsers that you tested the issue with. --\x3e\r\n- Chrome (desktop) version XX\r\n- Edge version XX\r\n",createdAt:"2019-01-24T20:37:40Z",author:{login:"jhursey",avatarUrl:"https://avatars2.githubusercontent.com/u/45829668?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/174",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"DatePicker popup calendar is behind Dialog",state:"OPEN",number:175,body:'I would like to report an issue similar to this:\r\nhttps://github.com/telerik/kendo-react/issues/45\r\n\r\nBut for DatePicker calendar view being behind Dialog.I am using the workaround as mentioned in the post.\r\nMy environment is:\r\n\r\n`"dependencies": {\r\n    "@progress/kendo-data-query": "^1.5.0",\r\n    "@progress/kendo-react-dateinputs": "^2.6.1",\r\n    "@progress/kendo-react-dialogs": "^2.6.1",\r\n    "@progress/kendo-react-dropdowns": "^2.6.1",\r\n    "@progress/kendo-react-grid": "^2.6.1",\r\n    "@progress/kendo-react-inputs": "^2.6.1",\r\n    "@progress/kendo-react-intl": "^2.6.1",\r\n    "@progress/kendo-theme-default": "^3.2.0",\r\n    "@progress/kendo-ui": "^2019.1.115",\r\n    "@tinymce/tinymce-react": "^2.3.0",\r\n    "bootstrap": "^3.3.7",\r\n    "deep-diff": "^1.0.2",\r\n    "jquery": "^3.3.1",\r\n    "react": "^16.7.0",\r\n    "react-bootstrap": "^0.32.4",\r\n    "react-dom": "^16.7.0",\r\n    "react-redux": "^5.0.6",\r\n    "react-router-bootstrap": "^0.24.4",\r\n    "react-router-dom": "^4.2.2",\r\n    "react-router-redux": "^5.0.0-alpha.8",\r\n    "react-scripts": "2.1.3",\r\n    "redux": "^3.7.2",\r\n    "redux-thunk": "^2.2.0",\r\n    "rimraf": "^2.6.2"\r\n  },`',createdAt:"2019-01-28T10:54:03Z",author:{login:"madani2010",avatarUrl:"https://avatars2.githubusercontent.com/u/16631814?v=4",__typename:"User"},assignees:{nodes:[{name:"Stefan Stefanov",avatarUrl:"https://avatars2.githubusercontent.com/u/11087921?v=4",__typename:"User"}],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/175",labels:{edges:[{node:{name:"documenation",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Dialog Window - Controls are not editable",state:"OPEN",number:176,body:"There is a bug in the dialog component. The Controls on it - also on your demo - are not editable\r\n\r\nhttps://www.telerik.com/kendo-react-ui/components/dialogs/window/\r\n",createdAt:"2019-01-29T11:37:44Z",author:{login:"MrVJones",avatarUrl:"https://avatars3.githubusercontent.com/u/47143696?v=4",__typename:"User"},assignees:{nodes:[{name:"Stefan Stefanov",avatarUrl:"https://avatars2.githubusercontent.com/u/11087921?v=4",__typename:"User"}],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/176",labels:{edges:[{node:{name:"bug",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"ColumnMenu Dropdown triggers horizontal scrollbar",state:"OPEN",number:179,body:"## I'm submitting a...\r\n* Bug report\r\n\r\n## Current behavior\r\nColumnMenu Dropdown that near the rightmost edge of the browser will enable horizontal scrollbar and stick to the edge if user scrolls. This happens when `body` has `overflow: scroll`.\r\n![screen shot 2019-01-29 at 11 53 11 am](https://user-images.githubusercontent.com/28632395/51936265-a6c0fc80-23bc-11e9-9f5b-93126c7f023d.png)\r\n![screen shot 2019-01-29 at 11 53 22 am](https://user-images.githubusercontent.com/28632395/51936285-ade80a80-23bc-11e9-8b00-e5bfc46f3e8f.png)\r\n\r\n## Expected behavior\r\nColumnMenu dropdown should stay at the place and not trigger horizontal scrollbar. \r\n\r\n## Minimal reproduction of the problem with instructions\r\n\r\n1. [Link](https://react-kz9ans.stackblitz.io/) to reproduction of issue\r\nIf you cannot open it, go to [here](https://www.telerik.com/kendo-react-ui/components/grid/columns/column-menu/ ) and open the first example code in stackblitz\r\n\r\n2. Add `overflow: scroll` to `body`\r\n\r\n3.  Expand the rightmost columnMenu dropdown, and try to scroll right.\r\n\r\n## Environment\r\n\r\nPackage versions:\r\nReproducible on [here](https://www.telerik.com/kendo-react-ui/components/grid/columns/column-menu/)\r\n\r\nBrowser:\r\n\x3c!-- Leave only the browsers that you tested the issue with. --\x3e\r\n- Chrome (desktop)  71.0.3578.98 (Official Build) (64-bit)\r\n\r\nSystem:\r\n- Platform:  Windows\r\n\r\nThis issue only reproducible on Windows machines by far, I can't reproduce it on Mac. Maybe Mac and Windows handle scrollbar differently.\r\n",createdAt:"2019-01-29T20:10:49Z",author:{login:"jason-xiao-st",avatarUrl:"https://avatars0.githubusercontent.com/u/28632395?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/179",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Grid details row action header",state:"OPEN",number:180,body:"\r\n\r\n## I'm submitting a...\r\n\r\n* Bug report\r\n\r\n## Current behavior\r\nIf you go [here](https://www.telerik.com/kendo-react-ui/components/grid/advanced-features/detail/) you'll see that there is a header element on the left of the Product header. This header space was not present in previous versions of Kendo.\r\n\r\n## Expected behavior\r\nThis header should not be visible like in previous versions.\r\n\r\n## Minimal reproduction of the problem with instructions\r\nIn official documentation [here](https://www.telerik.com/kendo-react-ui/components/grid/advanced-features/detail/) \r\n\r\nWe do not have a way to remove that header if we want to have details row. \r\n",createdAt:"2019-01-30T21:03:28Z",author:{login:"Nodios",avatarUrl:"https://avatars2.githubusercontent.com/u/7250398?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/180",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"DatePicker Doesn't Focus Correctly On iPad",state:"OPEN",number:181,body:"## I'm submitting a...\r\n* Bug report\r\n\r\n## Current behavior\r\n'Tabbing' to the DatePicker on iPad Safari places the cursor at the end of the field.\r\n\r\n## Expected behavior\r\nIt should place the cursor at the start (in this case the Day field) so typing the date flows logically.\r\n\r\n## Minimal reproduction of the problem with instructions\r\nEditor URL:\r\nhttps://stackblitz.com/edit/react-fzcstv\r\n\r\nViewer URL:\r\nhttps://react-fzcstv.stackblitz.io\r\n\r\n1. Tap into the empty example textbox to focus it.\r\n2. Press the 'next field' button on the keyboard (functions like pressing Tab) to navigate to the DatePicker.\r\n3. The cursor will be placed at the end, and typing will type into Year. It is impossible from this point to type into Day or Month without carefully tapping the section on the screen.\r\n\r\n![image](https://user-images.githubusercontent.com/12272970/52030319-2e4a6f00-2567-11e9-86dc-3fa7d77985c0.png)\r\n\r\n## What is the motivation or use case for changing the behavior?\r\nWe have a DatePicker as part of a form. When tabbing to focus the DatePicker, users started typing the Day field without noticing it focused incorrectly, causing extra clicks and frustration.\r\n\r\nBrowser:\r\n- Safari (iOS) version 12.1.1",createdAt:"2019-01-31T04:18:34Z",author:{login:"GeoMarkou",avatarUrl:"https://avatars0.githubusercontent.com/u/12272970?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/181",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:'Resizable Grid with columns with width set to "" or undefined will set the column width to mimResizableWidht on click',state:"OPEN",number:182,body:'Resizable Grid with columns with width set to " " or undefined will set the column width to mimResizableWidht on click.\r\n\r\n',createdAt:"2019-01-31T11:40:06Z",author:{login:"simonssspirit",avatarUrl:"https://avatars2.githubusercontent.com/u/11087921?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/telerik/kendo-react/issues/182",labels:{edges:[{node:{name:"pkg:grid",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"}],__typename:"IssueConnection"},__typename:"Repository"}}}},61:function(e){e.exports={data:{repository:{issues:{edges:[{node:{title:"A new react-cache alpha release is required for compatibility with react@16.8.0-alpha.1",state:"OPEN",number:14558,body:"**Do you want to request a *feature* or report a *bug*?**\r\nBug\r\n\r\n**What is the current behavior?**\r\n`react-cache@2.0.0-alpha.1` does not work with `react@16.8.0-alpha.0` or `react@16.8.0-alpha.1` because of a recent change in React internals (separation of current dispatcher from current owner).\r\n\r\n**What is the expected behavior?**\r\nIt looks like the necessary changes to react-cache have already been made: https://github.com/facebook/react/commit/19ef0ec116a2c5fd1a8dc86d38c2185d62abc6a1\r\nA release of a new alpha version of the react-cache package should resolve the issue.\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n- react@16.8.0-alpha.0\r\n- react@16.8.0-alpha.1",createdAt:"2019-01-10T00:08:09Z",author:{login:"apostolos",avatarUrl:"https://avatars3.githubusercontent.com/u/41679?v=4",__typename:"User"},assignees:{nodes:[{name:"Sunil Pai",avatarUrl:"https://avatars2.githubusercontent.com/u/18808?v=4",__typename:"User"}],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14558",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"available free pre-paid gift cards for learning React  1-on-1 with experts",state:"CLOSED",number:14561,body:"FYI: \r\nI have available $20 pre-paid gift cards that you can use for learning React/Node and Javascript 1-on-1 with experts on the Experty learning platform. Just leave the comment and I will send it to you - via using contact details on your profiles - FOR FREE.\r\n\r\nThis will help you improve your react skills.",createdAt:"2019-01-10T10:26:39Z",author:{login:"przeor",avatarUrl:"https://avatars2.githubusercontent.com/u/5995?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14561",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Why NPM releases are not mapped to the repository under Releases section?",state:"CLOSED",number:14562,body:"Firstly, I'm sorry if opening an issue here it's the wrong place to ask that, but since it's very attached to the repository itself I raised it here as a \"meta-issue\".\r\n\r\nI'd like to know if there's a special reason why NPM releases aren't making it to the [Releases section](https://github.com/facebook/react/releases) of the repository here. I'm mainly talking about the latest `alpha` versions that include React Hooks. I noticed from NPM that a new `next` was available under `16.8.0-alpha.0` and I went to the repository here to understand what had changed from `16.7.0-alpha.2` that I was using, however, didn't find any mention of this release on the \"Releases\" section. I had to go through closed PRs to understand that #14555 was the PR that did the change and was published.\r\n\r\nThanks.",createdAt:"2019-01-10T11:26:30Z",author:{login:"rdsedmundo",avatarUrl:"https://avatars2.githubusercontent.com/u/5482378?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14562",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Question: Hooks + Suspense Interactions. Hooks unstable if suspended.",state:"CLOSED",number:14563,body:"**Do you want to request a *feature* or report a *bug*?**\r\nQuestion about the interaction when using Hooks + Suspense. *I am aware that these are not finalized yet. Please close if this has already been considered.\r\n\r\n**What is the current behavior?**\r\nI tweeted about this:\r\n1. https://twitter.com/tazsingh/status/1083314900586373120\r\n2. https://twitter.com/tazsingh/status/1083329402308562944\r\n\r\nIn essence, Hooks require a full execution of a Component function to register. However, Suspense interrupts that execution such that Hooks aren't able to effectively register. As such, it's impossible to rely on the output of any Hooks until all suspended calls are resolved.\r\n\r\nSince the vision for Suspense is to use them as the primary async mechanism in React and since Hooks are meant to be composable items within a Component, where it isn't strictly important to be aware of what is contained in a Hook for it to be useful, I can see this as problematic if they cannot register properly because some other Hook has suspended.\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem. Your bug will get fixed much faster if we can run your code and it doesn't have dependencies other than React. Paste the link to your JSFiddle (https://jsfiddle.net/Luktwrdm/) or CodeSandbox (https://codesandbox.io/s/new) example below:**\r\n\r\nPlease feel free to uncomment the section in this CodeSandbox to observe the behaviour I'm noticing. I also describe a related behaviour in my second tweet regarding usage of `useMemo`.\r\nhttps://codesandbox.io/s/9y64nmkrzy\r\n\r\n**What is the expected behavior?**\r\nFrankly, I am unsure of the expected behaviour as I believe both of these features to be working as intended hence why I titled this issue as a \"question\". I am aware that I am using these features before they are released and proper communication of the usage between Hooks + Suspense is not yet available.\r\n\r\nIf this is the intended behaviour, cool \ud83d\udc4d If not, I am happy to file a bug report accordingly.\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n16.8.0-alpha.0\r\n\r\n\r\nThanks! \ud83d\ude4f ",createdAt:"2019-01-10T12:05:00Z",author:{login:"tazsingh",avatarUrl:"https://avatars2.githubusercontent.com/u/397824?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14563",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"React.Children.count returns invalid number of children",state:"CLOSED",number:14564,body:'\x3c!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n--\x3e\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\n\r\nBUG\r\n\r\n**What is the current behavior?**\r\n\r\n>nextProps.children\r\n> false\r\n\r\n>React.Children.count(nextProps.children)\r\n>1\r\n\r\n>React.Children.toArray(nextProps.children).length\r\n>0\r\n\r\n>React.version\r\n>"16.4.2"\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem. Your bug will get fixed much faster if we can run your code and it doesn\'t have dependencies other than React. Paste the link to your JSFiddle (https://jsfiddle.net/Luktwrdm/) or CodeSandbox (https://codesandbox.io/s/new) example below:**\r\n\r\n**What is the expected behavior?**\r\n\r\nThat `React.Children.count(false)` behaviour is somehow aligned with `React.Children.toArray(false)`\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n',createdAt:"2019-01-10T12:37:06Z",author:{login:"pronebird",avatarUrl:"https://avatars2.githubusercontent.com/u/704044?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14564",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Overriding updater in React class doesn't have any effect or error",state:"CLOSED",number:14568,body:"**Do you want to request a *feature* or report a *bug*?**\r\nfeature\r\n\r\n**What is the current behavior?**\r\nOverriding `updater` in React class doesn't have any effect or error.\r\n\r\n**What is the expected behavior?**\r\nMaybe there should be a reserved words list in React docs to prevent anyone from doing this accidentally.\r\nOr add warnings for overriding these words.\r\n```javascript\r\nclass App extends React.Component {\r\n  state = { count: 0 };\r\n  updater = () => {\r\n    this.setState(state => ({ count: state.count + 1 }));\r\n  };\r\n  render() {\r\n    return <button onClick={this.updater}>{this.state.count}</button>;\r\n  }\r\n}\r\n\r\n/*\r\nWarning: Expected `onClick` listener to be a function, instead got a value of `object` type.\r\n    in button (created by App)\r\n    in App\r\n*/\r\n```\r\n",createdAt:"2019-01-10T19:32:19Z",author:{login:"ShizukuIchi",avatarUrl:"https://avatars2.githubusercontent.com/u/19783326?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14568",labels:{edges:[{node:{name:"Resolution: Wontfix",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Js chunks are not requested on demand on IE11 with the latest react version 16.7.0",state:"CLOSED",number:14570,body:'Duplicate of : #14583\r\n\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\nBug\r\n\r\n**What is the current behavior?**\r\nIssue loading the js chunk files on IE11 (only). With the latest version of react 16.7.0 our app (which uses Suspense and Lazy) doesn\'t load all the needed js chunks. You need to navigate around the app to request other js chunks and eventually the app is fully loaded.\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem. Your bug will get fixed much faster if we can run your code and it doesn\'t have dependencies other than React. Paste the link to your JSFiddle (https://jsfiddle.net/Luktwrdm/) or CodeSandbox (https://codesandbox.io/s/new) example below:**\r\n\r\nWe have a routes.js file with all the routes of the app. It looks like this:\r\n\r\n```\r\nconst Organisation = lazy(() => import(\'./pages/Organisation\'));\r\nconst Services = lazy(() => import(\'./pages/Services\'));\r\n// all the other dynamic imports go here\r\n// ...\r\nconst Page404 = lazy(() => import(\'./pages/Page404\'));\r\n\r\n\r\nexport default (\r\n  <ErrorBoundary>\r\n    <Suspense fallback={<span />}>\r\n      <Switch>\r\n        <Redirect exact from="/" to="/organisation" />\r\n        <Route path="/organisation" component={Organisation} />\r\n        <Route path="/services" component={Services} />\r\n              \x3c!-- All the other routes --\x3e\r\n        <Route path="*" component={Page404} />\r\n      </Switch>\r\n    </Suspense>\r\n  </ErrorBoundary>\r\n);\r\n```\r\nThe route "/" is redirected to "/organisation" which returns the "Organisation" component. However, the Organisation component is not rendered, the chunk hasn\'t been requested on demand. If we navigate to "/services" the services chunk is requested on demand and loaded well. Then, if we go back to "/organisation" all is fine.\r\n\r\nThere are no shown errors at all. \r\n\r\n**What is the expected behavior?**\r\nThe js chunks are requested on demand loaded and the components are rendered when we initially load the app.\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\nThis worked in all previous version of React that we tried since Lazy and Suspense was released in 16.3.0\r\n\r\nReact version: 16.7.0\r\nOS: Win7\r\nBrowser: IE11',createdAt:"2019-01-11T14:19:47Z",author:{login:"cparreno7",avatarUrl:"https://avatars0.githubusercontent.com/u/25571131?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14570",labels:{edges:[{node:{name:"Resolution: Needs More Information",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"[Bug] React context break if Context.Consumer is replaced with webpack.resolve.alias",state:"CLOSED",number:14573,body:"I need help to understand why Webpack `resolve.alias` and React 16 `context` have issue to work together.\r\n\r\nI want to use [react-admin](https://github.com/marmelab/react-admin/tree/v2.6.0/) with a different internationalization engine.\r\n \r\nUsing `resolve.alias`, I want to plug my `TranslationProvider` that use **react-intl** instead of **polyglot** without forking nor editing their source.\r\n\r\nThis component contain context consumer. I found the context different after I plug the same  code for `TranslationProvider` with `resolve.alias` that is use normal, I expect it to create the same context.\r\n\r\nThe file I am replacing is : https://github.com/marmelab/react-admin/blob/v2.6.1/packages/ra-core/src/i18n/TranslationProvider.tsx\r\n\r\nIt is imported  here https://github.com/marmelab/react-admin/blob/v2.6.1/packages/ra-core/src/CoreAdmin.tsx#L15 \r\n\r\nI have configured `webpack.resolve.alias['./i18n/TranslationProvider'] = join(__dirname, 'src/react-admin-intl/ra-core/i18n/TranslationProvider');`\r\n\r\nWhen I use the alias, the `context.translate` function is different, while the executed code should be equal.\r\n\r\n\r\nIn one case I have `translate` function that look like : \r\n\r\n    $tmp = \u0192 (key, options) {\r\n      var phrase, result;\r\n      var opts = options == null ? {} : options;\r\n    \r\n      if (typeof this.phrases[key] === 'string') {\r\n        phrase = this.phrases[key];\r\n      } else if (typeof opts._ === 'str\u2026\r\n\r\nWith the alias it look like:\r\n\r\n\r\n     $tmp = \u0192 translate(id) {\r\n        return id;\r\n      }\r\n\r\n\r\nDoes react context get broke when tweak are made through Webpack resolve alias or is it not possible?\r\n\r\nI am out of theory, can anyone explain this?\r\n\r\n\r\n### Version:\r\n\r\n- react 16.7.0\r\n- react-admin 2.6.0\r\n- node v11.2.0\r\n- npm 6.5.0\r\n",createdAt:"2019-01-11T16:40:42Z",author:{login:"kopax",avatarUrl:"https://avatars0.githubusercontent.com/u/1866564?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14573",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"React Devtools perf issue with 16.7.0",state:"OPEN",number:14574,body:"**Do you want to request a *feature* or report a *bug*?**\r\nBug\r\n\r\n**What is the current behavior?**\r\nWhen using a component that creates new Date objects inside an interval while having the Devtools extension open, the performance are really slow. \r\n\r\nWith React 16.4.1, I don't have the same issue so it might be related to the Profiler tab (even if it also happen when being on the Elements tab).\r\n\r\n**Reproduction:**\r\n16.7.0 version with performance issues: https://codesandbox.io/s/w6zrvx1y98\r\n16.4.1 version without perf issues: https://codesandbox.io/s/4x4jmx8zx4\r\n\r\nOpen the devtools on the standalone page (https://w6zrvx1y98.codesandbox.io)  while watching the Chrome task manager and you will see the memory go up quickly and the CPU be higher than 100%.\r\n\r\nYou might want to adjust the `ARRAY_SIZE` and `INTERVAL` constants based on your computer performance.\r\n\r\n**What is the expected behavior?**\r\nThe page should not slow down that much. In my app, I display a list of 30 lines where each of them contains this component and the refresh rate is one second (the time change there). There was no issue at all with React 16.4.1 (I actually didn't know that this component existed \ud83d\ude04).\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n16.7.0 is affected while 16.4.1. I also had the same issue with 16.6.0 and I thought it was related to #14365 but it is actually a different one.\r\n\r\n[EDIT]: it's not a Chrome issue because I could reproduce the same issue on Firefox.\r\n\r\nBy the way, I'd be happy to make a PR for this if this makes sense. \ud83d\ude42 ",createdAt:"2019-01-11T21:18:55Z",author:{login:"ValentinH",avatarUrl:"https://avatars2.githubusercontent.com/u/2678610?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14574",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Cannot ready property 'readContext' of undefined",state:"OPEN",number:14575,body:"\x3c!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n--\x3e\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\nReport a bug\r\n\r\n**What is the current behavior?**\r\n`react-cache` is not working with Suspense.\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem. Your bug will get fixed much faster if we can run your code and it doesn't have dependencies other than React. Paste the link to your JSFiddle (https://jsfiddle.net/Luktwrdm/) or CodeSandbox**\r\nhttps://codesandbox.io/s/3jw6y3ww6\r\n\r\n**What is the expected behavior?**\r\nTo show the loading screen, or at least not to fail\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\nreact: 16.8.0-alpha.0\r\nreact-dom: 16.8.0-alpha.0\r\nreact-cache: 2.0.0-alpha.1",createdAt:"2019-01-12T00:21:39Z",author:{login:"kevinwolfcr",avatarUrl:"https://avatars2.githubusercontent.com/u/3157426?v=4",__typename:"User"},assignees:{nodes:[{name:"Sunil Pai",avatarUrl:"https://avatars2.githubusercontent.com/u/18808?v=4",__typename:"User"}],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14575",labels:{edges:[{node:{name:"Type: Bug",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Question: How to know if the loading status of Suspense resolved",state:"CLOSED",number:14577,body:"\x3c!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n--\x3e\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\n\r\nQuestion\r\n\r\n**What is the current behavior?**\r\n\r\nI'm trying to implement supports of `React.lazy` and `React.Suspense` in enzyme (airbnb/enzyme#1975). I'd like to have something like `waitUntilLazyLoaded` so we can write such test:\r\n\r\n```js\r\n// in DynamicComponent.js\r\n\r\nclass DynamicComponent extends React.Component {\r\n  render() {\r\n    // render something\r\n  }\r\n}\r\n\r\n// in test.js\r\n\r\nconst LazyComponent = lazy(() => import('./DynamicComponent'));\r\nconst Fallback = () => <div />;\r\nconst SuspenseComponent = () => (\r\n  <Suspense fallback={<Fallback />}>\r\n    <LazyComponent />\r\n  </Suspense>\r\n);\r\n\r\n// mount the react element\r\nconst wrapper = mount(<SuspenseComponent />)\r\n\r\n// On starter this should render Fallback\r\nexpect(wrapper.find('Fallback')).to.have.lengthOf(1)\r\nexpect(wrapper.find('DynamicComponent')).to.have.lenghtOf(0)\r\n\r\n// wait for LazyComponent loading DynamicComponent and update of rendering\r\nawait wrapper.waitUntilLazyLoaded()\r\n\r\n// render loaded component now\r\nexpect(wrapper.find('Fallback')).to.have.lengthOf(0)\r\nexpect(wrapper.find('DynamicComponent')).to.have.lengthOf(1)\r\n\r\n```\r\n\r\nInside the `mount` implementation we call the `ReactDOM.render` to render it and get the root fiber node. Now my problem is: Given a Fiber node of `Suspense`, how could we know the loading status of `Suspense` so I can make sure whether (1) the module is loaded successfully loaded (or failed) and (2) React has rendered (or not rendered) the new component tree?\r\n\r\nI'm not familiar with the implementation detail of Fiber and I'm still trying to investigate into this. That would be great if someone familiar with this could answer. Thanks!\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\n^16.6\r\n",createdAt:"2019-01-12T02:40:45Z",author:{login:"chenesan",avatarUrl:"https://avatars2.githubusercontent.com/u/7620906?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14577",labels:{edges:[{node:{name:"Type: Discussion",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"`alert`, `confirm`, `prompt` in handler become non-blocking after switching tab/window",state:"CLOSED",number:14578,body:"\x3c!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n--\x3e\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\nBug\r\n\r\n**What is the current behavior?**\r\nIn Chrome, `alert`, `confirm`, `prompt` used in event handler is not blocking the following operations if you switch to another tab and switch back.\r\n\r\nFirefox and Safari works fine for me\r\n\r\n* `alert` box is still shown, but following operations are executed\r\n* `prompt` box is closed automatically,  returned `null`, following operations are executed\r\n* `confirm` box is closed automatically,  returned `false`, following operations are executed\r\n\r\n**Reproduce:**\r\nhttps://jsfiddle.net/6saqvgh4/14/\r\n\r\nYou can try to click those 3 buttons,  switch to another tab/window and switch back\r\n\r\n**What is the expected behavior?**\r\nAll those three (`alert`, `prompt`, `confirm`) should block any trailing operations in event handler\r\n\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\nTested in 16.2.0 and 16.7.0, both can reproduce. \r\n",createdAt:"2019-01-12T03:19:07Z",author:{login:"kdepp",avatarUrl:"https://avatars3.githubusercontent.com/u/461599?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14578",labels:{edges:[{node:{name:"Resolution: Needs More Information",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Hydration breaks when accessing props in constructor which doesnt exist",state:"OPEN",number:14579,body:"**Do you want to request a *feature* or report a *bug*?**\r\nBUG\r\n\r\n**What is the current behavior?**\r\nA descedent component which tried to access props.somepropA (undeclared prop) in constructor broke hydration and because of  other un-mounted component didnt remove from DOM and things started breaking on load. In my case i was getting infinite loader which is not mounted.\r\n\r\n\r\n**What is the expected behavior?**\r\n Loader should have been removod from DOM as we get data on load and redux state is set properly. \r\nNot able to understand how to fix it \r\n\r\nThings are working fine as in client side rendered app.\r\n\r\n\r\n",createdAt:"2019-01-12T05:50:14Z",author:{login:"pgangwani",avatarUrl:"https://avatars1.githubusercontent.com/u/14316332?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14579",labels:{edges:[{node:{name:"Resolution: Needs More Information",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"[Hooks] useImperativeMethods should expose its content",state:"CLOSED",number:14580,body:'**Do you want to request a *feature* or report a *bug*?**\r\n\r\nFeature\r\n\r\n**What is the current behavior?**\r\n\r\n```js\r\nconst api = useImperativeMethods(ref, () => ({\r\n  start: () => Promise.all(ctrl.current.map(c => c.start())),\r\n  stop: () => ctrl.current.forEach(c => c.stop()),\r\n}))\r\n\r\n// api is undefined\r\n```\r\n\r\nUsers can use the api from outside by forwarding a ref, but it is sealed inside and cannot be re-used\r\n\r\n**What is the expected behavior?**\r\n\r\n```js\r\nconst api = useImperativeMethods(ref, () => ({\r\n  start: () => Promise.all(ctrl.current.map(c => c.start())),\r\n  stop: () => ctrl.current.forEach(c => c.stop()),\r\n}))\r\n\r\napi.start()\r\napi.stop()\r\n```\r\n\r\nNow we can re-use our code and even treat it like a public api that can be used outside or inside (like public class methods in reacts class components which could be used by ref or internally). The api-object could of course be wrapped into useState or useMemo prior to feeding it to useImperativeMethods, but it would be yet another step and if it would just channel through its input it would be cleaner.\r\n\r\nI would also expect the api to be present if "ref" is undefined. ',createdAt:"2019-01-12T10:49:21Z",author:{login:"drcmda",avatarUrl:"https://avatars0.githubusercontent.com/u/2223602?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14580",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Set function returned by useState executes functions passed to it",state:"CLOSED",number:14581,body:"\x3c!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n--\x3e\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\n\r\nIt might be a bug, or it might just be behavior I didn't expect.\r\n\r\n**What is the current behavior?**\r\n\r\nThe current behavior is that the set function returned by `useState` appears to execute functions passed to it. I've replicated this behavior in the CodeSandbox link below -- check the console logs to see the behavior I'm describing.\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem. Your bug will get fixed much faster if we can run your code and it doesn't have dependencies other than React. Paste the link to your JSFiddle (https://jsfiddle.net/Luktwrdm/) or CodeSandbox (https://codesandbox.io/s/new) example below:**\r\n\r\n[https://codesandbox.io/s/r559xx4n9o](https://codesandbox.io/s/r559xx4n9o)\r\n\r\n**What is the expected behavior?**\r\n\r\nI expect the set function returned by `useState` to behave like `this.setState`, and simply store the function, not execute it (although I may be missing a use case where such behavior would be useful). If I'm missing something here, please let me know!\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\nI'm using React 16.7.0-alpha.2, with Firefox 64.0 on Ubuntu 18.04.1. If I'm missing something here, if I missed a note in the docs or if I'm just being stupid and missing the point of executing functions on set, please, let me know!",createdAt:"2019-01-12T17:46:40Z",author:{login:"ajpocus",avatarUrl:"https://avatars1.githubusercontent.com/u/292627?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14581",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"[Hooks] Invariant Violation - Using a library that have hooks",state:"CLOSED",number:14582,body:"_Versions:_\r\n* **react**: 16.8.0-alpha-0\r\n* **react-dom**: 16.8.0-alpha-0\r\n* **react-form-uncontrolled**: 0.3.1\r\n\r\n### Problem ###\r\n\r\nI wrote a simple Form library with just one hook (react-form-uncontrolled). However, **using this library** is displaying this error:\r\n\r\n> Invariant Violation: Hooks can only be called inside the body of a function component\r\n\r\nCodesandbox: https://codesandbox.io/s/znx2r55lkp\r\n\r\nAlthough the error says that it can only be called inside the body of a function component, is already on the body...\r\n\r\nOriginal library code: \r\n\r\n```js\r\nimport React, { useCallback } from 'react'\r\n\r\nfunction Form(props) {\r\n  const onSubmitForm = useCallback(event => {\r\n    event.preventDefault()\r\n    event.stopPropagation()\r\n\r\n    const { onSubmit = () => {} } = props\r\n    const fields = Array.prototype.slice.call(event.target)\r\n      .filter(field => field.name)\r\n      .reduce((form, { name, value }) => ({\r\n        ...form,\r\n        [name]: typeof value === 'string'\r\n          ? value.trim()\r\n          : value,\r\n      }), {})\r\n\r\n    onSubmit(fields)\r\n  }, [])\r\n  const { children } = props\r\n\r\n  return (\r\n    <form {...props} onSubmit={onSubmitForm}>\r\n      {children}\r\n    </form>\r\n  )\r\n}\r\n\r\nfunction Input(props) {\r\n  const { label, name } = props\r\n\r\n  return (\r\n    <label htmlFor={name}>\r\n      <div>{label}</div>\r\n      <input\r\n        {...props}\r\n        id={name}\r\n        name={name}\r\n      />\r\n    </label>\r\n  )\r\n}\r\n\r\nmodule.exports = {\r\n  Form, Input,\r\n}\r\n```\r\n\r\nAt the beginning I thought that was for the Babel transpilation. Nevertheless, running a codesandbox using the transpiled code instead of the library, is working well:\r\n\r\n* https://codesandbox.io/s/k0j6zn2xzo\r\n\r\nDowngrading these versions in the project that use the library, it works:\r\n\r\n* **react** -> from 16.8.0-alpha.0 -> to 16.7.0-alpha.2\r\n* **react-dom:** from 16.8.0-alpha.0 -> to 16.7.0-alpha.2\r\n\r\nSo looks that for some reason with 16.8.0-alpha.0 is not compatible.\r\n\r\n\r\n> **Note**: Perhaps is not an issue and is something that I'm doing wrong... Any sugestion? ",createdAt:"2019-01-12T23:04:55Z",author:{login:"aralroca",avatarUrl:"https://avatars3.githubusercontent.com/u/13313058?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14582",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"16.8.0-alpha.0 (and 16.7) IE11 Suspense doesn't stop rendering fallback after Lazy resolves",state:"CLOSED",number:14583,body:'**Do you want to request a *feature* or report a *bug*?**\r\n\r\nreport a bug\r\n\r\n**What is the current behavior?**\r\n\r\nWhen using Suspense, I see React.Suspense fallback layout instead of loaded component in IE 11 (IE network panel shows, that bundle was loaded)\r\n\r\nI can not reproduce this bug in 16.7.0-alpha.2! there is everything ok.\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem. Your bug will get fixed much faster if we can run your code and it doesn\'t have dependencies other than React. Paste the link to your JSFiddle (https://jsfiddle.net/Luktwrdm/) or CodeSandbox (https://codesandbox.io/s/new) example below:**\r\n```\r\nconst UserCabinet = React.lazy(() => import(\'PublicUser/components/UserCabinet/UserCabinet\'));\r\n\r\nfunction WaitingComponent(Component) {\r\n  return props => (\r\n    <React.Suspense fallback={<div>Loading...</div>}>\r\n      <Component {...props} />\r\n    </React.Suspense>\r\n  );\r\n}\r\n\r\nclass PublicRoutes extends React.Component<{}> {\r\n  render() {\r\n    return (\r\n      <Switch>\r\n        <PublicPage path="/login" component={AuthPage} />\r\n        <PublicPage path="/signUp" component={SignUpPage} />\r\n        <PrivatePage path="/cabinet" component={WaitingComponent(UserCabinet)} />\r\n        <Redirect to="/login" />\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n```\r\n**What is the expected behavior?**\r\nsee the rendered component\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\nTested on IE11 on windows 7\r\nIt reproduces only in 16.8.0-alpha.0\r\nI can not reproduce this bug in 16.7.0-alpha.2, there is everything ok.\r\nIn Chrome is everything ok in all versions.\r\n',createdAt:"2019-01-13T21:43:25Z",author:{login:"Kazimirkas",avatarUrl:"https://avatars1.githubusercontent.com/u/15028496?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14583",labels:{edges:[{node:{name:"Resolution: Needs More Information",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"suggest key prop can be passed to components",state:"CLOSED",number:14584,body:"i don't make understand that Keys serve as a hint to React but they don\u2019t get passed to your components. \r\nthis feature in https://reactjs.org/docs/lists-and-keys.html need pass the key two times. this action is not friendly to users. has any difficulty to implement this feature or is there another reason?\r\n```javascript\r\nconst content = posts.map((post) =>\r\n  <Post\r\n    key={post.id}\r\n    id={post.id}\r\n    title={post.title} />\r\n);\r\n```",createdAt:"2019-01-14T03:12:33Z",author:{login:"xp44mm",avatarUrl:"https://avatars0.githubusercontent.com/u/10087796?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14584",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Context is assigned to `undefined` when it's declared in JSX",state:"CLOSED",number:14586,body:'\x3c!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n--\x3e\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\nbug\r\nRelated issue: [#14418](https://github.com/facebook/react/issues/14418)\r\n\r\n**What is the current behavior?**\r\n```context``` variable is set to ```undefined``` in the codes below, when it\'s used in JSX.\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem. Your bug will get fixed much faster if we can run your code and it doesn\'t have dependencies other than React. Paste the link to your JSFiddle (https://jsfiddle.net/Luktwrdm/) or CodeSandbox (https://codesandbox.io/s/new) example below:**\r\n\r\n```javascript\r\n// test.js\r\n\r\nexport const handlClick = function() {\r\n  console.dir(this); // == undefined;\r\n}\r\n```\r\n```javascript\r\n// App.js\r\nimport { handleClick } from \'./test\';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n       <a onClick={handleClick}>Click me</a>\r\n    );\r\n  }\r\n}\r\n```\r\n\r\n**What is the expected behavior?**\r\nEither ```window``` or ```App``` or something that isn\'t ```undefined```\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n```javascript\r\n{\r\n  "name": "r",\r\n  "version": "0.1.0",\r\n  "private": true,\r\n  "dependencies": {\r\n    "react": "^16.7.0",\r\n    "react-dom": "^16.7.0",\r\n    "react-scripts": "2.1.3"\r\n  },\r\n  "scripts": {\r\n    "start": "react-scripts start",\r\n    "build": "react-scripts build",\r\n    "test": "react-scripts test",\r\n    "eject": "react-scripts eject"\r\n  },\r\n  "eslintConfig": {\r\n    "extends": "react-app"\r\n  },\r\n  "browserslist": [\r\n    ">0.2%",\r\n    "not dead",\r\n    "not ie <= 11",\r\n    "not op_mini all"\r\n  ]\r\n}\r\n\r\n```\r\n\r\nExtra: Used _create-react-app_ to set this demo project up, using _web storm_ as the IDE.\r\n\r\nThrough debugging my own code, I found this unexpected bug and started to track of its paths. And found out there\'s a function invoked midst its path and I think this invoked function ended up passing the ```undefined``` context to the endpoint, my own function.\r\nI attached the code lines I found, I\'m not still sure if this is related to this issue, though.\r\nThanks for your time.\r\n\r\n```javascript\r\n// react-dom.development.js\r\nfunction executeDispatch(event, simulated, listener, inst) {\r\n  var type = event.type || \'unknown-event\';\r\n  event.currentTarget = getNodeFromInstance(inst);\r\n  invokeGuardedCallbackAndCatchFirstError(type, listener, undefined, event);\r\n  event.currentTarget = null;\r\n}\r\n```\r\n',createdAt:"2019-01-14T06:45:03Z",author:{login:"moonformeli",avatarUrl:"https://avatars0.githubusercontent.com/u/25758965?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14586",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"ReactDOM - global event handler for a specific event type isn't removed once all the components with such event type handler are no longer mount",state:"CLOSED",number:14587,body:"When a component with an event handler of a specific type (e.g. onClick) is mount, react dom adds a global event listener for this type. \r\nThe problem is that once all such components are no longer mount, the global event listener isn't removed. \r\n\r\nThe biggest problem that I see here is with the `onMouseMove` and `onTouchMove` event handlers. \r\nFor example, let's say that at some point there were mount components that had listeners for these event types, and later on all these components were unmounted (which means that there aren't any actual handlers for these event types). \r\nAt this point, react will keep tracking these events on the root, and each time that the pointer will move over the root, react will go over all the elements starting from the event target element up to the root element and try to see if there are handlers for these event types (though they don't actually exist). \r\n\r\nThe result is a potential performance issue, especially in mobile, since it seems that the global event handler isn't marked and can't be marked as a `passive event`.",createdAt:"2019-01-14T11:22:57Z",author:{login:"domshlak",avatarUrl:"https://avatars0.githubusercontent.com/u/5781811?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14587",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"More on: react-scripts: not found",state:"CLOSED",number:14589,body:"I've got more to report on this problem with react-scripts not found error.\r\nHere is the error running 'npm start'\r\n\r\n```\r\n/myapp/front# npm start\r\n\r\n> front@0.1.0 start /myapp/front\r\n> react-scripts start\r\n\r\nsh: 1: react-scripts: not found\r\nnpm ERR! file sh\r\nnpm ERR! code ELIFECYCLE\r\nnpm ERR! errno ENOENT\r\nnpm ERR! syscall spawn\r\nnpm ERR! front@0.1.0 start: `react-scripts start`\r\nnpm ERR! spawn ENOENT\r\nnpm ERR!\r\nnpm ERR! Failed at the front@0.1.0 start script.\r\n```\r\n\r\nIf one runs 'npx react-scripts start' it forces a rebuild of the entire 1980 packages?!!\r\nBut it does eventually run.\r\n\r\nThe setup issue is that the Ubuntu VM is running on an NFS Mount from Win8\r\n\r\nFirst problem is all the bin files can't build, but if you build initially on VM's disk image VDI, and then copy back to real files over an NFS mount the second problem is it can't copy symbolic links (maybe an option to copy the source if symlink fails exists or should).\r\n\r\nOkay so once you have the symbolic links repaired in windows via mklink after copying the initial build from a none NFS mount folder, well that's when this problem described above happens.\r\n\r\nI am unclear on which one of the 1980 packages other then this react-scripts is in need or a total rethink but it doesn't cut it when setup in this way. (Using symbolic links seems literally unacceptable.)\r\n\r\nIt seems not unreasonable to think you should be able to use your platform/IDEs of choice and have the UNIX VM mount and work of those NFS Mounted files. The way all this stuff is build falls short of this I call expected behaviors. \r\n\r\nThe only problems are why isn't 'npm start' able to run 'npx react-scripts start', and in turn why does that not understand the package is already built and take forever to rebuild all packages every time? I think it also relates to file watching. Maybe there is a way to deploy this without waiting 10 minutes to launch a simple example.\r\n",createdAt:"2019-01-14T16:17:21Z",author:{login:"MasterJames",avatarUrl:"https://avatars2.githubusercontent.com/u/1840183?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14589",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Question: How should libraries export custom hooks?",state:"CLOSED",number:14595,body:"I've just hooked into React Hooks and done some experiments. I'm having some doubts about React's advice on [Building My Own Hooks](https://reactjs.org/docs/hooks-custom.html).\r\n\r\nDocumentations tells me that,\r\n\r\n> A custom Hook is a JavaScript function whose name starts with \"use\" and that may call other Hooks.\r\n\r\nSo the idea I get is that, if I were to write an NPM package exporting a custom hook, I have to export a function and add React as a dependency to my package. Let's take a couple of examples:\r\n\r\n\r\n```js\r\n// Example 01 (from https://reactjs.org/docs/hooks-custom.html):\r\nconst [isOnline, setIsOnline] = useState(null);\r\n\r\nfunction handleStatusChange(status) {\r\n    setIsOnline(status.isOnline);\r\n}\r\n\r\nuseEffect(() => {\r\n    ChatAPI.subscribeToFriendStatus(friendID, handleStatusChange);\r\n    return () => {\r\n        ChatAPI.unsubscribeFromFriendStatus(friendID, handleStatusChange);\r\n    };\r\n});\r\n\r\n// Example 02 (detect user pressing escape key):\r\nfunction handleEscapeKey (e) {\r\n    if (e.key === 'Escape') { /* do something with escape key */ }\r\n}\r\n\r\nuseEffect(() => {\r\n    window.addEventListener('keydown', handleEscapeKey);\r\n    return () => {\r\n        window.removeEventListener('keydown', handleEscapeKey);\r\n    }\r\n});\r\n```\r\n\r\nSo if I were to create two NPM packages for these, I would first import React as a dependency,\r\n\r\n```js\r\nimport { useState, useEffect } from 'react';\r\n```\r\n\r\nAnd then implement the packages in this manner:\r\n\r\n```js\r\n// Example 01:\r\nexport function useFriendStatus(friendID) {\r\n    const [isOnline, setIsOnline] = useState(null);\r\n    \r\n    function handleStatusChange(status) {\r\n        setIsOnline(status.isOnline);\r\n    }\r\n\r\n    useEffect(() => {\r\n        ChatAPI.subscribeToFriendStatus(friendID, handleStatusChange);\r\n        return () => {\r\n            ChatAPI.unsubscribeFromFriendStatus(friendID, handleStatusChange);\r\n        };\r\n    });\r\n    \r\n    return isOnline;\r\n}\r\n\r\n// Example 02\r\nexport function useWindowKeydown(handler) {\r\n    useEffect(() => {\r\n        window.addEventListener('keydown', handler);\r\n        return () => {\r\n            window.removeEventListener('keydown', handler);\r\n        }\r\n    });\r\n}\r\n```\r\n\r\nHowever, I feel that these packages are trying to do too much. For example,\r\n\r\n - In the first example the custom hook is initializing the state, which may be better done by a component.\r\n - Also, why do they both have to be aware about React. They are both trying to abstract away a pair of subscribe/unsubscribe functions.\r\n\r\nRather, we could export just the functionality we are trying to abstract away. And if we need any state or state-setters, we can pass them as arguments.\r\n\r\n```js\r\n// Example 01: package `hook-friend-status`\r\nexport function hookFriendStatus(friendId, handleStatusChange) {\r\n    return () => {\r\n        ChatAPI.subscribeToFriendStatus(friendID, handleStatusChange);\r\n        return () => {\r\n            ChatAPI.unsubscribeFromFriendStatus(friendID, handleStatusChange);\r\n        };\r\n    }\r\n}\r\n\r\n// Example 02: package `hook-window-keydown`\r\nexport function hookWindowKeydown(handler) {\r\n    return () => {\r\n        window.addEventListener('keydown', handler);\r\n        return () => {\r\n            window.removeEventListener('keydown', handler);\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nAnd then we can use it inside our component in the following manner:\r\n\r\n```js\r\nimport React, { useState, useEffect } from 'react'\r\nimport hookFriendStatus from 'hook-friend-status';\r\nimport hookWindowKeydown from 'hook-window-keydown';\r\n\r\nfunction MyAwesomeComponent ({ friendId }) {\r\n    const [isOnline, setIsOnline] = useState(\r\n        // component can decide how to initialize state.\r\n        false\r\n    );\r\n    function handleStatusChange(status) {\r\n        setIsOnline(status.isOnline);\r\n    }\r\n    useEffect(hookFriendStatus(friendId, handleStatusChange));\r\n    \r\n    function handleEscapeKey (e) {\r\n        if (e.key === 'Escape') { /* do something with escape key */ }\r\n    }\r\n    useEffect(hookWindowKeydown(handleEscapeKey));\r\n\r\n    return (/** jsx */)\r\n}\r\n```\r\n\r\nI think this way is much cleaner:\r\n\r\n - The concerns are separated better.\r\n - Packages/libraries don't have to be aware of React (which also means these libraries can be used outside React as well).\r\n - I would presume it will be easier to test the packages/libraries, because they are not calling react hooks (less mocking).\r\n - Linter can stop searching after they scanned the component, so could the humans when doing the code review.\r\n\r\nIt might be a premature judgement that I have reached, as we are yet to see what people are exactly doing with hooks. Let me know what you guys think. Thanks.",createdAt:"2019-01-15T03:06:21Z",author:{login:"sampathsris",avatarUrl:"https://avatars1.githubusercontent.com/u/3192154?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14595",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"What\u2019s the difference between fiber reconciler sync mode and the old react 15 stack reconciler? Why does performance boosts so much?",state:"CLOSED",number:14598,body:"Since performance of react 16 boosts so much and thanks to those aweosome talks on YouTube explained fiber so detailed, I hardly figured out even the latest version of react 16 is still in sync mode, no features like time slicing are turned on by default.\r\n\r\nThen I wondered why the perfmance is pretty good compared with react 15 even though? \r\n\r\nTrying to get some info on google, but it seems like no one really looked into this question. Even react 16 is shipped with this \u201cfake\u201d fiber mode for such a long time, it is not well documented or explained on the official website.\r\n\r\nCan someone give me some ideas about this please? ",createdAt:"2019-01-15T18:04:28Z",author:{login:"gx761",avatarUrl:"https://avatars2.githubusercontent.com/u/2718663?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14598",labels:{edges:[{node:{name:"Type: Question",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Allow for named imports in React.lazy",state:"CLOSED",number:14603,body:"**Do you want to request a *feature* or report a *bug*?**\r\n\r\nFeature\r\n\r\n**What is the current behavior?**\r\n\r\nCurrently, React.lazy only accepts an anonymous function that returns a dynamic import object. `readLazyComponentType` then [pulls the default export off of that import object](https://github.com/facebook/react/blob/f777d196e0943b3975c762e15e35b319a9b85902/packages/react-reconciler/src/ReactFiberLazyComponent.js#L53). This does not allow for importing named imports from a module. \r\n\r\nThe official workaround, according to [the React docs](https://reactjs.org/docs/code-splitting.html#named-exports):\r\n\r\n> If the module you want to import uses named exports, you can create an intermediate module that reexports it as the default.\r\n\r\nAnother, [more concise workaround](https://github.com/facebook/react/issues/14390#issuecomment-444494386):\r\n\r\n```js\r\nconst Contacts = React.lazy(() =>\r\n  import('./Contacts.js').then(module => ({ default: module.Contacts }))\r\n);\r\n```\r\n\r\n**What is the proposed behavior?**\r\n\r\nI'd be willing to submit a PR that optionally accepts named imports but defaults to importing the default import. It would look like:\r\n\r\n```diff\r\nthenable.then(\r\n-  moduleObject => {\r\n+  resolvedComponent => {\r\n    if (lazyComponent._status === Pending) {\r\n-      const defaultExport = moduleObject.default;\r\n+      if (resolvedComponent.default) {\r\n+        resolvedComponent = resolvedComponent.default\r\n+      }\r\n      if (__DEV__) {\r\n-        if (defaultExport === undefined) {\r\n+        if (resolvedComponent === undefined) {\r\n          warning(\r\n            false,\r\n-            'lazy: Expected the result of a dynamic import() call. ' +\r\n+            'lazy: Expected a promise that resolves to a React component. ' +\r\n              'Instead received: %s\\n\\nYour code should look like: \\n  ' +\r\n              \"const MyComponent = lazy(() => import('./MyComponent'))\",\r\n-            moduleObject,\r\n+            resolvedComponent,\r\n          );\r\n        }\r\n      }\r\n      lazyComponent._status = Resolved;\r\n-      lazyComponent._result = defaultExport;\r\n+      lazyComponent._result = resolvedComponent;\r\n    }\r\n  },\r\n  error => {\r\n    if (lazyComponent._status === Pending) {\r\n      lazyComponent._status = Rejected;\r\n      lazyComponent._result = error;\r\n    }\r\n  },\r\n);\r\n```\r\n\r\nThis will also require some updates to the docs.\r\n\r\nLet me know your thoughts before I start...\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\nreact@16.7.0, Chrome 71, macOS 10.14\r\n\r\ncc @acdlite @gaearon \r\n",createdAt:"2019-01-16T02:01:38Z",author:{login:"gnestor",avatarUrl:"https://avatars3.githubusercontent.com/u/512354?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14603",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:" Can't resolve 'react-dom/lib/ReactTestUtils' in   react-addons-test-utils,react 16",state:"CLOSED",number:14605,body:"Module not found: Error: Can't resolve 'react-dom/lib/ReactTestUtils' in '/www/wepack4-react-project-template/node_modules/react-addons-test-utils'\r\n\r\ni think this must update react-addons-test-utils,but it new.\r\ni don't know how to resolve\r\n\r\n\r\n\r\n",createdAt:"2019-01-16T03:04:12Z",author:{login:"zhoulujun",avatarUrl:"https://avatars3.githubusercontent.com/u/4243366?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14605",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Where did the name React come from?",state:"OPEN",number:14606,body:"Hello! React is really cool. I've been wondering, where does React naming come from? Is it from Reactive Programming?\r\n\r\nIt would be nice if you could tell me about the origins. \r\nThank you very much.\r\n",createdAt:"2019-01-16T06:22:50Z",author:{login:"hg-pyun",avatarUrl:"https://avatars1.githubusercontent.com/u/10627668?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14606",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Bug: in shallow renderer `this.state` in `shouldComponentUpdate` will be updated by `getDeriveStateFromProps`",state:"CLOSED",number:14607,body:'\x3c!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n--\x3e\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\nBug\r\n**What is the current behavior?**\r\n\r\nIn `react-test-renderer/shallow`, the shallow renderer will set instance state in `getDerviedStateFromProps` so the `this.state` and `nextState` will be the same in `shouldComponentUpdate`, which is different with the behavior of real rendering.\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem. Your bug will get fixed much faster if we can run your code and it doesn\'t have dependencies other than React. Paste the link to your JSFiddle (https://jsfiddle.net/Luktwrdm/) or CodeSandbox (https://codesandbox.io/s/new) example below:**\r\n\r\ngiven below class component:\r\n\r\n```js\r\n\r\nclass SimpleComponent extends React.Component {\r\n      constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          value: props.value,\r\n        };\r\n      }\r\n\r\n      static getDerivedStateFromProps(nextProps, prevState) {\r\n        if (nextProps.value === prevState.value) {\r\n          return null;\r\n        }\r\n        return { value: nextProps.value };\r\n      }\r\n\r\n      shouldComponentUpdate(nextProps, nextState) {\r\n        console.log(\'shouldUpdate:\', nextState.value !== this.state.value)\r\n        return nextState.value !== this.state.value;\r\n      }\r\n\r\n      render() {\r\n        return <div className={this.state.value} />;\r\n      }\r\n    }\r\n\r\n```\r\n\r\nrender with ReactDOM, the `shouldComponentUpdate` will return true since `this.state` will be the old value `initial`:\r\n\r\n```js\r\nconst divRef = React.createRef()\r\nconst div = document.createElement(\'div\')\r\n\r\n// in real test code we have to add a `ref={divRef}` in the `div` of SimpleComponent\r\n\r\nconst initialResult = ReactDOM.render(<SimpleComponent value="initial" />, div);\r\nexpect(divRef.current.classList[0]).toEqual("initial");\r\n\r\n// will output `shouldUpdate: true`\r\nconst updatedResult = ReactDOM.render(<SimpleComponent value="updated" />, div);\r\n// so the class name changes\r\nexpect(divRef.current.classList[0]).toEqual("updated");\r\n```\r\n\r\nIn shallow renderer, the behavior is different:\r\n\r\n```js\r\nconst shallowRenderer = createRenderer();\r\nconst initialResult = shallowRenderer.render(<SimpleComponent value="initial" />);\r\nexpect(initialResult).toEqual(<div>value:initial</div>);\r\n// will not update, since in `shouldComponentUpdate` the `this.state` has been updated\r\n// after `getDeriveStateFromProps` and as same as passed `nextState`\r\nconst updatedResult = shallowRenderer.render(<SimpleComponent value="updated" />);\r\n// the following assert will fail\r\nexpect(updatedResult).toEqual(<div>value:updated</div>);\r\n```\r\n\r\n**What is the expected behavior?**\r\n\r\nShallowRenderer should not set the instance state in getDeriveStateFromProps, or in the `shouldComponentUpdate` we have no way to compare it.\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\nI have tested this in master branch and 16.3, both not work.\r\n\r\nBy the way this problem is related to airbnb/enzyme#1970 . If it\'s recoginzed as a bug I can provide a PR in next several days.\r\n',createdAt:"2019-01-16T10:50:35Z",author:{login:"chenesan",avatarUrl:"https://avatars2.githubusercontent.com/u/7620906?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14607",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Typescript forwardRef displayName",state:"CLOSED",number:14610,body:"Apparently the render method on `forwardRef` contains a `displayName` property as can be observed here: https://github.com/facebook/react/blob/769b1f270e1251d9dbdce0fcbd9e92e502d059b8/packages/shared/getComponentName.js#L28\r\n\r\nHowever, the Typescript types instead place the `displayName` on the root object, (`NamedExoticComponent`)[https://github.com/DefinitelyTyped/DefinitelyTyped/blob/33f6179e0f25b0ca798ad89a667c0a27ea0c98dd/types/react/index.d.ts#L297]\r\n\r\n(which doesn't seem to be applicable).\r\n\r\nIn addition, it seems that [`ForwardRefExoticComponent`](https://github.com/DefinitelyTyped/DefinitelyTyped/blob/33f6179e0f25b0ca798ad89a667c0a27ea0c98dd/types/react/index.d.ts#L698) could either forward the call signature of the [`RefForwardingComponent`](https://github.com/DefinitelyTyped/DefinitelyTyped/blob/33f6179e0f25b0ca798ad89a667c0a27ea0c98dd/types/react/index.d.ts#L471) ... or define it, itself:\r\n\r\n```typescript\r\ninterface ForwardRefExoticComponent<P> extends NamedExoticComponent<P> {\r\n  defaultProps?: Partial<P>;\r\n  render: {\r\n    (props: P & { children?: ReactNode }, ref: Ref<T> | null): ReactElement<any> | null;\r\n    displayName?: string;\r\n  }\r\n}\r\n```",createdAt:"2019-01-17T02:42:26Z",author:{login:"dfee",avatarUrl:"https://avatars3.githubusercontent.com/u/262602?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14610",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Support Touch/Pointer Event on shape in react-art ?",state:"OPEN",number:14611,body:"**Do you want to request a *feature* or report a *bug*?**\r\n  *feature*\r\n**What is the expected behavior?**\r\n  Support Support or Touch Event on shape\r\n\r\nI'm working on a project which is create by react & react-art, I need to run it on mobile device so touch or pointer event should be support, is it possible to support it?",createdAt:"2019-01-17T03:54:36Z",author:{login:"owcc",avatarUrl:"https://avatars1.githubusercontent.com/u/5770548?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14611",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Fabric create new canvas component instead of adding Object into the canvas",state:"CLOSED",number:14612,body:"For detail: \r\n\r\nhttps://stackoverflow.com/questions/54227761/fabric-create-new-canvas-component-instead-of-adding-object-into-the-canvas",createdAt:"2019-01-17T04:02:11Z",author:{login:"naijab",avatarUrl:"https://avatars1.githubusercontent.com/u/20009757?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14612",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Define validity period of setters returned by useState",state:"CLOSED",number:14614,body:"Hi,\r\n\r\nWhen using `useEffect()`, `useMemo()` or `useCallback()`, we can use the 2nd argument to avoid rerunning the effect or updating the value unnecessarily if the values it depends on haven't changed.\r\n\r\nShould I include setters returned from `useState()` in the 2nd argument of these hooks? E.g.\r\n\r\n```javascript\r\nconst [value, setValue] = useState(5);\r\n\r\nuseEffect(() => {\r\n  // Hand off setValue somewhere\r\n}, [setValue]); // ?\r\n```\r\n\r\nI'm wondering what the exact validity guarantees are around the setters returned by `useState()` or the dispatch functions returned by `useReducer()`. According to the docs, the dispatch function returned by `useReducer()` shouldn't change between re-renders, so it shouldn't be necessary to include it in the 2nd argument of these hooks. `useState()` seems to use `useReducer()` internally, so the same is possibly true for it. Is it officially guaranteed that any setter returned by `useState()` remains valid until the component unmounts?",createdAt:"2019-01-17T20:32:41Z",author:{login:"raiskila",avatarUrl:"https://avatars3.githubusercontent.com/u/351598?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14614",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"memo vs. useMemo",state:"CLOSED",number:14616,body:"I'm a little confused about the relationship between `memo()` (the core API function) and `useMemo()` (the hook).\r\n\r\nSpecifically, can `memo()` be implemented in terms of `useMemo()` ?\r\n\r\nI tried this but it doesn't work, it just keeps re-rendering:\r\n\r\n```\r\nconst my_memo = Component => props => {\r\n  return React.useMemo(() => <Component {...props} />, [props]);\r\n}\r\n```",createdAt:"2019-01-17T21:25:59Z",author:{login:"dakom",avatarUrl:"https://avatars3.githubusercontent.com/u/6406986?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14616",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Inefficient `aria-current` attribute set when the argument is `false`",state:"OPEN",number:14619,body:'\x3c!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n--\x3e\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\n\r\nBug\r\n\r\n**What is the current behavior?**\r\n\r\nRendering an HTML element with `aria-disabled={false}` produces an HTML element with `aria-disabled="false"`, but that is a _truthy_ `aria-disabled` value.\r\n\r\nhttps://codesandbox.io/s/71jq2zoyoj\r\n\r\n**What is the expected behavior?**\r\n\r\nWhen `aria-disabled={false}` is given, the attribute should be either omitted or set to the empty string.\r\n\r\nSee the specification at https://www.w3.org/TR/wai-aria-1.1/#aria-current. The wording is confusing, but `true` and `false` in the explanation for `aria-current` are not valid tokens -- that is just the evaluated state for the accessibility engine.\r\n\r\n---\r\n\r\nEDIT: Oops. reading _even further_ down the spec, it does seem that `"false"` is supposed to be a falsy value too, so this is not a "bug" as in wrong behavior per se. It\'d still be better to omit the attribute entirely, though.',createdAt:"2019-01-18T02:37:37Z",author:{login:"Jessidhia",avatarUrl:"https://avatars1.githubusercontent.com/u/73085?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14619",labels:{edges:[{node:{name:"Component: DOM",__typename:"Label"},__typename:"LabelEdge"},{node:{name:"Type: Needs Investigation",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"How will react solve nested contexts?",state:"CLOSED",number:14620,body:"I have lots of contexts and I have got to write in this way, so ugly! It hinders my work now. Such design makes it almost unusable.\r\n```js\r\n<context1.Provider value={value1}>\r\n  <context2.Provider value={value2}>\r\n    <context3.Provider value={value3}>\r\n      <context4.Provider value={value4}>\r\n        <context5.Provider value={value5}>\r\n\r\n        </context5.Provider>\r\n      </context4.Provider>\r\n    </context3.Provider>\r\n  </context2.Provider>\r\n</context1.Provider>\r\n```\r\n```js\r\n<context1.Consumer>\r\n  {value1 => <context2.Consumer>\r\n    {value2 => <context3.Consumer>\r\n      {value3 => <context4.Consumer>\r\n        {value4 => <context5.Consumer>\r\n          {value5 => (\r\n            null\r\n          )}\r\n        </context5.Consumer>}\r\n      </context4.Consumer>}\r\n    </context3.Consumer>}\r\n  </context2.Consumer>}\r\n</context1.Consumer>\r\n```",createdAt:"2019-01-18T03:09:42Z",author:{login:"rabbitooops",avatarUrl:"https://avatars2.githubusercontent.com/u/20941062?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14620",labels:{edges:[{node:{name:"Type: Question",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"I got it working using `15.3.2` so something must have changed in `15.4.0` to make brunch fail.",state:"CLOSED",number:14622,body:"hi,\r\n\r\ni got the same issue like this \r\n\r\ncan you please anyone knows about this???\r\n\r\nreact version : 16.4.0\r\nreact-dom: 16.4.0\r\nreact-addons-perf:  15.4.2\r\n\r\nim getting the error like ::::\r\nModule not found: Can't resolve 'react-dom/lib/ReactPerf' in 'C:\\Users\\Project\\node_modules\\react-addons-perf'",createdAt:"2019-01-18T06:46:45Z",author:{login:"DurgaPammi",avatarUrl:"https://avatars0.githubusercontent.com/u/34298011?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14622",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Why can actual reducer not take initial state instead of passing second arg to useReducer",state:"OPEN",number:14624,body:"**Do you want to request a *feature* or report a *bug*?**\r\n\r\nI don't know if this is intentional design or if its a bug. Someone in Reactiflux asked about this so i was curios\r\n\r\n**What is the current behavior?**\r\n\r\nReducer passed to `useReducer` cant take initial state. Instead, you need to pass second arg\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem. Your bug will get fixed much faster if we can run your code and it doesn't have dependencies other than React. Paste the link to your JSFiddle (https://jsfiddle.net/Luktwrdm/) or CodeSandbox (https://codesandbox.io/s/new) example below:**\r\n\r\nReducers must be created like:\r\n\r\n```js\r\nconst initialState = {\r\n  ...\r\n}\r\n\r\nfunction reducer(state, action) {\r\n  ...\r\n}\r\n\r\nconst [state, dispatch] = useReducer(reducer, initialState)\r\n```\r\n\r\n**What is the expected behavior?**\r\n\r\nWhy cant we do:\r\n\r\n```js\r\nconst initialState = {\r\n  ...\r\n}\r\n\r\nfunction reducer(state = initialState, action) {\r\n  ...\r\n}\r\n\r\nconst [state, dispatch] = useReducer(reducer)\r\n```\r\n\r\nThis is how Redux does it.\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\nv16.8.0-alpha.1",createdAt:"2019-01-18T07:43:38Z",author:{login:"zaynv",avatarUrl:"https://avatars1.githubusercontent.com/u/8627403?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14624",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Chinese Document Website Error Reporting Affects Use",state:"CLOSED",number:14627,body:"\x3c!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n--\x3e\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\n\r\n**What is the current behavior?**\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem. Your bug will get fixed much faster if we can run your code and it doesn't have dependencies other than React. Paste the link to your JSFiddle (https://jsfiddle.net/Luktwrdm/) or CodeSandbox (https://codesandbox.io/s/new) example below:**\r\n\r\n**What is the expected behavior?**\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n",createdAt:"2019-01-18T11:02:09Z",author:{login:"dogloves",avatarUrl:"https://avatars0.githubusercontent.com/u/22962713?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14627",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"useImperativeHandle should warn when second arg isn't a function",state:"CLOSED",number:14629,body:'I\'ve noticed a strange bug with the react redux `forwardRef` opt-in.\r\nIf i use it with a connected class component, everything is ok:\r\n```javascript\r\nconst MyComponent = class Test extends React.Component {\r\n  foo = () => console.log("Print foo from Test component");\r\n  render() {\r\n    return null;\r\n  }\r\n};\r\n\r\nconst ConnectedComponent = connect(\r\n  null,\r\n  null,\r\n  null,\r\n  { forwardRef: true }\r\n)(MyComponent);\r\n\r\nconst store = createStore(() => {});\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <ConnectedComponent\r\n        ref={ref => {\r\n          if (ref) ref.foo();\r\n        }}\r\n      />\r\n    </Provider>\r\n  );\r\n}\r\n\r\nconst rootElement = document.getElementById("root");\r\nReactDOM.render(<App />, rootElement);\r\n```\r\nIf i use it with a connected functional component that use `forwardRef` with `useImperativeHandle`, i obtain a strange error: `create is not a function` in `commitHookEffectList` `react-dom` method.\r\n\r\n```javascript\r\nconst MyComponent = React.forwardRef((props, ref) => {\r\n  useImperativeHandle(ref, {\r\n    foo: () => console.log("Print foo from Test component")\r\n  });\r\n\r\n  return null;\r\n});\r\n\r\nconst ConnectedComponent = connect(\r\n  null,\r\n  null,\r\n  null,\r\n  { forwardRef: true }\r\n)(MyComponent);\r\n\r\nconst store = createStore(() => {});\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <ConnectedComponent\r\n        ref={ref => {\r\n          if (ref) ref.foo();\r\n        }}\r\n      />\r\n    </Provider>\r\n  );\r\n}\r\n\r\nconst rootElement = document.getElementById("root");\r\nReactDOM.render(<App />, rootElement);\r\n```\r\n\r\nI create a codepen to reproduce the issue: https://codesandbox.io/s/r7rpml460o\r\n\r\nPS: Sorry for the cors error, but i don\'t find the way to add `react@next`as cdn',createdAt:"2019-01-18T14:56:20Z",author:{login:"lorenzomigliorero",avatarUrl:"https://avatars3.githubusercontent.com/u/4406419?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14629",labels:{edges:[{node:{name:"Difficulty: starter",__typename:"Label"},__typename:"LabelEdge"},{node:{name:"Type: Enhancement",__typename:"Label"},__typename:"LabelEdge"},{node:{name:"good first issue (taken)",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"componentDidMount inside a class causing a memory leak",state:"OPEN",number:14630,body:'Hi,\r\n\r\nI have a very weird memory leak that seems to be related to componentDidMount declaration. Memory is not freed after unmounting component.\r\n\r\n### Used code\r\nVersion: react 16.7\r\nMode: developper or production (same behaviour)\r\n\r\n\r\n\r\nHere is the code I use to hide or display a list of items  \r\n```\r\nclass Item extends React.Component {\r\n     componentDidMount() {\r\n\r\n    }\r\n      render() {\r\n            return <div>test item</div>;\r\n      }\r\n}\r\n\r\nclass Items extends React.Component {\r\n      constructor(props) {\r\n            super(props);\r\n            this.state =  {};\r\n      }\r\n\r\n      renderList() {\r\n            let items = [];\r\n            for(var i = 0; i < 4000; i++) {\r\n                  items.push( <Item key={i} />);\r\n            };\r\n\r\n            return items;\r\n      }\r\n\r\n      onDisplay = ()=>{\r\n            this.setState({display: true});\r\n      }\r\n      onHide = ()=>{\r\n            this.setState({display: false});\r\n      }\r\n\r\n      render() {      \r\n            return <div>\r\n                  <div key="display" onClick={this.onDisplay}>Display</div>\r\n                  <div key="hide" onClick={this.onHide}>Hide</div>\r\n                  {this.state.display ? this.renderList() : null}\r\n            </div>\r\n      }\r\n}\r\nReactDOM.render(<Items />, document.getElementById("app"));\r\n```\r\n\r\n### Steps to reproduce\r\n\r\nCASE 1\r\nUse google chrome and display the performance monitor to study JS Heap size and Dom Nodes.\r\n1) Click on display => the list of 4000 items is displayed\r\n2) Click on "hide" => the list is unmounted\r\nWhen you look at performance monitor, you can see that around 8000 nodes are still in memory (and JS Heap is higher than before mounting components as well).\r\nIf you redo 1) and 2) multiple times, you will see nodes going to 16000 then going back to 8000, ... etc.\r\n\r\nThus, memory is freed after the first unmount operation, but the first one is not. The weird thing is that if you do 1), 2), 2), 2), then it is freed.\r\n\r\nCASE 2\r\nUse the same code but remove the "componentDidMount" function in the class.\r\nDo 1) and 2), then after few secondes memory is freed automatically (nodes and js heap)  => expected behaviour\r\n\r\n### Behaviour expected\r\n\r\nI was expected that the memory would be freed after unmounting a component, like in the 2nd case. That\'s a real issue when you mount.unmount big list multiple times, then js heap is going very high.\r\n\r\n\r\n',createdAt:"2019-01-18T15:23:59Z",author:{login:"dorianrod",avatarUrl:"https://avatars2.githubusercontent.com/u/33071955?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14630",labels:{edges:[{node:{name:"Type: Question",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"UMD build doesn't work via import in the browser (TypeError: Cannot set property 'React' of undefined)",state:"OPEN",number:14635,body:"When `import`ing the UMD build (both production and development) in the browser \u2013 that is, from a `<script type=\"module\">` \u2013 an error is thrown: `TypeError: Cannot set property 'React' of undefined`.\r\n\r\n\r\nThe relevant code:\r\n\r\n```js\r\n12: (function (global, factory) {\r\n13:\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\r\n14:\ttypeof define === 'function' && define.amd ? define(factory) :\r\n15:\t(global.React = factory());\r\n16: }(this, (function () { 'use strict';\r\n```\r\n\r\nThrows on line 15 as `global` \u2263 `this` is `undefined` in a module context.  \r\nIs this as simple to fix as passing `this || self` on line 16, or is there a catch?\r\n\r\n\r\n**Do you want to request a *feature* or report a *bug*?** \r\n*bug*\r\n\r\n**What is the current behavior?**\r\n`TypeError: Cannot set property 'React' of undefined`\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem.**\r\n<https://jsfiddle.net/dja3wfc7/> (**_Updated_**)\r\n\r\n**What is the expected behavior?**\r\nI would expect the `import` to work, as the same file works if included via `<script src=...>`.\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\nReact 16.7.0 (latest stable) \u2013 I have found another UMD related bug, #3037, which pertains to React **0.12.2**. I have tried that version and indeed it works, it can be `import`ed.\r\nChrome 71, Safari 12 tested (probably all browsers)\r\n",createdAt:"2019-01-19T01:52:04Z",author:{login:"vp2177",avatarUrl:"https://avatars3.githubusercontent.com/u/451903?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14635",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"\u6c42\u6c42\u4f60\u4eec\u522b\u66f4\u65b0\u4e86\uff0c\u5b66\u4e0d\u52a8\u4e86\uff5e\uff5e\uff5e\uff5e\uff08\uff1e\uff3f\uff1c\uff09\uff5e\uff5e\uff5e\uff5e",state:"CLOSED",number:14637,body:"\x3c!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n--\x3e\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\n\r\n**What is the current behavior?**\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem. Your bug will get fixed much faster if we can run your code and it doesn't have dependencies other than React. Paste the link to your JSFiddle (https://jsfiddle.net/Luktwrdm/) or CodeSandbox (https://codesandbox.io/s/new) example below:**\r\n\r\n**What is the expected behavior?**\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n",createdAt:"2019-01-19T06:58:32Z",author:{login:"BooMiny",avatarUrl:"https://avatars0.githubusercontent.com/u/29034623?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14637",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"v16.7 Docs 'useImperativeHandle'? ",state:"CLOSED",number:14640,body:"HOOKS(PREVIEW)\r\nHooks API Reference\uff1a\r\nwhy call useImperativeHandle?is not useImperativeMethods?",createdAt:"2019-01-20T14:55:55Z",author:{login:"karmiy",avatarUrl:"https://avatars0.githubusercontent.com/u/46210915?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14640",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"\"Invariant Violation: Unable to find node on an unmounted component\" on `react-test-renderer`'s `renderer.create` when react package versions don't match",state:"OPEN",number:14641,body:"\x3c!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n--\x3e\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\n\r\nbug\r\n\r\n**What is the current behavior?**\r\n\r\n```\r\nimport renderer from 'react-test-renderer';\r\n\r\nconst tree = renderer.create(<MyComponent />);\r\n// => Invariant Violation: Unable to find node on an unmounted component\r\n```\r\n\r\nThere're many people complaining about this issue in many different contexts. It seems to be coming from `findDOMNode`. The discussions are very vague and varied, e.g.\r\n- https://stackoverflow.com/questions/52734483/reactdom-render-unable-to-find-node-on-an-unmounted-component-after-react-upgra\r\n- https://github.com/Pomax/react-onclickoutside/issues/231\r\n- https://github.com/airbnb/enzyme/issues/1411\r\n- and the many more refernced issues\r\n\r\nI'm not sure if all has the same root cause but many advise to upgrade/downgrade seemingly randomly. Also seemingly randomly it works for some and doesn't for others. Would be great to get a general recommendation / fix.\r\n\r\nMy use case:\r\n\r\n`MyComponent` above is a simple `styled-component` (`styled.ul`).\r\n\r\nThe issue seem to be related to versions or version mismatches between `react`, `react-dom` and `react-test-renderer`. In my case, the error disappears locally by having `v16.5.0` install of all. However, the issue still occurs in GitLab CI. The only obvious difference is that the CI uses `yarn` and I use `npm`. **I was finally able to solve it in both environments by upgrading all three to the latest, `v16.7.0`.** Having any minor version mismatches seemed to reproduce the error locally.\r\n\r\nComplete trace of error:\r\n```\r\n      at invariant (node_modules/react-dom/cjs/react-dom.development.js:55:15)\r\n      at findCurrentFiberUsingSlowPath (node_modules/react-dom/cjs/react-dom.development.js:4125:30)\r\n      at findCurrentHostFiber (node_modules/react-dom/cjs/react-dom.development.js:4233:23)\r\n      at findHostInstanceWithWarning (node_modules/react-dom/cjs/react-dom.development.js:19454:21)\r\n      at Object.findDOMNode (node_modules/react-dom/cjs/react-dom.development.js:19962:14)\r\n      at StyledComponent.componentDidMount (node_modules/styled-components/dist/styled-components.cjs.js:1927:25)\r\n      at commitLifeCycles (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7019:22)\r\n      at commitAllLifeCycles (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:8234:7)\r\n      at HTMLUnknownElement.callCallback (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:2312:14)\r\n      at invokeEventListeners (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:193:27)\r\n      at HTMLUnknownElementImpl._dispatch (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:119:9)\r\n      at HTMLUnknownElementImpl.dispatchEvent (node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:82:17)\r\n      at HTMLUnknownElementImpl.dispatchEvent (node_modules/jsdom/lib/jsdom/living/nodes/HTMLElement-impl.js:30:27)\r\n      at HTMLUnknownElement.dispatchEvent (node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:157:21)\r\n      at Object.invokeGuardedCallbackDev (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:2362:16)\r\n      at invokeGuardedCallback (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:2411:31)\r\n      at commitRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:8404:7)\r\n      at completeRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9769:3)\r\n      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9697:9)\r\n      at performWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9601:7)\r\n      at performSyncWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9573:3)\r\n      at requestWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9461:5)\r\n      at scheduleWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9256:5)\r\n      at scheduleRootUpdate (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9865:3)\r\n      at updateContainerAtExpirationTime (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9892:10)\r\n      at updateContainer (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9903:10)\r\n      at Object.create (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10428:5)\r\n      at Object.<anonymous> (src/components/Selectors/DownShiftSelector/DownShiftSelector.test.js:45:44)\r\n```\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem. Your bug will get fixed much faster if we can run your code and it doesn't have dependencies other than React. Paste the link to your JSFiddle (https://jsfiddle.net/Luktwrdm/) or CodeSandbox (https://codesandbox.io/s/new) example below:**\r\n\r\n**What is the expected behavior?**\r\n\r\nno error\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\nas described above",createdAt:"2019-01-20T20:37:19Z",author:{login:"thisismydesign",avatarUrl:"https://avatars3.githubusercontent.com/u/3299948?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14641",labels:{edges:[{node:{name:"Component: Test Renderer",__typename:"Label"},__typename:"LabelEdge"},{node:{name:"Type: Needs Investigation",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Refs don't get attached to a component inside Suspense ",state:"CLOSED",number:14642,body:"\x3c!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n--\x3e\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\nbug\r\n\r\n**What is the current behavior?**\r\nWhen you want to attach `ref` to a component that is lazy loaded and is rendered inside `<Suspense>`, the `ref` is just always null. \r\n\r\nI've tried both `React.createRef` and normal `ref={console.log}` callback but it's just never called.\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem. Your bug will get fixed much faster if we can run your code and it doesn't have dependencies other than React.:**\r\nhttps://codesandbox.io/s/1yom049zkj\r\n\r\n**What is the expected behavior?**\r\nAttaching ref successfully\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n16.7.0\r\n",createdAt:"2019-01-21T12:17:47Z",author:{login:"vaclav-zeman",avatarUrl:"https://avatars0.githubusercontent.com/u/8337116?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14642",labels:{edges:[{node:{name:"Type: Needs Investigation",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"[Hooks API] Content of the portal being removed when the props change",state:"CLOSED",number:14655,body:"Hello,\r\n\r\nAfter playing around with the new React Hooks API, I think that I found a new bug:\r\n\r\n## What is the current behavior?\r\n\r\nWhile using the version with hooks (`16.8.0-alpha`), when a `prop` of a component that uses a _react portal_ is changed, the portal content simply disappears, as can be seen in the following example:\r\n\r\n**https://codesandbox.io/s/rjy02x0l0m**\r\n\r\n_(Click on the `++` button to test.)_\r\n\r\n## What is the expected behavior?\r\n\r\nTo demonstrate the normal behavior, I've created another example using class components:\r\n\r\nhttps://codesandbox.io/s/kmyrq72x47\r\n\r\n## Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?\r\n\r\nI found the bug in the `16.8.0-alpha` version.  \r\nTested and working on `16.7.0`.",createdAt:"2019-01-22T03:41:15Z",author:{login:"lffg",avatarUrl:"https://avatars1.githubusercontent.com/u/23662020?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14655",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Props shortcut in HTML/JSX writting",state:"CLOSED",number:14656,body:"## Do you want to request a *feature* or report a *bug*?\r\nHello, I would like to requets a feature that has to do with the way the HTML part of the JSX is written.\r\n \r\n## What is the current behavior?\r\nToday, to pass a prop that has the same name as the variable that carries the information, here is the behavior:\r\n\r\n`<Forum subjects={subjects} />`\r\n\r\n## What is the expected behavior?\r\nI (but not solely I, I'm sure) would love to be able to write this:\r\n\r\n`<Forum subjects />`\r\n\r\nI know that HTML allows this for booleans, but as JSX is neither HTML nor JS, I'm sure we can work something out to allow this for objects, the same way it's done in ES6:\r\n\r\n`console.log({ nameOfTheVariable })`\r\n\r\nfor instance.",createdAt:"2019-01-22T11:00:19Z",author:{login:"tanohzana",avatarUrl:"https://avatars3.githubusercontent.com/u/10516852?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14656",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"`useCallback()` & `useMemo()` automatically with a Babel Plug-in",state:"OPEN",number:14658,body:'**Do you want to request a *feature* or report a *bug*?**\r\n\r\nFeature request.\r\n\r\n**What is the current behavior?**\r\n\r\nWe need to `useCallback()` and `useMemo()` which seems redundant and can cost us in performance if not used right, which is likely to happen.\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem. Your bug will get fixed much faster if we can run your code and it doesn\'t have dependencies other than React. Paste the link to your JSFiddle (https://jsfiddle.net/Luktwrdm/) or CodeSandbox (https://codesandbox.io/s/new) example below:**\r\n\r\n```js\r\nexport default ({ data, sortComparator, filterPredicate, history }) => {\r\n  const transformedData = data.filter(filterPredicate).sort(sortComparator)\r\n\r\n  return (\r\n    <div>\r\n      <button className="back-btn" onClick={() => history.pop()} />\r\n      <ul className="data-list">\r\n        {transformedData.map(({ id, value }) => (\r\n          <li className="data-item" key={id} onClick={() => history.push(`data/${id}`)}>{value}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n```\r\n\r\n**What is the expected behavior?**\r\n\r\nJust like the [docs](https://reactjs.org/docs/hooks-reference.html#usecallback) suggest:\r\n\r\n```\r\nIn the future, a sufficiently advanced compiler could create this array automatically.\r\n```\r\n\r\nAccordingly, I have implemented a Babel-plug-in that does exactly that; see [babel-plugin-react-persist](https://github.com/DAB0mB/babel-plugin-react-persist). Given the code snippet above, the plug-in should generate the following output:\r\n\r\n```js\r\nlet _anonymousFnComponent, _anonymousFnComponent2\r\n\r\nexport default ({ data, sortComparator, filterPredicate, history }) => {\r\n  const transformedData = React.useMemo(() =>\r\n    data.filter(filterPredicate).sort(sortComparator)\r\n  , [data, data.filter, filterPredicate, sortComparator])\r\n\r\n  return React.createElement(_anonymousFnComponent2 = _anonymousFnComponent2 || (() => {\r\n    const _onClick2 = React.useCallback(() => history.pop(), [history, history.pop])\r\n\r\n    return (\r\n      <div>\r\n        <button className="back-btn" onClick={_onClick2} />\r\n        <ul className="data-list">\r\n          {transformedData.map(({ id, value }) =>\r\n            React.createElement(_anonymousFnComponent = _anonymousFnComponent || (() => {\r\n              const _onClick = React.useCallback(() =>\r\n                history.push(`data/${id}`)\r\n              , [history, history.push, id])\r\n\r\n              return (\r\n                <li className="data-item" key={id} onClick={_onClick}>\r\n                  {value}\r\n                </li>\r\n              )\r\n            }), { key: id })\r\n          )}\r\n        </ul>\r\n      </div>\r\n    )\r\n  }), null)\r\n}\r\n```\r\n\r\nThe plug-in will:\r\n\r\n- `useCallback()` automatically when a function is created.\r\n- `useMemo()` automatically when a value is assigned.\r\n- Will memoize inline callbacks.\r\n\r\nI don\'t see however how can `useEffect()` be inferred automatically and if it\'s a good idea. The plug-in is not a feature request directly for React, but since it\'s stated in the docs I thought maybe it can be useful somehow. Maybe it can potentially be included as part of `create-react-app`? Would like to hear your thoughts about it. An alternative solution is suggested at #14406, but I don\'t see why do this at runtime when everything can be done ahead of time and save processing power.\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\nReact 16.8-alpha (hooks)\r\n',createdAt:"2019-01-22T15:38:42Z",author:{login:"DAB0mB",avatarUrl:"https://avatars1.githubusercontent.com/u/7648874?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14658",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Deleted",state:"CLOSED",number:14659,body:"Deleted",createdAt:"2019-01-22T19:19:25Z",author:{login:"slavafomin",avatarUrl:"https://avatars2.githubusercontent.com/u/1702725?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14659",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"get the error Cannot read property 'props' of undefined in getDerivedStateFromProps ",state:"CLOSED",number:14660,body:"\x3c!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n--\x3e\r\n\r\n**Do you want to request a *feature* or report a *bug*?** bug\r\n\r\n**What is the current behavior?**\r\nIm getting the error \"Cannot read property 'props' of undefined\" in method getDerivedStateFromProps \r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem. Your bug will get fixed much faster if we can run your code and it doesn't have dependencies other than React. Paste the link to your JSFiddle (https://jsfiddle.net/Luktwrdm/) or CodeSandbox (https://codesandbox.io/s/new) example below:**\r\n\r\n**What is the expected behavior?**\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n",createdAt:"2019-01-22T20:38:41Z",author:{login:"lisandrolan",avatarUrl:"https://avatars1.githubusercontent.com/u/13839389?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14660",labels:{edges:[{node:{name:"Resolution: Support Redirect",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"com.facebook.react.bridge.ReadableNativeMap cannot be cast to java.lang.String",state:"CLOSED",number:14662,body:"react:16.6.3\r\nreact-native: 0.57.8\r\n",createdAt:"2019-01-23T01:56:57Z",author:{login:"LoongFei",avatarUrl:"https://avatars1.githubusercontent.com/u/7593014?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14662",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"React website bug\uff01\uff01\uff01",state:"CLOSED",number:14663,body:"When i learned react at react website \uff0cfound this problem .\r\n\r\n![image](https://user-images.githubusercontent.com/15664144/51581214-14bf7c80-1f02-11e9-9c9d-783c9017c837.png)\r\n\r\nThe interaction in this area has failed. unable to open.\r\n\r\nurl: https://react.docschina.org/docs/thinking-in-react.html\r\n",createdAt:"2019-01-23T03:26:01Z",author:{login:"ablikim915",avatarUrl:"https://avatars0.githubusercontent.com/u/15664144?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14663",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"react-router can't pass Hooks",state:"CLOSED",number:14664,body:"This is actually an issue of react-router https://github.com/ReactTraining/react-router/issues/6555 but since it's the major routing lib I want to make you aware that there are issues when you want to pass custom hooks via props through your component tree.\r\n\r\nSince routing (with react-router) is a regular use case and React Hooks is an easy/elegant way to manage state through the app they should work together. Otherwise React Hooks is about creating Hooks limited to just one component and you cannot share state/hooks component-wide. Maybe I didn't get something right and there is a way...",createdAt:"2019-01-23T08:33:52Z",author:{login:"desmap",avatarUrl:"https://avatars2.githubusercontent.com/u/43666255?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14664",labels:{edges:[{node:{name:"Type: Question",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Introduce github issue managing tools ",state:"CLOSED",number:14665,body:"There are many open issues that haven't been referenced or replied for months (even for years),\r\n\r\nand it seems that some of these issues have already been resolved but nobody close them.\r\n\r\nMaybe introducing some managing tools like [probot](https://github.com/probot/probot) to automatically close these stale issues will be a good idea?",createdAt:"2019-01-23T08:39:16Z",author:{login:"yanglin5689446",avatarUrl:"https://avatars3.githubusercontent.com/u/12843409?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14665",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Need to Render 1 Lakh+ list at a time ",state:"CLOSED",number:14667,body:"**Need to Render 1 Lakh+ list at a time**\r\n\r\n**When we render all the list at a time the browser is getting lagged**\r\n\r\nWe are trying to render a chart with 1 Lakh+ item in an array, where all the items in the array should display in the chart.\r\n\r\nIs there is any best way to do it in React",createdAt:"2019-01-23T11:41:19Z",author:{login:"vnoitkumar",avatarUrl:"https://avatars0.githubusercontent.com/u/17877361?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14667",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Will  dangerouslySetInnerHTML generate  more html element ?",state:"CLOSED",number:14668,body:"\x3c!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n--\x3e\r\n**Do you want to request a *feature* or report a *bug*?**\r\nHi, React Team. Thanks for your awesome work. I have a problem when using \r\n`dangerouslySetInnerHTML` \r\n\r\n**What is the current behavior?**\r\n\r\nMy example code like this:\r\n```\r\n//...  the node.topic is a string\r\nrender() {\r\n    const { node, className, style } = this.props;\r\n    return (\r\n      <div\r\n        tabIndex={0}\r\n        contentEditable={true}\r\n        id=\"editor\"\r\n        onKeyDown={this.handleKeyDown}\r\n        spellCheck={false}\r\n        onBlur={this.handleBlur}\r\n        onPaste={this.handlePaste}\r\n        ref={this.containerRef}\r\n        dangerouslySetInnerHTML={{ __html: node.topic }}\r\n        style={style}\r\n      />\r\n    );\r\n  }\r\n```\r\n\r\nBut I got unexpected html that looks like\r\n![image](https://user-images.githubusercontent.com/13745971/51608727-3a28a680-1f53-11e9-9c6a-1b9161b63d67.png)\r\n![image](https://user-images.githubusercontent.com/13745971/51608733-3eed5a80-1f53-11e9-8232-456034ce6e13.png)\r\n\r\n\r\n**What is the expected behavior?**\r\nIt's hard for me to debug what's wrong with it. It's sometimes work, but sometimes will generate a `<br/>` tag. \r\nMaybe the `<br />` tag is generated by my browser ?\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\n```\r\nreact 16.7.0\r\nreact-dom 16.7.0\r\nOS: macos 10.14.1 Beta (18B73a)\r\nChrome: 71.0.3578.98\r\n```\r\n",createdAt:"2019-01-23T13:16:55Z",author:{login:"Zaynex",avatarUrl:"https://avatars0.githubusercontent.com/u/13745971?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14668",labels:{edges:[{node:{name:"Resolution: Invalid",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Write a test for discrete events in Concurrent Mode",state:"OPEN",number:14669,body:'See this review comment: \r\n\r\n>Need one more test for the "counter" example: each discrete event must commit in sequence. So if you click on an increment button five times, the final result should always be five.\r\n\r\nhttps://github.com/facebook/react/pull/14415#pullrequestreview-183478210',createdAt:"2019-01-23T15:29:27Z",author:{login:"gaearon",avatarUrl:"https://avatars0.githubusercontent.com/u/810438?v=4",__typename:"User"},assignees:{nodes:[{name:"Brandon Dail",avatarUrl:"https://avatars2.githubusercontent.com/u/6886061?v=4",__typename:"User"}],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14669",labels:{edges:[{node:{name:"Component: Build Infrastructure",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Original error message is swallowed in an edge case with render phase updates",state:"OPEN",number:14674,body:"\"Cannot set property 'memoizedState' of null\"\r\n\r\n<img width=\"639\" alt=\"screen shot 2019-01-23 at 5 09 40 pm\" src=\"https://user-images.githubusercontent.com/810438/51623925-b27e7000-1f31-11e9-857a-67343d99d91b.png\">\r\n\r\n\r\n```js\r\n  // Regression test\r\n  fit('does not swallow original error when updating another component in render phase', () => {\r\n    let {useState} = React;\r\n\r\n    let _setState;\r\n    function A() {\r\n      const [, setState] = useState(0);\r\n      _setState = setState;\r\n      return null;\r\n    }\r\n\r\n    function B() {\r\n      _setState(() => {\r\n        throw new Error('Hello')\r\n      });\r\n    }\r\n\r\n    expect(() =>\r\n      ReactTestRenderer.create(\r\n        <React.Fragment>\r\n          <A />\r\n          <B />\r\n        </React.Fragment>,\r\n      ),\r\n    ).toThrow('Hello');\r\n  });\r\n\r\n```",createdAt:"2019-01-23T17:09:59Z",author:{login:"gaearon",avatarUrl:"https://avatars0.githubusercontent.com/u/810438?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14674",labels:{edges:[{node:{name:"Component: Hooks",__typename:"Label"},__typename:"LabelEdge"},{node:{name:"Type: Bug",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"I do plug-in development in React , I have any problem",state:"CLOSED",number:14685,body:'i only have javascript or jquery,i want crack react;\r\nif react code a input\r\n\r\n<input type="text" onChange={this.handelChange.bind(this)} defaultValue={this.state.inpValu}/>\r\n\r\nhow i get through  javascript or jquery to  fill input value , and input.state.value to change',createdAt:"2019-01-24T06:47:40Z",author:{login:"BoomManPro",avatarUrl:"https://avatars3.githubusercontent.com/u/25561886?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14685",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Question about hooks and render",state:"CLOSED",number:14686,body:'\x3c!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n--\x3e\r\n\r\n**question**\r\n\r\n**I read the hooks docs, and I try the example:**\r\n![1](https://user-images.githubusercontent.com/19262116/51664816-46654000-1ff5-11e9-9714-a23a2ad09132.PNG)\r\n\r\n![2](https://user-images.githubusercontent.com/19262116/51664838-52510200-1ff5-11e9-98c3-43b28fc8c6ea.PNG)\r\n\r\n\r\nI find that the [count] changes using the hooks but the "render" didn,t show in the console.\r\nWhen I click the test button, the "render" show in the console.\r\nSo, I,m confused why and how the [count] changes "without" rendering using hooks? \r\n',createdAt:"2019-01-24T08:27:12Z",author:{login:"FlankMiao",avatarUrl:"https://avatars1.githubusercontent.com/u/19262116?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14686",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"How to test async componentDidMount()",state:"CLOSED",number:14687,body:"\x3c!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n--\x3e\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\n\r\nQuestion.\r\n\r\n**What is the current behavior?**\r\n\r\nI'm trying to test a statefull component (Applications) that has async componentDidMount(); \r\n\r\n```javascript\r\nimport React from 'react';\r\nimport { create } from 'react-test-renderer';\r\nimport Applications from './Applications';\r\n\r\ndescribe(\"Applications\", () => {\r\n    const renderComponent = (props = {}) => {\r\n        const component = create(<Applications {...props} />);\r\n        return component.getInstance();\r\n    } \r\n      \r\n    it(\"renders applications\", () => {\r\n        const instance = renderComponent();\r\n        // Here i get \"Invariant Violation: The `document` global was defined when React was initialized, but is not defined anymore. ...\" error\r\n    });\r\n});\r\n```\r\nI tried to provide a callback (done()) to the test and use setImmediate(() => { done(); }, but I still get the error. If I don't call setImmediate() but use the callback variant of the test, I get \"Timeout - Async callback was not invoked within timeout specified by jasmine.DEFAULT_TIMEOUT_INTERVAL.\" error.\r\n\r\n",createdAt:"2019-01-24T11:07:40Z",author:{login:"stonemonkey",avatarUrl:"https://avatars3.githubusercontent.com/u/2823090?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14687",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"onChange event breaking garbage collection?",state:"OPEN",number:14693,body:'\x3c!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n--\x3e\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\nBug\r\n\r\n**What is the current behavior?**\r\nGarbage collection seems to "break" when an `onChange` event is fired.\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem. Your bug will get fixed much faster if we can run your code and it doesn\'t have dependencies other than React. Paste the link to your JSFiddle (https://jsfiddle.net/Luktwrdm/) or CodeSandbox (https://codesandbox.io/s/new) example below:**\r\n\r\n**What is the expected behavior?**\r\nConsistent garbage collection behaviour\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\nWindows 10 Home Edition\r\nChrome Version 71.0.3578.98 (Official Build) (64-bit)\r\nReact 16.6.3\r\n\r\n### Some context\r\nIn my application, I have some renderings of 3D models (using three.js)\r\nUsing the `onMouseMove` event on a canvas element, I calculate the current position of my mouse in terms of 3d space, and detects what models are near that position. \r\nI am doing this on the `onMouseMove` event attached to my `<canvas>` component. \r\n\r\nI also use an `<input>` component of type `range`, to change the "search radius" for objects detection. I am using the `onChange` synthetic event on this component.\r\n\r\nEverything works fine initially, but as soon as I use the input component, thus firing the `onChange` events, the application starts to lag. I went into the performance monitor in Chrome\'s DevTools and recorded a performance profile, and noticed that there is something weird happening to GC behaviour before and after the `onChange` events.\r\n\r\n### Screenshot of Chrome Devtools performance monitor\r\n![image](https://user-images.githubusercontent.com/17537040/51691161-3f740880-1fc8-11e9-91a6-0067cd6d4304.png)\r\n\r\nIt seems like GC is working fine before the `onChange` events are fired, but once the events are fired, it changes its behaviour and does not show the "zigzag" pattern anymore. \r\n\r\nAnd this is precisely where the app starts lagging, and all function calls take much longer than before.\r\n\r\nCan anyone help me understand what is going on here and how to resolve this issue?\r\n\r\nThank you in advance.',createdAt:"2019-01-24T16:21:43Z",author:{login:"leemun1",avatarUrl:"https://avatars2.githubusercontent.com/u/17537040?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14693",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Chrome Autofill overwrites values on controlled components",state:"OPEN",number:14694,body:'\x3c!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n--\x3e\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\nReport a bug. Initially reported in https://github.com/mozilla-services/react-jsonschema-form/issues/1153\r\n\r\n**What is the current behavior?**\r\nAutofill overwrites existing values in fields when those fields are controlled components in React.\r\n\r\nSee https://jsfiddle.net/epicfaace/9p17e2qx/21/ -- to test this, add a "Saved Address" in the Chrome options.\r\n\r\n![2019-01-24 10 37 23](https://user-images.githubusercontent.com/1689183/51700667-91b32a80-1fc4-11e9-876b-6f795225d99b.gif)\r\n\r\n**What is the expected behavior?**\r\nAutofill does not overwrite existing fields. I\'ve made a JSFiddle with a plain HTML form, which works with the expected behavior.\r\n\r\nSee https://jsfiddle.net/epicfaace/1my3f9n4/6/\r\n\r\n![2019-01-24 10 37 02](https://user-images.githubusercontent.com/1689183/51700679-9841a200-1fc4-11e9-9408-dae369ac5366.gif)\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\nReact 15.3.2\r\nChrome 71.0.3578.98\r\n',createdAt:"2019-01-24T18:42:29Z",author:{login:"epicfaace",avatarUrl:"https://avatars2.githubusercontent.com/u/1689183?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14694",labels:{edges:[{node:{name:"Component: DOM",__typename:"Label"},__typename:"LabelEdge"},{node:{name:"Type: Breaking Change",__typename:"Label"},__typename:"LabelEdge"},{node:{name:"Type: Bug",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"ErrorBoundary does not re-render app when place below react-router",state:"OPEN",number:14695,body:'\x3c!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n--\x3e\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\na **bug**\r\n\r\n**What is the current behavior?**\r\nIf I wrapper `Router` around `ErrorBoundary`, my app doesn\'t re-render until manual force refresh.  If I move `ErrorBoundary` to be above `Router` then it\'s fine.  Why does it behave this way?\r\n\r\nApp doesn\'t re-render until force refresh\r\n```\r\n<Router>\r\n    <div className="app-shell">\r\n        <ErrorBoundary>\r\n            <Navbar />\r\n            <div className="app-main">\r\n                <Sidebar project={this.props.currentProject} />\r\n                <MainContentRouter />\r\n            </div>\r\n            <ToastContainer />\r\n        </ErrorBoundary>\r\n    </div>\r\n<Router>\r\n```\r\n\r\nWORKS FINE\r\n```\r\n<ErrorBoundary>\r\n    <Router>\r\n        <div className="app-shell">\r\n            <Navbar />\r\n            <div className="app-main">\r\n                <Sidebar project={this.props.currentProject} />\r\n                <MainContentRouter />\r\n            </div>\r\n            <ToastContainer />\r\n        </div>\r\n    <Router>\r\n</ErrorBoundary>\r\n```\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem. Your bug will get fixed much faster if we can run your code and it doesn\'t have dependencies other than React. Paste the link to your JSFiddle (https://jsfiddle.net/Luktwrdm/) or CodeSandbox (https://codesandbox.io/s/new) example below:**\r\n\r\n**What is the expected behavior?**\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\nReact: 16.7.6\r\nOS: Mac',createdAt:"2019-01-24T19:30:37Z",author:{login:"mydiemho",avatarUrl:"https://avatars2.githubusercontent.com/u/1634185?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14695",labels:{edges:[{node:{name:"Resolution: Needs More Information",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Spread reusable hook in component",state:"CLOSED",number:14697,body:"Not sure if this is a bug or a feature, but whilst toying with reusable hooks I tried to condense this:\r\n```\r\nconst Container: React.FunctionComponent = () => {\r\n  const { count, decrement, increment } = useCounter(0)\r\n\r\n  return <Component count={count} increment={increment} decrement={decrement} />\r\n}\r\n```\r\n\r\nInto this:\r\n```\r\nconst Container: React.FunctionComponent = () => <Component {...useCounter(0)} />\r\n```\r\n\r\nBut it didn't work. Assume the hook must be within the statement block?\r\n\r\nRunning 16.7.0-alpha.2",createdAt:"2019-01-24T19:50:29Z",author:{login:"WillSquire",avatarUrl:"https://avatars2.githubusercontent.com/u/6594713?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14697",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Event handler in addEventListener doesn't have access to the latest state",state:"CLOSED",number:14699,body:"I'm using react 16.8.0-alpha.1 with hooks and typescript and noticed this strange behavior. If I attach an event listener to the document or other element using the addEventListener method, the event handler method doesn't have access to the latest state variables.\r\n\r\nI have created a [codepen](https://codepen.io/anon/pen/RvroJW) to reproduce the issue. The problem is that inside the handleScroll method the scrolled variable is always false, but in the useEffect method the variable is true.\r\n\r\nSteps to reproduce:\r\n1) Go to [codepen](https://codepen.io/anon/pen/RvroJW).\r\n2) Open the console.\r\n3) Scroll the page.\r\n4) Check the console output to see the different output from handleScroll and useEffect.\r\n",createdAt:"2019-01-25T15:44:57Z",author:{login:"manospasj",avatarUrl:"https://avatars0.githubusercontent.com/u/5380042?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14699",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Calling a function within a function",state:"CLOSED",number:14700,body:"Anyone know a better way to create call a function within a function? Below I have datagrabber but react doesn't like this way of calling and gives me an error.\r\n\r\n\r\n\r\n\r\n```\r\nimport React from 'react';\r\nimport nav from '../data/navigation';\r\nimport navMedicare from '../data/navigationMedicare';\r\nimport MegaNavSearch from './MegaNavSearch';\r\n\r\nconst MegaNavSupportLinks = (props) => {\r\n  const links = props.links ? props.links.top : nav[0].top;\r\n\r\n  dataGrabber() {\r\n\r\n    return(\r\n      <div>\r\n        {links.map((l, idx) => <a href={l.url} className=\"mnav-header__nav-link\" key={idx}>{l.label}</a>)}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <nav className={props.sticky ? 'mnav-header__nav mnav-header__nav--hidden' : 'mnav-header__nav'}>\r\n\r\n      {this.dataGrabber()}\r\n\r\n      <div className=\"mnav-header__nav-select\">\r\n         Espa\xf1ol\r\n      </div>\r\n\r\n      <MegaNavSearch />\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default MegaNavSupportLinks;\r\n\r\n```",createdAt:"2019-01-25T19:37:00Z",author:{login:"ericx2x",avatarUrl:"https://avatars3.githubusercontent.com/u/3118306?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14700",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"An idea about Context",state:"CLOSED",number:14702,body:"@gaearon \r\n```js\r\nconst themeContext = React.createContext({color: 'white', setColor() {}})\r\nconst userContext = React.createContext({name: ''})\r\n\r\nfunction App({defaultColor}) {\r\n  const [color, setColor] = useState(defaultColor)\r\n  useMemo(() => {\r\n    themeContext.write({color, setColor})\r\n  }, [color])\r\n\r\n  return (\r\n    <React.Providers contexts={[themeContext, userContext]}>\r\n\r\n    </React.Providers>\r\n  )\r\n}\r\n```\r\n\r\n```js\r\nconst counterContext = React.createContext({\r\n  value: 0,\r\n  increment() {\r\n     counterContext.write(({value, ...rest}) => ({value: value + 1, ...rest}))\r\n  },\r\n  doOtherThings() {\r\n    const {value} = useContext(counterContext)\r\n    calculation(value)\r\n  }\r\n})\r\n\r\nfunction Counter(props) {\r\n  return (\r\n    <React.Providers contexts={[counterContext]}>\r\n      <CounterConsumer />\r\n    </React.Providers>\r\n  )\r\n}\r\n\r\nfunction CounterConsumer(props) {\r\n  const {value, increment} = useContext(counterContext)\r\n\r\n  return (\r\n    <div>\r\n      <h1>value: {value}</h1>\r\n      <button increment={increment}>+</button>\r\n    </div>\r\n  )\r\n}\r\n```",createdAt:"2019-01-26T07:29:42Z",author:{login:"rabbitooops",avatarUrl:"https://avatars2.githubusercontent.com/u/20941062?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14702",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Reate.Lazy loaded an unexpect url when using sub-route",state:"CLOSED",number:14703,body:'Hello! I have a problem that Reate.Lazy loaded an unexpect url.\r\n\r\nI have used React.lazy success when I have only main route(Using React-Router v4). \r\n\r\nAfter I move the lazy into sub-route, I can\'t get the file.\r\n\r\nThis is the using of lazy\r\n```\r\nconst About = lazy(() => import(/* webpackChunkName: "About" */ "./Pages/About"));\r\nconst BlackList = lazy(() => import(/* webpackChunkName: "BlackList" */ "./Pages/BlackList"));\r\n\r\nconst MeunList = {\r\n    BlackList: { component: () => (<BlackList />), text: "BlackList", icon: "stop" },\r\n    About: { component: () => (<About />), text: "About Us", icon: "environment" },\r\n};\r\n\r\n```\r\n\r\nAnd this is the using of sub router  ( match.url = console) :\r\n```\r\n<Suspense fallback={<Icon type="loading" style={{ fontSize: 128 }} spin />} >\r\n    <Switch>\r\n        <Route exact path={`${match.url}`} component={initPage.component} />\r\n        {\r\n            Object.entries(MeunList).map(([meunKey, meunInfo]) => (\r\n                <Route path={`${match.url}/${meunKey}`} key={`/${meunKey}`} component={meunInfo.component} />\r\n          ))\r\n     }\r\n     </Switch>\r\n</Suspense>\r\n```\r\n\r\nMain route\r\n```\r\n <Route path="/console" component={MainPage} />\r\n```\r\n\r\nOn runtime, the lazy will get split file under main route, \r\n\r\n```\r\nUncaught (in promise) Error: Loading chunk /console/BlackList failed.\r\n(missing: http://192.168.1.10:8000/console/BlackList.bundle.js)\r\n    at HTMLScriptElement.onScriptComplete (runtime~index.bundle.js?7dbe5cbc88f836c06844:837)\r\n```\r\n\r\n**console** is the main route(also by react-router),  but the real file is packed on the path ` http://192.168.1.10:8000/BlackList.bundle.js`\r\n\r\nI have tried `const About = lazy(() => import(/* webpackChunkName: "../About" */ "./Pages/About"));` failed too~\r\n\r\nHow to resolve this problem?  Thanks~',createdAt:"2019-01-26T08:51:49Z",author:{login:"morningtzh",avatarUrl:"https://avatars3.githubusercontent.com/u/4755736?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14703",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"createDrawerNavigator doesn't show anything in react-navigation V3 react-native",state:"CLOSED",number:14704,body:"import {createSwitchNavigator, createAppContainer, \r\n  createDrawerNavigator, createBottomTabNavigator} \r\n        from 'react-navigation'; \r\n\r\nclass App extends Component {\r\n  static navigationOptions = {\r\n    drawerLabel: 'Home',\r\n    // drawerIcon: ({ tintColor }) => (\r\n    //   <Image\r\n    //     source={require('./chats-icon.png')}\r\n    //     style={[styles.icon, {tintColor: tintColor}]}\r\n    //   />\r\n    // ),\r\n  };\r\n            render() {\r\n            return (\r\n              \r\n              <View>\r\n              {/* <Header headerText=\"DISCOUNT SHAH\" /> */}\r\n              <AppContainer />\r\n              {/* <Searching />  */}\r\n              {/* <Routes /> */}\r\n              </View>\r\n\r\n);\r\n}\r\n}\r\n\r\nconst DashboardTabNavigator = createBottomTabNavigator({\r\n    Deals,\r\n    Profile\r\n})\r\n\r\n\r\nconst AppDrawerNavigator = createDrawerNavigator({\r\n    Dashboard: {screen: Drawer1}\r\n});\r\nconst AppSwitchNavigator = createSwitchNavigator({\r\n      welcome: {screen: Drawer1},\r\n      Dashboard: {screen: Searching },\r\n      Deals: {screen : Deals},  \r\n});\r\nconst AppContainer = createAppContainer(AppSwitchNavigator);\r\n\r\nexport default App;\r\n\r\n",createdAt:"2019-01-26T12:10:15Z",author:{login:"bilalma",avatarUrl:"https://avatars2.githubusercontent.com/u/44552832?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14704",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Context leaks to later renders when render stream destroyed early",state:"OPEN",number:14705,body:"**Do you want to request a *feature* or report a *bug*?**\r\n\r\nBug.\r\n\r\n**What is the current behavior?**\r\n\r\nIf a stream created with `.renderToNodeStream()` is destroyed before the render completes, memory can be retained unnecessarily by Contexts which were active at the time.\r\n\r\nIt's not a memory leak per se as memory use is not unbounded. There's a limit on number of threads in use and context slots are reused, so memory use can't increase endlessly.\r\n\r\nWould only make a noticeable impact on an application which:\r\n\r\n* renders using `.renderToNodeStream()` or `.renderToStaticMarkup()`\r\n* stores large objects in Context (e.g. large data sets from fetch requests)\r\n* experiences a spike in traffic which then recedes\r\n* destroys a lot of streams prematurely (or has errors thrown in rendering which causes streams to be destroyed)\r\n\r\nIn the above case, when the spike hits, many threads are created for concurrent renderers. Each thread writes data into a slot of the Contexts it uses. When the threads are destroyed before the renders complete, the Context slots are not cleared, and so left filled with data which is no longer useful, but cannot be freed by GC.\r\n\r\nWhen the spike recedes, this memory continues to be retained.\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem. Your bug will get fixed much faster if we can run your code and it doesn't have dependencies other than React. Paste the link to your JSFiddle (https://jsfiddle.net/Luktwrdm/) or CodeSandbox (https://codesandbox.io/s/new) example below:**\r\n\r\nI'll submit a PR with failing test case and fix shorty.\r\n\r\n**What is the expected behavior?**\r\n\r\nWhen stream is destroyed, it should clean up its resources.\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\nIssue introduced in 961eb65b4ba5de6bbfb6b8a075a924c284541177 which is in 16.7.0.",createdAt:"2019-01-26T14:13:33Z",author:{login:"overlookmotel",avatarUrl:"https://avatars0.githubusercontent.com/u/557937?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14705",labels:{edges:[{node:{name:"Component: Server Rendering",__typename:"Label"},__typename:"LabelEdge"},{node:{name:"Type: Regression",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"ReactCurrentDispatcher undefined",state:"CLOSED",number:14707,body:'I literally just installed react and this happened\r\n\r\nmanaged to fix it by just adding\r\n`const ReactCurrentDispatcher = {};` in renderRoot() in react-dom.development.js\r\n![image-of-error](https://i.imgur.com/tuv3urv.png)\r\nmy config\r\n\r\n`  "postfetch": "^0.0.2",\r\n    "react": "16.8.0-alpha.1",\r\n    "react-dom": "16.8.0-alpha.1",\r\n    "react-router-dom": "4.4.0-beta.6",\r\n    "react-scripts": "2.1.3",\r\n    "reactn": "^0.1.9",`',createdAt:"2019-01-26T14:31:27Z",author:{login:"alekangelov",avatarUrl:"https://avatars3.githubusercontent.com/u/6832025?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14707",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"hooks: useContext with useState not updating",state:"CLOSED",number:14708,body:"\x3c!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n--\x3e\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\n\r\nseems it's a **bug**. \ud83d\ude15 \r\n\r\n**What is the current behavior?**\r\n\r\nNested context provider and `useContext` hooks seems to be conflicting, updates get discarded.\r\n\r\n**What is the expected behavior?**\r\n\r\nWhen connecting to a context, it should update whenever it's `value` changes.\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\n- **react**: `18.8.0-alpha.1` (also reproduced on `16.7.0-alpha.0`)\r\n- **browser**: `chrome 71`\r\n- **os**: macOS Sierra\r\n\r\n---\r\n\r\n### more details\r\n\r\nWhile working on a cleanup of a localStorage \"connection\",\r\nI tried to mix 2 articles ([`[1]`](https://reactjs.org/docs/hooks-faq.html#how-to-avoid-passing-callbacks-down) & [`[2]`](https://reactjs.org/docs/context.html#updating-context-from-a-nested-component)) from the official react documentation, I've implemented it with hooks, but the value seems not to be passing through.\r\n\r\nI've put up a streamlined demo on [codesandbox `[3]`](https://codesandbox.io/s/0yzjr8vnrv).\r\n\r\nThe actual implementation is only a couple of lines more (parsing it from and stringifying it to JSON).\r\n\r\nWorkarounds that I found:\r\n- If I create a new function on each render around the `setValue` function, it actually works. \r\n  - but this goes against the advice on [`[1]`](https://reactjs.org/docs/hooks-faq.html#how-to-avoid-passing-callbacks-down) about avoiding creating  new values.\r\n- Migrate it to a class and use `componentDidUpdate` instead of `useEffect`.\r\n  - I'm actually using this right now, as it works. Including saving a reference to the function in the state.\r\n\r\n---\r\n\r\nIs there anything that shouldn't work on the code below? the effect gets triggered with the changes,\r\nbut the value doesn't get updated on the components that consume via hook. see repro code [`[3]`](https://codesandbox.io/s/0yzjr8vnrv)\r\n\r\n```javascript\r\nconst createLocalStorage = key => {\r\n    const initialValue = localStorage.getItem(key)\r\n    const ValueContext = createContext(initialValue)\r\n    const SetterContext = createContext(() => {})\r\n\r\n    const useStorage = () => [ValueContext, SetterContext].map(useContext)\r\n\r\n    const Provider = ({children}) => {\r\n        const [value, setValue] = useState(initialValue)\r\n\r\n        useEffect(\r\n            () => {\r\n                console.log('effect', value)\r\n                localStorage.setItem(key, value)\r\n            },\r\n            [value],\r\n        )\r\n\r\n        return (\r\n            <ValueContext.Provider value={value}>\r\n                <SetterContext.Provider value={setValue}>\r\n                    {children}\r\n                </SetterContext.Provider>\r\n            </ValueContext.Provider>\r\n        )\r\n    }\r\n\r\n    return [Provider, useStorage]\r\n}\r\n```\r\n\r\n`[1]`: https://reactjs.org/docs/hooks-faq.html#how-to-avoid-passing-callbacks-down\r\n`[2]`: https://reactjs.org/docs/context.html#updating-context-from-a-nested-component\r\n`[3]`: https://codesandbox.io/s/0yzjr8vnrv\r\n\r\n---\r\n\r\n![hlcecpq](https://user-images.githubusercontent.com/8649362/51789871-bea63f80-2174-11e9-9288-151510494a7e.gif)\r\n",createdAt:"2019-01-26T20:39:04Z",author:{login:"leonardodino",avatarUrl:"https://avatars2.githubusercontent.com/u/8649362?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14708",labels:{edges:[{node:{name:"Type: Question",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Support Proxy as child",state:"OPEN",number:14709,body:"\x3c!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n--\x3e\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\nFeature\r\n\r\n**What is the current behavior?**\r\nObjects are not valid as a React child\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem. Your bug will get fixed much faster if we can run your code and it doesn't have dependencies other than React. Paste the link to your JSFiddle (https://jsfiddle.net/Luktwrdm/) or CodeSandbox (https://codesandbox.io/s/new) example below:**\r\nN/A\r\n\r\n**What is the expected behavior?**\r\nI'm trying to build a system that auto-detects if data is used in a React component. To do this, I detect usage during `render()` by using Proxies, which can register all access. This data, in turn, is used to prevent needless re-renders.\r\n\r\nA parent component can pass a Proxy which represents a string, for example, to a child component, which, without knowing it is a Proxy, can use this value in a calculation (e.g. `props.value + 1` or `` `The value is ${props.value}` ``). This can be handled with `proxy[Symbol.toPrimitive]()`, which is called by JS automatically when used in this sort of expression.\r\n\r\nHowever, this doesn't work if the child now passes the proxy directly to React as a child:\r\n```jsx\r\n  return (<span>{this.props.childValue</span>);\r\n```\r\nReact will do a `typeof` on the child, find it is an object, and report `Objects are not valid as a React child`. Unfortunately, `typeof` cannot be spoofed with Proxy, and it will always return `'object'`.\r\n\r\nThe relevant code is found [here](https://github.com/facebook/react/blob/b87aabdfe1b7461e7331abb3601d9e6bb27544bc/packages/react/src/ReactChildren.js#L189-L204). The alternative could be for React to check if there's a `child[Symbol.tpPrimitive]` and, if so, evaluate it to find the intended value, and to retry with this value as the child.\r\nIt could be as simple as inserting the following code [here](https://github.com/facebook/react/blob/b87aabdfe1b7461e7331abb3601d9e6bb27544bc/packages/react/src/ReactChildren.js#L189):\r\n```js\r\n  if (typeof Symbol !== 'undefined') {\r\n    const toPrimitive = children[Symbol.toPrimitive];\r\n    if (toPrimitive) {\r\n      const value = toPrimitive('string');\r\n      if (typeof value !== 'object') {\r\n\t\treturn traverseAllChildrenImpl(\r\n\t\t  value,\r\n\t\t  nameSoFar,\r\n\t\t  callback,\r\n\t\t  traverseContext,\r\n\t\t)\r\n      }\r\n    }\r\n  }\r\n```\r\n\r\nIt would be great if React would support this use-case. The alternative is for parent components to resolve the value, which would attribute the access to the parent component, instead of the child, where it's really being used. This in turn would cause the parent to be rerendered when only the child is being changed.\r\n\r\nIf the child is aware it may be receiving Proxy objects, it can resolve the value itself. However, the whole point of using Proxies is to automate all the refresh logic (like `shouldComponentUpdate`). Also, not needing to resolve the value would allow the value to propagate through to descendant components which may be wholly unaware of the proxy. \r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\nAll version, never worked before.",createdAt:"2019-01-27T06:20:31Z",author:{login:"ddsol",avatarUrl:"https://avatars3.githubusercontent.com/u/4663213?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14709",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:'React works in XSLT in Chrome/Safari but errs "Unexpected token" in Firefox',state:"CLOSED",number:14712,body:'This minimum react page works in Chrome and Firefox. Let\'s call it `reference.html`\r\n\r\n    <!DOCTYPE html>\r\n    <html>\r\n    <head>\r\n        <script src="https://unpkg.com/react@16/umd/react.development.js"><\/script>\r\n        <script src="https://unpkg.com/react-dom@16/umd/react-dom.development.js"><\/script>\r\n        <script src="https://unpkg.com/babel-standalone@6.15.0/babel.min.js"><\/script>\r\n    </head>\r\n    <body>\r\n    <div id="container"/>\r\n    <script type="text/babel">\r\n        var destination = document.querySelector("#container");\r\n        ReactDOM.render(\r\n            <p>Hello World</p>,\r\n            document.querySelector("#container")\r\n        );\r\n    <\/script>\r\n    </body>\r\n    </html>\r\n\r\nNow putting that to XSLT, first, prepare a dummy XML file for demonstration:\r\n\r\n    <?xml version="1.0" encoding="UTF-8"?>\r\n    <?xml-stylesheet type="text/xsl" href="experiment.xsl"?>\r\n    <dummy/>\r\n\r\nThen the `experiment.xsl` which mimic `reference.html`.\r\n\r\n    <?xml version="1.0" encoding="UTF-8"?>\r\n    <xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">\r\n      <xsl:template match="/">\r\n        <html>\r\n        <head>\r\n          <script src="https://unpkg.com/react@16/umd/react.development.js"><\/script>\r\n          <script src="https://unpkg.com/react-dom@16/umd/react-dom.development.js"><\/script>\r\n          <script src="https://unpkg.com/babel-standalone@6.15.0/babel.min.js"><\/script>\r\n        </head>\r\n        <body>\r\n            <div id="container"/>\r\n            <script type="text/babel">\r\n              var destination = document.querySelector("#container");\r\n              ReactDOM.render(\r\n              <p>Hello World</p>,\r\n              document.querySelector("#container")\r\n              );\r\n            <\/script>\r\n        </body>\r\n        </html>\r\n      </xsl:template>\r\n    </xsl:stylesheet>\r\n\r\nThe result should be identical to the single-page minimum example, and indeed it works that way in Google Chrome (v70) and Safari. But in Firefox (v64) I got:\r\n\r\n    SyntaxError: Inline Babel script: Unexpected token (4:10)\r\n      2 |           var destination = document.querySelector("#container");\r\n      3 |           ReactDOM.render(\r\n    > 4 |           ,\r\n        |           ^\r\n      5 |           document.querySelector("#container")\r\n      6 |           );\r\n      7 |         \r\n\r\nSeems the inline HTML is simply deleted for some reason.',createdAt:"2019-01-28T00:49:42Z",author:{login:"colourful-land",avatarUrl:"https://avatars3.githubusercontent.com/u/548435?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14712",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"useLayoutEffect gets the initial state from useState instead of the current state when its input list never changes when an async method is fired",state:"CLOSED",number:14713,body:"**Do you want to request a *feature* or report a *bug*?**\r\n\r\nReport a bug.\r\n\r\n**What is the current behavior?**\r\n\r\nWhen using `useLayoutEffect` (having it fire only once during mount, and once during unmount), setting state outside of it and then having an async method run inside of it, results in it not being able to `useState` as expected. Instead of getting the latest value - it always gets the initial value.\r\n\r\nCodesandbox here: https://codesandbox.io/s/9jm66px2z4\r\nActual usage here: https://github.com/madou/react-peer/blob/master/src/use-peer-state.tsx#L29\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem. Your bug will get fixed much faster if we can run your code and it doesn't have dependencies other than React. Paste the link to your JSFiddle (https://jsfiddle.net/Luktwrdm/) or CodeSandbox (https://codesandbox.io/s/new) example below:**\r\n\r\n**What is the expected behavior?**\r\n\r\nThat it would get the current state when the async code is run. If I don't supply a input list to the hook it works as expected - however at the cost of repeated cleanup/initialisation.\r\n\r\nI'm looking from the synonymous `componentDidMount()`/`componentWillUnmount()` hooks - was thinking using `useLayoutEffect` like so would do it.\r\n\r\nAm I using it as expected? Is there a proper way to use it?\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\nUsing `16.8.0-alpha.1`.\r\n\r\nCheers,",createdAt:"2019-01-28T08:10:59Z",author:{login:"madou",avatarUrl:"https://avatars2.githubusercontent.com/u/6801309?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14713",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Hydration breaks in URL link  component",state:"CLOSED",number:14714,body:"Hi, guys! `this.state.isClient` only partially works for me.\r\nI use hydrate. I have a language change component. I use this.state.isClient for it because I need to change images.\r\nThis component is used in the header and in the footer. In the header, it works perfectly, but in the footer, it does not change the links href.\r\nDo not tell me, please, what could be the matter? \r\nThanks",createdAt:"2019-01-28T11:37:43Z",author:{login:"Valerika",avatarUrl:"https://avatars0.githubusercontent.com/u/15037937?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14714",labels:{edges:[{node:{name:"Resolution: Needs More Information",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"React Lazy import from export default",state:"CLOSED",number:14715,body:"\x3c!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n--\x3e\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\n\r\n**What is the current behavior?**\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem. Your bug will get fixed much faster if we can run your code and it doesn't have dependencies other than React. Paste the link to your JSFiddle (https://jsfiddle.net/Luktwrdm/) or CodeSandbox (https://codesandbox.io/s/new) example below:**\r\n\r\n**What is the expected behavior?**\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n",createdAt:"2019-01-28T14:11:26Z",author:{login:"jMoulis",avatarUrl:"https://avatars1.githubusercontent.com/u/22916626?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14715",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Expected a string (for built-in components) or a class/function (for composite components) but got: object",state:"CLOSED",number:14716,body:'\x3c!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n--\x3e\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\n\r\n**What is the current behavior?**\r\n\r\nI am unable to use an external module I installed and I did exactly what was instructed in the documentation. It works when i run it in codesandbox but it doesn\'t run in my own dev environment.\r\n\r\nHere\'s my code:\r\n\r\n```\r\nimport React from "react";\r\nimport { Treebeard } from "react-treebeard";\r\nimport "./custom.css";\r\n\r\nconst data = {\r\n  name: "root",\r\n  toggled: true,\r\n  children: [\r\n    {\r\n      name: "parent",\r\n      children: [{ name: "child1" }, { name: "child2" }]\r\n    },\r\n    {\r\n      name: "loading parent",\r\n      loading: true,\r\n      children: []\r\n    },\r\n    {\r\n      name: "parent",\r\n      children: [\r\n        {\r\n          name: "nested parent",\r\n          children: [{ name: "nested child 1" }, { name: "nested child 2" }]\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n};\r\n\r\nexport default class Dialog extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      access_token: ""\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    const access_token = sessionStorage.getItem("access_token")\r\n      ? sessionStorage.getItem("access_token")\r\n      : "";\r\n\r\n    this.setState({ access_token });\r\n  }\r\n\r\n  onToggle = (node, toggled) => {\r\n    if (this.state.cursor) {\r\n      this.setState({ cursor: { active: false } });\r\n    }\r\n    node.active = true;\r\n    if (node.children) {\r\n      node.toggled = toggled;\r\n    }\r\n    this.setState({ cursor: node });\r\n  };\r\n\r\n  render() {\r\n    return <Treebeard data={data} onToggle={this.onToggle} />;\r\n  }\r\n}\r\n```\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem. Your bug will get fixed much faster if we can run your code and it doesn\'t have dependencies other than React. Paste the link to your JSFiddle (https://jsfiddle.net/Luktwrdm/) or CodeSandbox (https://codesandbox.io/s/new) example below:**\r\n\r\n**What is the expected behavior?**\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\nReact 16.7.0\r\nMozilla Firefox\r\n',createdAt:"2019-01-28T18:51:39Z",author:{login:"ifeanyidavid",avatarUrl:"https://avatars0.githubusercontent.com/u/19824880?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14716",labels:{edges:[{node:{name:"Resolution: Support Redirect",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Unable to use useContext hook inline in Context.Provider",state:"CLOSED",number:14718,body:"**Do you want to request a *feature* or report a *bug*?**\r\n\r\nNot sure if it is a bug or a feature yet. This relates to Hooks.\r\n\r\nIt could also be that this is all expected behaviour and one of the workarounds mentioned is required.\r\n\r\n**What is the current behavior?**\r\n\r\nI have a hook that depends on the `useContext` hook. Using it as follows works perfectly:\r\n\r\n```\r\nconst MyHookedComponent = () => {\r\n    const contextValue = useContext(DemoContext);\r\n\r\n    return (\r\n       //Do something with contextValue\r\n    )\r\n}\r\n\r\nconst MyContextProviderComponent = () => {\r\n\r\n   return (\r\n        <DemoContext.Provider value={someContextValue}>\r\n                <MyHookedComponent />\r\n         </DemoContext.Provider>\r\n   )\r\n}\r\n```\r\n\r\nWhat if I want to use the `getContext` hook inline in the same component that declares the `DemoContext.Provider` ?\r\n\r\n```\r\nconst MyContextProviderComponent = () => {\r\n       const contextValue = useContext(DemoContext); //Of course this fails due to the Context hierarchy.\r\n   return (\r\n        <DemoContext.Provider value={someContextValue}>\r\n                     //Do something with contextValue\r\n         </DemoContext.Provider>\r\n   )\r\n}\r\n```\r\n\r\nI seem to be unable to get this working.\r\n\r\n**Please note**:\r\n- I have a very good reason for solving my issue with Context and not passing props.\r\n- The implementation I show above looks trivial and dumb but it is the simplest way to illustrate what the use case is. In my implementation the `Provider` sits in a complex component that does a lot of data management which I really want to happen at this level.\r\n- The usual way to use this will be the first working version I noted above, it is only in the case where the user would want to use the hook inline inside the `Provider`.\r\n- I have searched for a couple of hours and tried various configurations without success, so my apologies if this is a duplicate of another issue.\r\n\r\n**What is the expected behavior?**\r\n\r\nAny method to consume context inline in the provider using the same re-usable hook without having to revert back to render props.\r\n\r\nI know I can solve this with **render props** but I am trying to convert an implementation using render props to hooks. I also know I can hoist the Context Provider higher up but in my implementation it would quadruple the code complexity to develop and maintain while introducing extra complexity into the user interface.\r\n\r\nAlso, by extracting the body inside the `Provider` to a new component I can also solve this but ideally I would not like to have a user do this for this use case.\r\n",createdAt:"2019-01-29T13:26:12Z",author:{login:"AlmeroSteyn",avatarUrl:"https://avatars3.githubusercontent.com/u/5063473?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14718",labels:{edges:[{node:{name:"Type: Question",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"onChange event does not happen on input type number when typing :",state:"OPEN",number:14719,body:"- Bug Report\r\n- Problem: Writing specific letter on input type number does not emit the onChange event.\r\n\r\n- Reproduce : Create input type number element and listener for onChange event, than console log in the listener and when you type: e + - .\r\nit will not emit the event.\r\n\r\nWhat should happen: Typing the letters should emit the event because the input got change event..\r\n\r\nI have this problem in the latest release and tested on Chrome Desktop in windows.",createdAt:"2019-01-29T18:26:06Z",author:{login:"hanm13",avatarUrl:"https://avatars0.githubusercontent.com/u/8017956?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14719",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Hooks error on React library compiled with Rollup.js",state:"CLOSED",number:14721,body:"\x3c!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n--\x3e\r\n\r\nDisclaimer: I'm not sure if this is an specific bug from React's Hooks or it is something I'm missing in my Rollup.js configuration but I've been trying a lot of different things and always end up in the same error.\r\n\r\n`Hooks can only be called inside the body of a function component.`\r\n\r\nI'm building a React Component library using the alpha version of React and Hooks, and using Rollup.js v1.1.2 as a bundler with the next configuration:\r\n\r\n```javascript\r\nimport { readdirSync } from 'fs';\r\nimport path from 'path';\r\nimport babel from 'rollup-plugin-babel';\r\nimport commonjs from 'rollup-plugin-commonjs';\r\nimport external from 'rollup-plugin-peer-deps-external';\r\nimport replace from 'rollup-plugin-replace';\r\nimport resolve from 'rollup-plugin-node-resolve';\r\nimport { terser } from 'rollup-plugin-terser';\r\n\r\nconst CODES = [\r\n  'THIS_IS_UNDEFINED',\r\n  'MISSING_GLOBAL_NAME',\r\n  'CIRCULAR_DEPENDENCY',\r\n];\r\n\r\nconst getChunks = URI =>\r\n  readdirSync(path.resolve(URI))\r\n    .filter(x => x.includes('.js'))\r\n    .reduce((a, c) => ({ ...a, [c.replace('.js', '')]: `src/${c}` }), {});\r\n\r\nconst discardWarning = warning => {\r\n  if (CODES.includes(warning.code)) {\r\n    return;\r\n  }\r\n\r\n  console.error(warning);\r\n};\r\n\r\nconst env = process.env.NODE_ENV;\r\n\r\nconst plugins = [\r\n  external(),\r\n  babel({\r\n    exclude: 'node_modules/**',\r\n  }),\r\n  resolve(),\r\n  replace({ 'process.env.NODE_ENV': JSON.stringify(env) }),\r\n  commonjs(),\r\n  env === 'production' && terser(),\r\n];\r\n\r\nexport default [\r\n  {\r\n    onwarn: discardWarning,\r\n    input: 'src/index.js',\r\n    output: {\r\n      esModule: false,\r\n      file: 'umd/library-name.js',\r\n      format: 'umd',\r\n      name: 'libraryName',\r\n    },\r\n    plugins,\r\n  },\r\n  {\r\n    onwarn: discardWarning,\r\n    input: getChunks('src'),\r\n    output: [\r\n      { dir: 'esm', format: 'esm', sourcemap: true },\r\n      { dir: 'cjs', format: 'cjs', sourcemap: true },\r\n    ],\r\n    plugins,\r\n  },\r\n];\r\n```\r\n\r\nFor the examples page I created an internal project using `create-react-app` and I'm importing the library in the `package.json` using `link:..`\r\n\r\nThe page breaks as soon as it gets to the first Hooks call `var svgRef = useRef();` with the error mentioned above, but this only happens when I'm using the bundled code from the ESM file not when I'm using the library code directly. That's why I'm not sure if it is a Rollup misconfiguration or a React Hooks bug.\r\n\r\nI appreciate any help or guidance on this.\r\n\r\nReact v16.8.0-alpha.1\r\nReact DOM v16.8.0-alpha.1\r\nOS: macOS\r\nBrowser: Chrome\r\nNode.js v11.8.0\r\n\r\nI did test it with a previous alpha version of React and it happens the same.",createdAt:"2019-01-29T19:36:51Z",author:{login:"davegomez",avatarUrl:"https://avatars0.githubusercontent.com/u/282903?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14721",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"React 16.8 Hook Type Definitions",state:"OPEN",number:14722,body:"\x3c!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n--\x3e\r\n\r\n**Do you want to request a *feature* or report a *bug*?** Feature\r\n\r\n**What is the current behavior?** The type definitions in DefinitelyTyped support hooks but may be out of date https://github.com/DefinitelyTyped/DefinitelyTyped/pull/30057\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem. Your bug will get fixed much faster if we can run your code and it doesn't have dependencies other than React. Paste the link to your JSFiddle (https://jsfiddle.net/Luktwrdm/) or CodeSandbox (https://codesandbox.io/s/new) example below:**\r\n\r\n**What is the expected behavior?** The type definitions align with the API that will be released.\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?** 16.8.\r\n",createdAt:"2019-01-29T23:31:10Z",author:{login:"pspeter3",avatarUrl:"https://avatars3.githubusercontent.com/u/607701?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14722",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"ReactDOM renderToString adds empty HTML comments",state:"CLOSED",number:14725,body:"\x3c!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n--\x3e\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\nBug\r\n\r\n**What is the current behavior?**\r\nReactDOM.renderToString adds an empty HTML comment.\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem. Your bug will get fixed much faster if we can run your code and it doesn't have dependencies other than React. Paste the link to your JSFiddle (https://jsfiddle.net/Luktwrdm/) or CodeSandbox (https://codesandbox.io/s/new) example below:**\r\n```\r\nconst someVar = 'foo';\r\n\r\nconst htmlWithVariableAndCharacters = document.createTextNode(\r\n  ReactDOMServer.renderToString(\r\n    <div>{someVar}anyCharacters</div>\r\n  )\r\n);\r\n\r\ndocument.body.appendChild(htmlWithVariableAndCharacters);\r\n```\r\n\r\nHTML Output:\r\n\r\n```\r\n<div data-reactroot=\"\">foo\x3c!-- --\x3eanyCharacters</div>\r\n```\r\n\r\nSee it live here: https://codepen.io/anon/pen/mvORKd?editors=0010\r\n\r\n**What is the expected behavior?**\r\nExpected HTML output:\r\n```\r\n<div data-reactroot=\"\">fooanyCharacters</div>\r\n```\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\nSeen in React 16.7.0, do not know behavior in previous versions.\r\n\r\n---\r\n\r\nSomething to keep in mind is if you open Chrome Development Tools you will not be able to see these HTML comments as Chrome strips them from being viewed in the developer pane. They can be seen in a server side render string output or if you right-click and choose 'Copy Element' and paste into a text editor.\r\n",createdAt:"2019-01-30T09:17:28Z",author:{login:"buildbreakdo",avatarUrl:"https://avatars3.githubusercontent.com/u/1865690?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14725",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Allow the same DOM node to use both a callback and a RefObject in its ref prop",state:"OPEN",number:14726,body:"**Do you want to request a *feature* or report a *bug*?** Feature\r\n\r\n**What is the current behavior?**\r\n\r\nThe `ref` attribute passed to a DOM node can be either a callback or a `RefObject`, but not both. Sometimes, that's exactly what's required: for example, a library like [react-pose](https://popmotion.io/pose/api/posed/#posed-usage-create-a-posed-component-existing-components) demands ref forwarding to work with a React Component, but you'd also like to retain a reference to the _same_ parent DOM node within that component itself for a different reason. It's often not possible to nest DOM nodes to achieve a similar thing using two different ref attributes as that breaks layout.\r\n\r\nHere's a link to a naive attempt to achieve this: https://codesandbox.io/s/4jyw3q3v57\r\n\r\nI'm not surprised this doesn't work as there's no reason for the parent ref callback to fire, but I don't know how else to go about it.\r\n\r\n**What is the expected behavior?**\r\n\r\nThe callback provides the component with its own reference to the parent DOM node, whilst also providing it to the parent component via the passed `RefObject`.\r\n",createdAt:"2019-01-30T10:43:37Z",author:{login:"richsilv",avatarUrl:"https://avatars0.githubusercontent.com/u/3180526?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14726",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:'Unexpected "Hooks can only be called inside the body of a function component."',state:"CLOSED",number:14727,body:'\x3c!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n--\x3e\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\n\r\nNot sure\r\n\r\n**What is the current behavior?**\r\n\r\nSimilar to #14317 \r\n\r\nI am receiving "Unexpected "Hooks can only be called inside the body of a function component." while using locally linked packages with **pnpm**. Any advice on how to solve this?\r\n\r\nWeird thing is that both node_modules/react point to the same symbolically linked directory.\r\n\r\n\r\n```\r\nlrwxr-xr-x  1 tomi  staff  59 30 Jan 19:48 app/node_modules/react -> .registry.npmjs.org/react/16.8.0-alpha.1/node_modules/react\r\nlrwxr-xr-x  1 tomi  staff  67 30 Jan 19:48 app/node_modules/react-dom -> .registry.npmjs.org/react-dom/16.8.0-alpha.1/node_modules/react-dom\r\n\r\nlrwxr-xr-x  1 tomi  staff  59 30 Jan 19:48 package/node_modules/react -> .registry.npmjs.org/react/16.8.0-alpha.1/node_modules/react\r\nlrwxr-xr-x  1 tomi  staff  67 30 Jan 19:48 package/node_modules/react-dom -> .registry.npmjs.org/react-dom/16.8.0-alpha.1/node_modules/react-dom\r\n```\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem. Your bug will get fixed much faster if we can run your code and it doesn\'t have dependencies other than React. Paste the link to your JSFiddle (https://jsfiddle.net/Luktwrdm/) or CodeSandbox (https://codesandbox.io/s/new) example below:**\r\n\r\n**What is the expected behavior?**\r\n\r\nThe functional component from linked package should work.\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\n16.8.0-alpha.1 react and react-dom',createdAt:"2019-01-30T10:46:53Z",author:{login:"tomitrescak",avatarUrl:"https://avatars2.githubusercontent.com/u/2682705?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14727",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"react packages listed as dependencies can't be debugged properly",state:"OPEN",number:14728,body:"**Do you want to request a feature or report a bug?** Bug\r\n\r\n**What is the current behavior?**\r\nReact packages listed as dependencies can be debugged only in transpiled code and not JSX.\r\n\r\n**What is the expected behavior?**\r\nYou can see and debug JSX files from other react packages listed as dependencies.\r\nI would expect webpack.config.js to configured properly in the default react app even before is ejected.\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\nIt happens in all versions of everything.\r\n",createdAt:"2019-01-30T14:38:32Z",author:{login:"BogdanZavu",avatarUrl:"https://avatars1.githubusercontent.com/u/17035068?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14728",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"this is undefined in getDerivedStateFromProps",state:"CLOSED",number:14730,body:"\x3c!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n--\x3e\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\nBug\r\n\r\n**What is the current behavior?**\r\n`this` is undefined in `getDerivedStateFromProps`\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem. Your bug will get fixed much faster if we can run your code and it doesn't have dependencies other than React. Paste the link to your JSFiddle (https://jsfiddle.net/Luktwrdm/) or CodeSandbox (https://codesandbox.io/s/new) example below:**\r\n```javascript\r\nclass MyComponent extends Component {\r\n  static sayHello() {\r\n     console.log('Hello')\r\n  }\r\n\r\n  static getDerivedStateFromProps() {\r\n     this.sayHello()\r\n  }\r\n}\r\n```\r\n\r\n**What is the expected behavior?**\r\nI would expect the above to work. To me it is unexpected that a static method is not getting called on the class.\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n16.5.1\r\n\r\nThis seems like an easy fix to me, [here](https://github.com/facebook/react/blob/a129259ad6a61790fe1912a87cb45018d942f90c/packages/react-reconciler/src/ReactFiberClassComponent.js#L161)\r\n\r\nIs there a reason not to change line 157 and 161?\r\n\r\n```javascript\r\n// From this\r\ngetDerivedStateFromProps.(nextProps, prevState);\r\n\r\n// To this?\r\ngetDerivedStateFromProps.call(ctor, nextProps, prevState);\r\n```\r\n",createdAt:"2019-01-30T17:45:41Z",author:{login:"sanbornhilland",avatarUrl:"https://avatars2.githubusercontent.com/u/8059361?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14730",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"useState inside a context provider not properly read when called from timeout",state:"CLOSED",number:14731,body:"\x3c!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n--\x3e\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\n\r\nLooks like a **bug**.\r\n\r\n**What is the current behavior?**\r\n\r\nI have a simple context set up to manage a global store. When implementing this context as a functional component with the useState hook, calls to my setStore function from inside a timeout are seeing old versions of the store and updating it incorrectly.\r\n\r\nPossibly a duplicate of #14010 but I don't see why the value of my store should be getting saved by the closure. The closure created by the setTimeout can't see the value of store, so it shouldn't be captured.\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem. Your bug will get fixed much faster if we can run your code and it doesn't have dependencies other than React. Paste the link to your JSFiddle (https://jsfiddle.net/Luktwrdm/) or CodeSandbox (https://codesandbox.io/s/new) example below:**\r\n\r\n[https://codesandbox.io/s/mnxr754oy](https://codesandbox.io/s/mnxr754oy)\r\n\r\nRefresh the page in the sandbox and click the \"Increment otherVal\" button a few times. After 3 seconds, a timeout fires in ChildThree that sets myVal to 42 but doesn't touch otherVal; however, the changes made by incrementing otherVal get blown away. This doesn't happen with changes prompted by onClick events (as you can test by clicking \"Set myVal to 42\" on the bottom), only timeouts.\r\n\r\nThe context implementation is in `store.js`. If you swap out the functional StoreProvider with the commented out class version, everything works as expected.\r\n\r\nIt's possible that I'm doing something wrong with how my closures are being created in the functional StoreProvider but I can't see why.\r\n\r\n**What is the expected behavior?**\r\n\r\nThe context provided function setStore should be seeing the correct copy of the state returned by the hook.\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\nTested in Chrome/Firefox/Edge on React 16.9.0-alpha.1",createdAt:"2019-01-30T18:43:08Z",author:{login:"gregoryjjb",avatarUrl:"https://avatars1.githubusercontent.com/u/7061296?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14731",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Memory leak on React > 16.2.5",state:"OPEN",number:14732,body:"\x3c!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n--\x3e\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\nPossible bug, or unexpected change in internal behavior\r\n\r\n**What is the current behavior?**\r\nWe are seeing a substantial memory leak in our codebase in versions of React > 16.5.2. Bisecting the issue, it seemed to appear at commit 7bee9fbdd49aa5b9365a94b0ddf6db04bc1bf51c.\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem. Your bug will get fixed much faster if we can run your code and it doesn't have dependencies other than React. Paste the link to your JSFiddle (https://jsfiddle.net/Luktwrdm/) or CodeSandbox (https://codesandbox.io/s/new) example below:**\r\n\r\nOur apologies, we are unable to fully isolate the issue to a minimal demo, and suspect it is not a bug but a behavior change which our code relied on. The leak seems to be in the messages area, where many components are created and released quickly.\r\n\r\n**What is the expected behavior?**\r\nOld fibers should be garbage collected, but cannot be. Components are retained in memory.\r\nWe have run the affected code area in StrictMode, which allowed us to identify some event leakage but even when this was addressed (by moving listeners to componentDidMount from the constructor) the memory leak continues. There are some findDomNode usages remaining, but even if we move those it does not fill the leak.\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n16.5.3+\r\n\r\nWe are seeking suggestions on what internal could be causing retention of components and nodes by our code, and better ways to isolate the issue.\r\n\r\nThank you!\r\n-Mike",createdAt:"2019-01-30T22:03:07Z",author:{login:"mgreer",avatarUrl:"https://avatars2.githubusercontent.com/u/643930?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14732",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"create-react-app with --typescript doesn't work",state:"CLOSED",number:14734,body:'\x3c!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n--\x3e\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\nReport a bug\r\n\r\n**What is the current behavior?**\r\nWhen I create a new project using ```npx create-react-app project-geo-semantic-react --typescript```, the generate app in a Javascript App and not a Typescript App.\r\nFor example, the package.json doesn\'t contains typescript dependencies :\r\n```\r\n  "private": true,\r\n  "dependencies": {\r\n    "react": "^16.7.0",\r\n    "react-dom": "^16.7.0",\r\n    "react-scripts": "2.1.3"\r\n  },\r\n  "scripts": {\r\n    "start": "react-scripts start",\r\n    "build": "react-scripts build",\r\n    "test": "react-scripts test",\r\n    "eject": "react-scripts eject"\r\n  },\r\n```\r\n\r\n\r\n**What is the expected behavior?**\r\nUsing --typescript parameters, a configured typescript project is generated.\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\nI\'m working on Mac OS with :\r\n+ react@16.7.0\r\n+ react-scripts@2.1.3\r\n+ react-dom@16.7.0\r\n\r\n',createdAt:"2019-01-31T03:51:50Z",author:{login:"ZeJ0hn",avatarUrl:"https://avatars1.githubusercontent.com/u/38920448?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14734",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"How to prevent first load in ssr?",state:"CLOSED",number:14736,body:"I'm having a problem, my local code works fine, but on the server it has a first load error but I don't know where the error comes from, I need help how to prevent pre-loading!\r\n",createdAt:"2019-01-31T09:13:17Z",author:{login:"phucvo0709",avatarUrl:"https://avatars0.githubusercontent.com/u/35060381?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14736",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"React.cloneElement loses focus",state:"CLOSED",number:14737,body:"\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\n\r\nbug\r\n\r\n**What is the current behavior?**\r\n```\r\nReact.Children.map(pairList, child => React.cloneElement(child, {rest}))\r\n```\r\n`<body>` got focus\r\n\r\n**What is the expected behavior?**\r\n\r\nThe React.node being copied don't lose focus\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\nReact v16.7/Chrome 72/MacOS Mojave\r\n",createdAt:"2019-01-31T10:58:23Z",author:{login:"yoyo837",avatarUrl:"https://avatars0.githubusercontent.com/u/6134547?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14737",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Dependency-based reinitialization of useState",state:"OPEN",number:14738,body:"**Do you want to request a *feature* or report a *bug*?**\r\n\r\nFeature\r\n\r\n**What is the current behavior?**\r\n\r\nConsider I want to have a dynamically calculated list of options, and a piece of state that represents the currently selected option. I can achieve this using hooks as follows:\r\n\r\n```js\r\nconst options = useMemo(() => {\r\n  // Calculate the options\r\n}, [dep1, dep2]);\r\n\r\nconst [choice, setChoice] = useState(options[0]);\r\n\r\nconst result = useMemo(() => {\r\n  // Calculate the displayed result\r\n}, [choice]);\r\n```\r\n\r\nHowever, a problem occurs if either `dep1` or `dep2` changes. The list of options changes, which means `choice` may no longer be valid. To fix this, I must split `choice` into a selected value and a memoized value that checks for validity:\r\n\r\n```js\r\nconst [selectedChoice, setSelectedChoice] = useState(options[0]);\r\n\r\nconst choice = useMemo(() => {\r\n  if (options.includes(selectedChoice) {\r\n    return selectedChoice;\r\n  } else {\r\n    setSelectedChoice(options[0]);\r\n    return options[0];\r\n  }\r\n}, [options, selectedChoice]);\r\n```\r\n\r\n**What is the expected behavior?**\r\n\r\nIt would useful if we could declare dependencies for `useState`, in the same way that we can for `useMemo`, and have the state reset back to the initial state if they change:\r\n\r\n```js\r\nconst [choice, setChoice] = useState(options[0], [options]);\r\n```\r\n\r\nIn order to allow preserving the current value if its valid, React could supply `prevState` to the initial state factory function, if any exists, e.g.\r\n\r\n```js\r\nconst [choice, setChoice] = useState(prevState => {\r\n  if (prevState && options.includes(prevState) {\r\n    return prevState;\r\n else {\r\n    return options[0];\r\n }\r\n}, [options]);\r\n```\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\n16.8.0-alpha.1\r\n",createdAt:"2019-01-31T13:34:17Z",author:{login:"jonrimmer",avatarUrl:"https://avatars1.githubusercontent.com/u/183786?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14738",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Still a \"NotFoundError: Failed to execute 'removeChild' on 'Node'\"",state:"OPEN",number:14740,body:"I smashed again the error \"NotFoundError: Failed to execute 'removeChild' on 'Node'\" too.\r\n\r\nAfter reading tons of threads about it I realized it's a pretty common error, however I couldn't figure out how all the provided solutions could apply to my case: I neither do DOM mutations by hand nor swallow exceptions. \r\n\r\nI think I can reduce the relevant parts of the code as follows: \r\n\r\n**SearchDomains.js**\r\n```\r\n handleAddToCart = domain => {\r\n    if (!domain) {\r\n      return false\r\n    }\r\n\r\n    return this.props.addToCart(domain)\r\n      .catch(e => {\r\n        const errorCode = get(e, 'data.code')\r\n\r\n        if (errorCode === 'DomainTaken') {\r\n          this.setState({\r\n            domains: {\r\n              ...this.state.domains,\r\n              [domain.suggestion]: {\r\n                ...this.state.domains[domain.suggestion],\r\n                availability: STATUS_UNAVAILABLE\r\n              }\r\n            },\r\n            showPremiumDomainModalWarning: true\r\n          })\r\n        } else {\r\n          this.openErrorModal()\r\n        }\r\n\r\n        return Promise.reject(e)\r\n      })\r\n  }\r\n\r\nrender () {\r\n    const domains = this.getDomains()\r\n    const visibleDomains = this.getVisibleDomains()\r\n\r\n    return !this.state.isLoading && (\r\n      <Fragment>\r\n        <LoadMore\r\n          isLoading={this.state.isSearching}\r\n          total={domains.length}\r\n          count={visibleDomains.length}\r\n          loadingLabel='Searching, please wait...'\r\n          infinite\r\n          onLoadMore={this.handleLoadMore}\r\n        >\r\n          {React.cloneElement(this.props.children, {\r\n            domains: this.getDomains(),\r\n            visibleDomains: this.getVisibleDomains(),\r\n            allVisibleDomains: this.getVisibleDomains(0, false),\r\n            onChangeFilter: this.handleFilters,\r\n            onChangeFormFilter: this.handleSort,\r\n            onSearchChange: this.handleSearchChange,\r\n            onAddToCart: this.handleAddToCart,\r\n            ...omit(this.state, 'domains')\r\n          })}\r\n        </LoadMore>\r\n        {this.state.showTimeoutAlert && this.renderTimeoutAlert()}\r\n        {this.state.showErrorModal &&\r\n          <CartResourcesLimitExceeded\r\n            type='domain'\r\n            onClose={this.closeErrorModal}\r\n          />\r\n        }\r\n        <Popup\r\n          isOpen={this.state.showPremiumDomainModalWarning}\r\n          onClose={this.closePremiumModal}\r\n          icon={{ name: 'ic-warning', size: 'md', color: '#f6852f' }}\r\n          title='This is a premium domain'\r\n          message={\r\n            <span>Premium domain names are not registrable via Rebrandly at the moment.\r\n              <A href='https://support.rebrandly.com/hc/en-us/articles/224626587' size='lg' target='_blank'> Read more</A>\r\n            </span>\r\n          }\r\n          primaryButtonProps={{ label: 'Select another domain', onClick: this.closePremiumModal }}\r\n        />\r\n      </Fragment>\r\n    )\r\n  }\r\n```\r\n\r\n\r\n**DomainItem.js:**\r\n\r\n```\r\nrender () {\r\n    let discount\r\n\r\n    if (this.props.isCoupon) {\r\n      discount = <Text className='Text--Disable line-through m-r-24'>${this.props.renewalPrice}</Text>\r\n    } else {\r\n      discount = this.props.currentPrice < this.props.renewalPrice\r\n        ? <Text size='x-small' className='Text--Disable m-r-4'>\r\n          <span className='line-through m-r-4'>\r\n            ${this.props.renewalPrice}\r\n          </span>\r\n          NOW\r\n        </Text>\r\n        : <Text size='x-small' className='Text--Disable m-r-4'>\r\n          ONLY\r\n        </Text>\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        {this.props.availability === STATUS_AVAILABLE\r\n          ? <Fragment>\r\n            {discount}\r\n            {!this.props.isCoupon &&\r\n              <Tooltip\r\n                overlay={<span>First year, then ${this.props.renewalPrice} renewal. <RouterLink target='_blank' href='https://support.rebrandly.com/hc/en-us/articles/225551448-Domain-Pricing-for-Custom-Short-Urls'>Learn more</RouterLink></span>}\r\n                placement='top'\r\n              >\r\n                <Text className='DomainItem__azure m-r-24'>${this.props.currentPrice}</Text>\r\n              </Tooltip>\r\n            }\r\n            {this.state.isLoading\r\n              ? <Loading size='md' />\r\n              : <Button\r\n                isLoading={this.state.isLoading}\r\n                {...this.props.actionButtonProps}\r\n                onClick={this.handleOnClick}\r\n              />\r\n            }\r\n          </Fragment>\r\n          : <Text className='DomainItem__unavailable Text--SubDetail' size='small'>\r\n            {!!this.props.availability && (this.props.availability === STATUS_UNKNOWN ? 'Couldn\u2019t check domain details' : 'Not available')}\r\n          </Text>\r\n        }\r\n      </Fragment>\r\n    )\r\n  }\r\n```\r\n\r\nI was pretty sure there had to be some messed (async) logic changing the cards under the hood between a render cycle and the next one, so I spent some time trying to debug all the updates,  looking for the reason that was driving to an inconsistency in the DOM reconciliation.  \r\n\r\nIndeed, I figured out the issue was with that ternary operator in the DomainItem's `render` function: dropping temporarily the \"else\" case, thus, preventing react from removing a content and injecting a different one, switched off the error.  Of course this was not an acceptable fix.\r\n\r\nThen, I realized that everything could be solved by just removing the wrapping `<Fragment>` in the return statement of DomainItem's `render` function. Now everything works fine:\r\n\r\n ```\r\nreturn this.props.availability === STATUS_AVAILABLE\r\n      ? <Fragment>\r\n        {discount}\r\n        {!this.props.isCoupon &&\r\n        <Tooltip\r\n          overlay={<span>First year, then ${this.props.renewalPrice} renewal. <RouterLink target='_blank' href='https://support.rebrandly.com/hc/en-us/articles/225551448-Domain-Pricing-for-Custom-Short-Urls'>Learn more</RouterLink></span>}\r\n          placement='top'\r\n        >\r\n          <Text className='DomainItem__azure m-r-24'>${this.props.currentPrice}</Text>\r\n        </Tooltip>\r\n        }\r\n        {this.state.isLoading\r\n          ? <Loading size='md' />\r\n          : <Button\r\n            isLoading={this.state.isLoading}\r\n            {...this.props.actionButtonProps}\r\n            onClick={this.handleOnClick}\r\n          />\r\n        }\r\n      </Fragment>\r\n      : <Text className='DomainItem__unavailable Text--SubDetail' size='small'>\r\n        {!!this.props.availability && (this.props.availability === STATUS_UNKNOWN ? 'Couldn\u2019t check domain details' : 'Not available')}\r\n      </Text>\r\n```\r\n\r\nDidn't know if this is an intended behaviour so I thought it was worthy to report it.\r\n",createdAt:"2019-01-31T14:36:41Z",author:{login:"marco-gagliardi",avatarUrl:"https://avatars3.githubusercontent.com/u/2972151?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14740",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Can't load graphiql client due to redirect header not including CORS policy",state:"CLOSED",number:14741,body:"\x3c!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n--\x3e\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\nbug\r\n\r\n**What is the current behavior?**\r\ncurrently, can't load graphiql (interactive query interface) on my react application. when trying to fetch react-dom.production.min.js (from https://unpkg.com/react-dom@16/umd/react-dom.production.min.js), a 302 is returned, and the new redirect request does not include `access-control-allow-origin` in header when trying to access https://unpkg.com/react-dom@16.7.0/umd/react-dom.production.min.js. This is preventing the script from loading the causes the page to stop loading, only displaying the word `loading` in the dom. \r\n\r\nThis seems to be limited to my computer, my coworker's computers can still access graphiql.\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem. Your bug will get fixed much faster if we can run your code and it doesn't have dependencies other than React. Paste the link to your JSFiddle (https://jsfiddle.net/Luktwrdm/) or CodeSandbox (https://codesandbox.io/s/new) example below:**\r\n\r\nTried visiting our webapp where graphiql is supposed to be loaded from our react-based webapp.\r\n\r\n**What is the expected behavior?**\r\nExpected behavior is the page loads with the graphiql interface.\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\nThis stopped working yesterday (1/30/19). Running Macbook Pro, 10.14.3 (18D42), Chrome (Version 72.0.3626.81 (Official Build) (64-bit)). React 16.7.0\r\n",createdAt:"2019-01-31T20:33:29Z",author:{login:"bslugger",avatarUrl:"https://avatars0.githubusercontent.com/u/3834941?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14741",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Suspense Fallback Doesn't Appear in DOM",state:"OPEN",number:14742,body:"**Do you want to request a *feature* or report a *bug*?**\r\nBug\r\n\r\n**What is the current behavior?**\r\nI would like to be able to programmatically set focus to an element inside the fallback of a Suspense component. I'm able to verify that componentDidMount fires with my current setup but I never get focus on the desired element nor does the screen reader I test with announce the \"Loading...\" text. I believe this is because the fallback is not appearing in the DOM (at least from what I can see in dev mode).\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem.**\r\n\r\nBelow is a minimal version of my setup, although I'm not sure how to force delay the lazy loaded component in order to show the Loading fallback.\r\nExample: https://codesandbox.io/s/qvmp1jlol6\r\n\r\n**What is the expected behavior?**\r\nFocus is set to the h1 tag with the loading text (and a screen reader is able to announce it, but I don't expect that to be addressed in this issue).\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\nReact/React-dom 16.7.0\r\nThis behavior was not working in IE or Chrome. \r\n",createdAt:"2019-01-31T21:25:29Z",author:{login:"kevinwainczak",avatarUrl:"https://avatars0.githubusercontent.com/u/14118162?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14742",labels:{edges:[{node:{name:"Component: Suspense",__typename:"Label"},__typename:"LabelEdge"},{node:{name:"Type: Needs Investigation",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"React.createElement mangles array passed as props",state:"OPEN",number:14743,body:"**Do you want to request a *feature* or report a *bug*?**\r\n\r\nBug. I think. Maybe.\r\n\r\n**What is the current behavior?**\r\n\r\nhttps://jsfiddle.net/oyn139b4/2/\r\n\r\nAn array passed as props gets transformed into an object, meaning that attempting to call array methods on the props in the component fails. This behaviour, and why it happens/is necessary, is not documented anywhere.\r\n\r\nThere was a warning added to this effect in [pull 6134](https://github.com/facebook/react/pull/6134) but it's gone AWOL somewhere along the line.\r\n\r\n**What is the expected behavior?**\r\n\r\n1. Update React to not mangle arrays of props.\r\n\r\n-or-\r\n\r\n1. Add an explanation as to why props cannot be a non-object to the React documentation.\r\n2. Restore the warning added in pull 6134 to prevent people from making this mistake in the future.\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\nLatest, all browsers/OSes, don't know.",createdAt:"2019-02-01T12:37:46Z",author:{login:"IanKemp",avatarUrl:"https://avatars2.githubusercontent.com/u/1726434?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14743",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"oks",state:"CLOSED",number:14745,body:"",createdAt:"2019-02-01T16:32:40Z",author:{login:"webViking",avatarUrl:"https://avatars1.githubusercontent.com/u/42837489?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14745",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"adding if directive ",state:"CLOSED",number:14749,body:"if you added if directive to any element for showing the element or not that would be better than making a js expression in my opinion \r\n\r\n**regular way**\r\n```js\r\nconst App = (props) => {reactif={true}\r\n    let name = props.name;\r\n    return (\r\n        <div >\r\n            {name === 'koko' ? <div className=\"yousef\">{name}</div> : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nReactDOM.render(<App name=\"koko\" />, document.getElementById('app'))\r\n```\r\n**my way** ( i edited the react file btw and it worked )\r\n```js\r\nconst App = (props) => {\r\n    let name = props.name;\r\n    return (\r\n        <div >\r\n            <div className=\"yousef\" reactif={name === 'koko'}>{name}</div> \r\n        </div>\r\n    )\r\n}\r\n\r\nReactDOM.render(<App name=\"koko\" />, document.getElementById('app'))\r\n```\r\n**mmm**\r\ni hope you talk that into consideration \r\ni mean less than 1kb will not make difference :\"D\r\n\r\n**React code**\r\n```js\r\nvar RESERVED_PROPS = {\r\n  key: true,\r\n  ref: true,\r\n  __self: true,\r\n  __source: true,\r\n  reactif: true\r\n};\r\n\r\nif (config != null) {\r\n    if (hasValidRef(config)) {\r\n      ref = config.ref;\r\n    }\r\n    if (hasValidKey(config)) {\r\n      key = '' + config.key;\r\n    }\r\n    // i added that\r\n    if (config.reactif){\r\n      reactif = config.reactif\r\n      if (reactif === false){\r\n        return null\r\n      } else if (reactif !== true || reactif !== false){\r\n        console.error('reactif expression didn\\'t return bolean value')\r\n      }\r\n    }\r\n\r\n    self = config.__self === undefined ? null : config.__self;\r\n    source = config.__source === undefined ? null : config.__source;\r\n    // Remaining properties are added to a new props object\r\n    for (propName in config) {\r\n      if (hasOwnProperty$1.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\r\n        props[propName] = config[propName];\r\n      }\r\n    }\r\n }\r\n```",createdAt:"2019-02-03T00:52:14Z",author:{login:"yousefelgoharyx",avatarUrl:"https://avatars1.githubusercontent.com/u/30435916?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14749",labels:{edges:[{node:{name:"Type: Feature Request",__typename:"Label"},__typename:"LabelEdge"}],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"},{node:{title:"Simultaneous key events in effect handled out of order",state:"OPEN",number:14750,body:"**Do you want to request a *feature* or report a *bug*?**\r\n\r\nReport a bug.\r\n\r\n**What is the current behavior?**\r\n\r\nI have an app that's registering event listeners for `window`'s key events (via `useEffect`). Those event listeners are triggering state updates (via `useState`). I think I have found a bug where simultaneous key events occurring in the same frame (whether down or up) will be handled out of order, causing state to becoming out of sync.\r\n\r\nTake the following simple app (https://codesandbox.io/s/1z3v9zrk4j). I've kept this as keyup only for simplicity.\r\n\r\n```\r\nfunction App() {\r\n  const [keys, setKeys] = useState([]);\r\n\r\n  console.log('App', keys);\r\n\r\n  const onKeyUp = function (event) {\r\n    console.log('onKeyUp', event.key, keys);\r\n\r\n    setKeys([...keys, event.key]);\r\n  };\r\n\r\n  useEffect(function () {\r\n    console.log('effect', keys);\r\n\r\n    window.addEventListener('keyup', onKeyUp);\r\n\r\n    return function () {\r\n      console.log('removing event listener', keys);\r\n\r\n      window.removeEventListener('keyup', onKeyUp);\r\n    };\r\n  });\r\n\r\n  return <p>{keys.join(', ')}</p>;\r\n}\r\n```\r\n\r\nIf I press down any two keys, e.g. the \"q\" and \"w\" keys, and then release them at precisely the same time, the following happens:\r\n\r\n- The `keyup` event listener for `w` is called, which in turn calls `setKeys` with `['w']`\r\n- `App` is re-rendered with `keys === ['w']`\r\n- The `keyup` event listener for `q` is called, which in turn calls `setKeys` with `['q']`\r\n- The effect's cleanup function is called, removing the event listener with `keys === []`\r\n- The effect is run again, the event listener being added with `keys === ['w']`\r\n- `App` is re-rendered with `keys === ['q']`\r\n- The effect's cleanup function is called, removing the event listener with `keys ===['w']`\r\n- The effect is run again, the event listener being added with `keys === ['q']`\r\n\r\nThis results in `keys === ['q']`. The render with `w` has been lost.\r\n\r\nWith three keys, only two keys are reliably shown. Four keys - only two are reliably shown.\r\n\r\nIf I add another `useState` call, the first `useState` has no issues - all keys are reliably detected. The second `useState` call has the same issue as the original example. See https://codesandbox.io/s/0yo51n5wv:\r\n\r\n```\r\nfunction App() {\r\n  const [keys, setKeys] = useState([]); // works\r\n  const [keysTwo, setKeysTwo] = useState([]); // does not work\r\n\r\n  console.log(\"rendering App\", keys);\r\n\r\n  const onKeyUp = function(event) {\r\n    console.log(\"onKeyUp event received\", event.key, keys);\r\n\r\n    setKeys([...keys, event.key]);\r\n    setKeysTwo([...keysTwo, event.key]);\r\n  };\r\n\r\n  useEffect(function() {\r\n    console.log(\"adding event listener\", keys);\r\n\r\n    window.addEventListener(\"keyup\", onKeyUp);\r\n\r\n    return function() {\r\n      console.log(\"removing event listener\", keys);\r\n\r\n      window.removeEventListener(\"keyup\", onKeyUp);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <p>Keyups received:</p>\r\n      <p>{keys.join(\", \")}</p>\r\n      <p>{keysTwo.join(\", \")}</p>\r\n      <button onClick={() => (setKeys([]), setKeysTwo([]))}>Reset</button>\r\n    </div>\r\n  );\r\n}\r\n```\r\n\r\n**What is the expected behavior?**\r\n\r\nI would expect the final state array to contain all keys released, in order. There are a few workarounds for this issue (e.g. passing a function to `setState` to retrieve the current value instead of using the rendered value), but from the documentation it seems that is an escape hatch for use when the effect's callback is not renewed on each state change, and should not be necessary in this case (unless I've misunderstood).\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\nIt happens on both versions that support hooks - `16.8.0-alpha.0` and `16.8.0-alpha.1`. This is on Chrome/Safari/Firefox on MacOS Mojave.\r\n",createdAt:"2019-02-03T02:57:23Z",author:{login:"stuartkeith",avatarUrl:"https://avatars0.githubusercontent.com/u/808880?v=4",__typename:"User"},assignees:{nodes:[],__typename:"UserConnection"},url:"https://github.com/facebook/react/issues/14750",labels:{edges:[],__typename:"LabelConnection"},__typename:"Issue"},__typename:"IssueEdge"}],__typename:"IssueConnection"},__typename:"Repository"}}}},69:function(e,t,n){e.exports=n(175)}},[[69,2,1]]]);
//# sourceMappingURL=main.fff4aad5.chunk.js.map